// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__17818__delegate = function (args){
return console.log.apply(console,(function (){var G__17817 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__17817) : cljs.core.into_array.call(null,G__17817));
})());
};
var G__17818 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17819__i = 0, G__17819__a = new Array(arguments.length -  0);
while (G__17819__i < G__17819__a.length) {G__17819__a[G__17819__i] = arguments[G__17819__i + 0]; ++G__17819__i;}
  args = new cljs.core.IndexedSeq(G__17819__a,0);
} 
return G__17818__delegate.call(this,args);};
G__17818.cljs$lang$maxFixedArity = 0;
G__17818.cljs$lang$applyTo = (function (arglist__17820){
var args = cljs.core.seq(arglist__17820);
return G__17818__delegate(args);
});
G__17818.cljs$core$IFn$_invoke$arity$variadic = G__17818__delegate;
return G__17818;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__17822 = x;
return goog.isString(G__17822);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__17824 = x__$1;
return goog.typeOf(G__17824);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12595__auto__ = ty;
if(cljs.core.truth_(and__12595__auto__)){
return ty.cljs$lang$type;
} else {
return and__12595__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__17826 = obj;
return goog.typeOf(G__17826);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__17828 = Symbol;
return goog.typeOf(G__17828);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13496__auto___17830 = len;
var i_17831 = (0);
while(true){
if((i_17831 < n__13496__auto___17830)){
(new_arr[i_17831] = (arr[i_17831]));

var G__17832 = (i_17831 + (1));
i_17831 = G__17832;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__17833 = (i + (1));
i = G__17833;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__17842__delegate = function (array,i,idxs){
var G__17839 = aget;
var G__17840 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__17841 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__17839,G__17840,G__17841) : cljs.core.apply.call(null,G__17839,G__17840,G__17841));
};
var G__17842 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__17843__i = 0, G__17843__a = new Array(arguments.length -  2);
while (G__17843__i < G__17843__a.length) {G__17843__a[G__17843__i] = arguments[G__17843__i + 2]; ++G__17843__i;}
  idxs = new cljs.core.IndexedSeq(G__17843__a,0);
} 
return G__17842__delegate.call(this,array,i,idxs);};
G__17842.cljs$lang$maxFixedArity = 2;
G__17842.cljs$lang$applyTo = (function (arglist__17844){
var array = cljs.core.first(arglist__17844);
arglist__17844 = cljs.core.next(arglist__17844);
var i = cljs.core.first(arglist__17844);
var idxs = cljs.core.rest(arglist__17844);
return G__17842__delegate(array,i,idxs);
});
G__17842.cljs$core$IFn$_invoke$arity$variadic = G__17842__delegate;
return G__17842;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__17845 = null;
if (arguments.length > 2) {
var G__17846__i = 0, G__17846__a = new Array(arguments.length -  2);
while (G__17846__i < G__17846__a.length) {G__17846__a[G__17846__i] = arguments[G__17846__i + 2]; ++G__17846__i;}
G__17845 = new cljs.core.IndexedSeq(G__17846__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__17845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__17855__delegate = function (array,idx,idx2,idxv){
var G__17851 = aset;
var G__17852 = (array[idx]);
var G__17853 = idx2;
var G__17854 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__17851,G__17852,G__17853,G__17854) : cljs.core.apply.call(null,G__17851,G__17852,G__17853,G__17854));
};
var G__17855 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__17856__i = 0, G__17856__a = new Array(arguments.length -  3);
while (G__17856__i < G__17856__a.length) {G__17856__a[G__17856__i] = arguments[G__17856__i + 3]; ++G__17856__i;}
  idxv = new cljs.core.IndexedSeq(G__17856__a,0);
} 
return G__17855__delegate.call(this,array,idx,idx2,idxv);};
G__17855.cljs$lang$maxFixedArity = 3;
G__17855.cljs$lang$applyTo = (function (arglist__17857){
var array = cljs.core.first(arglist__17857);
arglist__17857 = cljs.core.next(arglist__17857);
var idx = cljs.core.first(arglist__17857);
arglist__17857 = cljs.core.next(arglist__17857);
var idx2 = cljs.core.first(arglist__17857);
var idxv = cljs.core.rest(arglist__17857);
return G__17855__delegate(array,idx,idx2,idxv);
});
G__17855.cljs$core$IFn$_invoke$arity$variadic = G__17855__delegate;
return G__17855;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__17858 = null;
if (arguments.length > 3) {
var G__17859__i = 0, G__17859__a = new Array(arguments.length -  3);
while (G__17859__i < G__17859__a.length) {G__17859__a[G__17859__i] = arguments[G__17859__i + 3]; ++G__17859__i;}
G__17858 = new cljs.core.IndexedSeq(G__17859__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__17858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__17865 = (function (a,x){
a.push(x);

return a;
});
var G__17866 = [];
var G__17867 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17865,G__17866,G__17867) : cljs.core.reduce.call(null,G__17865,G__17866,G__17867));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__17868__i = 0, G__17868__a = new Array(arguments.length -  2);
while (G__17868__i < G__17868__a.length) {G__17868__a[G__17868__i] = arguments[G__17868__i + 2]; ++G__17868__i;}
  args = new cljs.core.IndexedSeq(G__17868__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__17869){
var obj = cljs.core.first(arglist__17869);
arglist__17869 = cljs.core.next(arglist__17869);
var s = cljs.core.first(arglist__17869);
var args = cljs.core.rest(arglist__17869);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj17871 = {};
return obj17871;
})();


cljs.core.IFn = (function (){var obj17873 = {};
return obj17873;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17919 = x__13253__auto__;
return goog.typeOf(G__17919);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17921 = x__13253__auto__;
return goog.typeOf(G__17921);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17923 = x__13253__auto__;
return goog.typeOf(G__17923);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17925 = x__13253__auto__;
return goog.typeOf(G__17925);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17927 = x__13253__auto__;
return goog.typeOf(G__17927);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17929 = x__13253__auto__;
return goog.typeOf(G__17929);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17931 = x__13253__auto__;
return goog.typeOf(G__17931);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17933 = x__13253__auto__;
return goog.typeOf(G__17933);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17935 = x__13253__auto__;
return goog.typeOf(G__17935);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17937 = x__13253__auto__;
return goog.typeOf(G__17937);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17939 = x__13253__auto__;
return goog.typeOf(G__17939);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17941 = x__13253__auto__;
return goog.typeOf(G__17941);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17943 = x__13253__auto__;
return goog.typeOf(G__17943);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17945 = x__13253__auto__;
return goog.typeOf(G__17945);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17947 = x__13253__auto__;
return goog.typeOf(G__17947);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17949 = x__13253__auto__;
return goog.typeOf(G__17949);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17951 = x__13253__auto__;
return goog.typeOf(G__17951);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17953 = x__13253__auto__;
return goog.typeOf(G__17953);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17955 = x__13253__auto__;
return goog.typeOf(G__17955);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17957 = x__13253__auto__;
return goog.typeOf(G__17957);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17959 = x__13253__auto__;
return goog.typeOf(G__17959);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._invoke[(function (){var G__17961 = x__13253__auto__;
return goog.typeOf(G__17961);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._invoke["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj17963 = {};
return obj17963;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12595__auto__ = value;
if(and__12595__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12595__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13253__auto__ = (((value == null))?null:value);
return (function (){var or__12607__auto__ = (cljs.core._clone[(function (){var G__17967 = x__13253__auto__;
return goog.typeOf(G__17967);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._clone["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj17969 = {};
return obj17969;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._count[(function (){var G__17973 = x__13253__auto__;
return goog.typeOf(G__17973);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._count["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj17975 = {};
return obj17975;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._empty[(function (){var G__17979 = x__13253__auto__;
return goog.typeOf(G__17979);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._empty["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj17981 = {};
return obj17981;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._conj[(function (){var G__17985 = x__13253__auto__;
return goog.typeOf(G__17985);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._conj["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj17987 = {};
return obj17987;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._nth[(function (){var G__17993 = x__13253__auto__;
return goog.typeOf(G__17993);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._nth["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._nth[(function (){var G__17995 = x__13253__auto__;
return goog.typeOf(G__17995);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._nth["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj17997 = {};
return obj17997;
})();


cljs.core.ISeq = (function (){var obj17999 = {};
return obj17999;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._first[(function (){var G__18003 = x__13253__auto__;
return goog.typeOf(G__18003);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._first["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._rest[(function (){var G__18007 = x__13253__auto__;
return goog.typeOf(G__18007);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._rest["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj18009 = {};
return obj18009;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._next[(function (){var G__18013 = x__13253__auto__;
return goog.typeOf(G__18013);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._next["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18015 = {};
return obj18015;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._lookup[(function (){var G__18021 = x__13253__auto__;
return goog.typeOf(G__18021);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._lookup["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._lookup[(function (){var G__18023 = x__13253__auto__;
return goog.typeOf(G__18023);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._lookup["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18025 = {};
return obj18025;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18029 = x__13253__auto__;
return goog.typeOf(G__18029);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._assoc[(function (){var G__18033 = x__13253__auto__;
return goog.typeOf(G__18033);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._assoc["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18035 = {};
return obj18035;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._dissoc[(function (){var G__18039 = x__13253__auto__;
return goog.typeOf(G__18039);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18041 = {};
return obj18041;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._key[(function (){var G__18045 = x__13253__auto__;
return goog.typeOf(G__18045);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._key["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._val[(function (){var G__18049 = x__13253__auto__;
return goog.typeOf(G__18049);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._val["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18051 = {};
return obj18051;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._disjoin[(function (){var G__18055 = x__13253__auto__;
return goog.typeOf(G__18055);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18057 = {};
return obj18057;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._peek[(function (){var G__18061 = x__13253__auto__;
return goog.typeOf(G__18061);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._peek["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._pop[(function (){var G__18065 = x__13253__auto__;
return goog.typeOf(G__18065);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._pop["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj18067 = {};
return obj18067;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._assoc_n[(function (){var G__18071 = x__13253__auto__;
return goog.typeOf(G__18071);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj18073 = {};
return obj18073;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._deref[(function (){var G__18077 = x__13253__auto__;
return goog.typeOf(G__18077);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._deref["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj18079 = {};
return obj18079;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._deref_with_timeout[(function (){var G__18083 = x__13253__auto__;
return goog.typeOf(G__18083);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj18085 = {};
return obj18085;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._meta[(function (){var G__18089 = x__13253__auto__;
return goog.typeOf(G__18089);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._meta["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj18091 = {};
return obj18091;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._with_meta[(function (){var G__18095 = x__13253__auto__;
return goog.typeOf(G__18095);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj18097 = {};
return obj18097;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._reduce[(function (){var G__18103 = x__13253__auto__;
return goog.typeOf(G__18103);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._reduce["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._reduce[(function (){var G__18105 = x__13253__auto__;
return goog.typeOf(G__18105);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._reduce["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj18107 = {};
return obj18107;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._kv_reduce[(function (){var G__18111 = x__13253__auto__;
return goog.typeOf(G__18111);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj18113 = {};
return obj18113;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._equiv[(function (){var G__18117 = x__13253__auto__;
return goog.typeOf(G__18117);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._equiv["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj18119 = {};
return obj18119;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._hash[(function (){var G__18123 = x__13253__auto__;
return goog.typeOf(G__18123);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._hash["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj18125 = {};
return obj18125;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._seq[(function (){var G__18129 = x__13253__auto__;
return goog.typeOf(G__18129);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._seq["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj18131 = {};
return obj18131;
})();


cljs.core.IList = (function (){var obj18133 = {};
return obj18133;
})();


cljs.core.IRecord = (function (){var obj18135 = {};
return obj18135;
})();


cljs.core.IReversible = (function (){var obj18137 = {};
return obj18137;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._rseq[(function (){var G__18141 = x__13253__auto__;
return goog.typeOf(G__18141);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._rseq["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj18143 = {};
return obj18143;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._sorted_seq[(function (){var G__18147 = x__13253__auto__;
return goog.typeOf(G__18147);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._sorted_seq_from[(function (){var G__18151 = x__13253__auto__;
return goog.typeOf(G__18151);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._entry_key[(function (){var G__18155 = x__13253__auto__;
return goog.typeOf(G__18155);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._comparator[(function (){var G__18159 = x__13253__auto__;
return goog.typeOf(G__18159);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._comparator["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj18161 = {};
return obj18161;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12595__auto__ = writer;
if(and__12595__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12595__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13253__auto__ = (((writer == null))?null:writer);
return (function (){var or__12607__auto__ = (cljs.core._write[(function (){var G__18165 = x__13253__auto__;
return goog.typeOf(G__18165);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._write["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12595__auto__ = writer;
if(and__12595__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12595__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13253__auto__ = (((writer == null))?null:writer);
return (function (){var or__12607__auto__ = (cljs.core._flush[(function (){var G__18169 = x__13253__auto__;
return goog.typeOf(G__18169);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._flush["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj18171 = {};
return obj18171;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._pr_writer[(function (){var G__18175 = x__13253__auto__;
return goog.typeOf(G__18175);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj18177 = {};
return obj18177;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12595__auto__ = d;
if(and__12595__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12595__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13253__auto__ = (((d == null))?null:d);
return (function (){var or__12607__auto__ = (cljs.core._realized_QMARK_[(function (){var G__18181 = x__13253__auto__;
return goog.typeOf(G__18181);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj18183 = {};
return obj18183;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._notify_watches[(function (){var G__18187 = x__13253__auto__;
return goog.typeOf(G__18187);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._add_watch[(function (){var G__18191 = x__13253__auto__;
return goog.typeOf(G__18191);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12595__auto__ = this$;
if(and__12595__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12595__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13253__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12607__auto__ = (cljs.core._remove_watch[(function (){var G__18195 = x__13253__auto__;
return goog.typeOf(G__18195);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj18197 = {};
return obj18197;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._as_transient[(function (){var G__18201 = x__13253__auto__;
return goog.typeOf(G__18201);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj18203 = {};
return obj18203;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._conj_BANG_[(function (){var G__18207 = x__13253__auto__;
return goog.typeOf(G__18207);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18211 = x__13253__auto__;
return goog.typeOf(G__18211);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18213 = {};
return obj18213;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18217 = x__13253__auto__;
return goog.typeOf(G__18217);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18219 = {};
return obj18219;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18223 = x__13253__auto__;
return goog.typeOf(G__18223);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18225 = {};
return obj18225;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18229 = x__13253__auto__;
return goog.typeOf(G__18229);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._pop_BANG_[(function (){var G__18233 = x__13253__auto__;
return goog.typeOf(G__18233);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18235 = {};
return obj18235;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12595__auto__ = tcoll;
if(and__12595__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13253__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12607__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18239 = x__13253__auto__;
return goog.typeOf(G__18239);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18241 = {};
return obj18241;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._compare[(function (){var G__18245 = x__13253__auto__;
return goog.typeOf(G__18245);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._compare["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18247 = {};
return obj18247;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._drop_first[(function (){var G__18251 = x__13253__auto__;
return goog.typeOf(G__18251);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18253 = {};
return obj18253;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._chunked_first[(function (){var G__18257 = x__13253__auto__;
return goog.typeOf(G__18257);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._chunked_rest[(function (){var G__18261 = x__13253__auto__;
return goog.typeOf(G__18261);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18263 = {};
return obj18263;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._chunked_next[(function (){var G__18267 = x__13253__auto__;
return goog.typeOf(G__18267);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18269 = {};
return obj18269;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._name[(function (){var G__18273 = x__13253__auto__;
return goog.typeOf(G__18273);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._name["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._namespace[(function (){var G__18277 = x__13253__auto__;
return goog.typeOf(G__18277);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._namespace["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18279 = {};
return obj18279;
})();


cljs.core.IReset = (function (){var obj18281 = {};
return obj18281;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._reset_BANG_[(function (){var G__18285 = x__13253__auto__;
return goog.typeOf(G__18285);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18287 = {};
return obj18287;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._swap_BANG_[(function (){var G__18297 = x__13253__auto__;
return goog.typeOf(G__18297);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._swap_BANG_[(function (){var G__18299 = x__13253__auto__;
return goog.typeOf(G__18299);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._swap_BANG_[(function (){var G__18301 = x__13253__auto__;
return goog.typeOf(G__18301);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._swap_BANG_[(function (){var G__18303 = x__13253__auto__;
return goog.typeOf(G__18303);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18305 = {};
return obj18305;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12595__auto__ = o;
if(and__12595__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12595__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13253__auto__ = (((o == null))?null:o);
return (function (){var or__12607__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18309 = x__13253__auto__;
return goog.typeOf(G__18309);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18311 = {};
return obj18311;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12595__auto__ = coll;
if(and__12595__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12595__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13253__auto__ = (((coll == null))?null:coll);
return (function (){var or__12607__auto__ = (cljs.core._iterator[(function (){var G__18315 = x__13253__auto__;
return goog.typeOf(G__18315);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._iterator["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18318 = (4294967295);
var G__18319 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18318,G__18319) : Math.imul.call(null,G__18318,G__18319));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18322 = a;
var G__18323 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18322,G__18323) : Math.imul.call(null,G__18322,G__18323));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18324 = (i + (2));
var G__18325 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18324;
h1 = G__18325;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18327 = {};
return obj18327;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18328 = (i + (1));
var G__18329 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18328;
hash = G__18329;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18333 = {};
return obj18333;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18336 = o;
if(G__18336){
var bit__13283__auto__ = (G__18336.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13283__auto__) || (G__18336.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18337 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18337) : Math.floor.call(null,G__18337));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12595__auto__ = cljs.core.not(a.ns);
if(and__12595__auto__){
return b.ns;
} else {
return and__12595__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18344 = a.ns;
var G__18345 = b.ns;
return goog.array.defaultCompare(G__18344,G__18345);
})();
if(((0) === nsc)){
var G__18346 = a.name;
var G__18347 = b.name;
return goog.array.defaultCompare(G__18346,G__18347);
} else {
return nsc;
}
}
} else {
var G__18348 = a.name;
var G__18349 = b.name;
return goog.array.defaultCompare(G__18348,G__18349);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13030__auto__ = self__._hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18351 = null;
var G__18351__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18351__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18351 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18351__2.call(this,self__,coll);
case 3:
return G__18351__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18351.cljs$core$IFn$_invoke$arity$2 = G__18351__2;
G__18351.cljs$core$IFn$_invoke$arity$3 = G__18351__3;
return G__18351;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18350){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18350)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18355 = x;
if(G__18355){
var bit__13290__auto__ = null;
if(cljs.core.truth_((function (){var or__12607__auto__ = bit__13290__auto__;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return G__18355.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18355.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18355);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18355);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18357 = value;
if(G__18357){
var bit__13290__auto__ = (G__18357.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13290__auto__) || (G__18357.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18357.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18357);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18359 = coll;
if(G__18359){
var bit__13283__auto__ = (G__18359.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13283__auto__) || (G__18359.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18361 = coll;
if(G__18361){
var bit__13283__auto__ = (G__18361.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13283__auto__) || (G__18361.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18363 = coll;
if(G__18363){
var bit__13283__auto__ = (G__18363.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13283__auto__) || (G__18363.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18365 = coll;
if(G__18365){
var bit__13283__auto__ = (G__18365.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13283__auto__) || (G__18365.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18370__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18371 = y;
var G__18372 = cljs.core.first(more);
var G__18373 = cljs.core.next(more);
x = G__18371;
y = G__18372;
more = G__18373;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18370 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18374__i = 0, G__18374__a = new Array(arguments.length -  2);
while (G__18374__i < G__18374__a.length) {G__18374__a[G__18374__i] = arguments[G__18374__i + 2]; ++G__18374__i;}
  more = new cljs.core.IndexedSeq(G__18374__a,0);
} 
return G__18370__delegate.call(this,x,y,more);};
G__18370.cljs$lang$maxFixedArity = 2;
G__18370.cljs$lang$applyTo = (function (arglist__18375){
var x = cljs.core.first(arglist__18375);
arglist__18375 = cljs.core.next(arglist__18375);
var y = cljs.core.first(arglist__18375);
var more = cljs.core.rest(arglist__18375);
return G__18370__delegate(x,y,more);
});
G__18370.cljs$core$IFn$_invoke$arity$variadic = G__18370__delegate;
return G__18370;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18376 = null;
if (arguments.length > 2) {
var G__18377__i = 0, G__18377__a = new Array(arguments.length -  2);
while (G__18377__i < G__18377__a.length) {G__18377__a[G__18377__i] = arguments[G__18377__i + 2]; ++G__18377__i;}
G__18376 = new cljs.core.IndexedSeq(G__18377__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18378 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18378) : cljs.core.es6_iterator_seq.call(null,G__18378));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18379 = (n + (1));
var G__18380 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18381 = cljs.core.next(coll__$1);
n = G__18379;
hash_code = G__18380;
coll__$1 = G__18381;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18382 = (n + (1));
var G__18383 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18384 = cljs.core.next(coll__$1);
n = G__18382;
hash_code = G__18383;
coll__$1 = G__18384;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18385 = o;
return goog.getUid(G__18385);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18387 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18387) : cljs.core.deref.call(null,G__18387));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18394 = val;
var G__18395 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18394,G__18395) : f.call(null,G__18394,G__18395));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18400 = nval;
var G__18401 = (n + (1));
val = G__18400;
n = G__18401;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18396 = val__$1;
var G__18397 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18396,G__18397) : f.call(null,G__18396,G__18397));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18402 = nval;
var G__18403 = (n + (1));
val__$1 = G__18402;
n = G__18403;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18398 = val__$1;
var G__18399 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18398,G__18399) : f.call(null,G__18398,G__18399));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18404 = nval;
var G__18405 = (n + (1));
val__$1 = G__18404;
n = G__18405;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18412 = val;
var G__18413 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18412,G__18413) : f.call(null,G__18412,G__18413));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18418 = nval;
var G__18419 = (n + (1));
val = G__18418;
n = G__18419;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18414 = val__$1;
var G__18415 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18414,G__18415) : f.call(null,G__18414,G__18415));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18420 = nval;
var G__18421 = (n + (1));
val__$1 = G__18420;
n = G__18421;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18416 = val__$1;
var G__18417 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18416,G__18417) : f.call(null,G__18416,G__18417));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18422 = nval;
var G__18423 = (n + (1));
val__$1 = G__18422;
n = G__18423;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18425 = x;
if(G__18425){
var bit__13290__auto__ = (G__18425.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13290__auto__) || (G__18425.cljs$core$ICounted$)){
return true;
} else {
if((!G__18425.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18425);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18425);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18427 = x;
if(G__18427){
var bit__13290__auto__ = (G__18427.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13290__auto__) || (G__18427.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18427.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18427);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18427);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18428 = coll__$1;
var G__18429 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18428,G__18429) : cljs.core.equiv_sequential.call(null,G__18428,G__18429));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18430 = o;
var G__18431 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18430,G__18431) : cljs.core.cons.call(null,G__18430,G__18431));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18434 = coll__$1;
var G__18435 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18434,G__18435) : cljs.core.equiv_sequential.call(null,G__18434,G__18435));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18436 = cljs.core.List.EMPTY;
var G__18437 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18436,G__18437) : cljs.core.with_meta.call(null,G__18436,G__18437));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18438 = f;
var G__18439 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18438,G__18439) : cljs.core.seq_reduce.call(null,G__18438,G__18439));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18440 = f;
var G__18441 = start;
var G__18442 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18440,G__18441,G__18442) : cljs.core.seq_reduce.call(null,G__18440,G__18441,G__18442));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18443 = o;
var G__18444 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18443,G__18444) : cljs.core.cons.call(null,G__18443,G__18444));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18445 = sn;
s = G__18445;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18450__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18451 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18452 = cljs.core.first(xs);
var G__18453 = cljs.core.next(xs);
coll = G__18451;
x = G__18452;
xs = G__18453;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18450 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18454__i = 0, G__18454__a = new Array(arguments.length -  2);
while (G__18454__i < G__18454__a.length) {G__18454__a[G__18454__i] = arguments[G__18454__i + 2]; ++G__18454__i;}
  xs = new cljs.core.IndexedSeq(G__18454__a,0);
} 
return G__18450__delegate.call(this,coll,x,xs);};
G__18450.cljs$lang$maxFixedArity = 2;
G__18450.cljs$lang$applyTo = (function (arglist__18455){
var coll = cljs.core.first(arglist__18455);
arglist__18455 = cljs.core.next(arglist__18455);
var x = cljs.core.first(arglist__18455);
var xs = cljs.core.rest(arglist__18455);
return G__18450__delegate(coll,x,xs);
});
G__18450.cljs$core$IFn$_invoke$arity$variadic = G__18450__delegate;
return G__18450;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18456 = null;
if (arguments.length > 2) {
var G__18457__i = 0, G__18457__a = new Array(arguments.length -  2);
while (G__18457__i < G__18457__a.length) {G__18457__a[G__18457__i] = arguments[G__18457__i + 2]; ++G__18457__i;}
G__18456 = new cljs.core.IndexedSeq(G__18457__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18458 = cljs.core.next(s);
var G__18459 = (acc + (1));
s = G__18458;
acc = G__18459;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18461 = coll;
if(G__18461){
var bit__13283__auto__ = (G__18461.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13283__auto__) || (G__18461.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18462 = cljs.core.next(coll);
var G__18463 = (n - (1));
coll = G__18462;
n = G__18463;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18464 = cljs.core.next(coll);
var G__18465 = (n - (1));
var G__18466 = not_found;
coll = G__18464;
n = G__18465;
not_found = G__18466;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18471 = coll;
if(G__18471){
var bit__13283__auto__ = (G__18471.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13283__auto__) || (G__18471.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18472 = coll;
if(G__18472){
var bit__13290__auto__ = (G__18472.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13290__auto__) || (G__18472.cljs$core$ISeq$)){
return true;
} else {
if((!G__18472.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18472);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18472);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18473 = coll;
if(G__18473){
var bit__13283__auto__ = (G__18473.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13283__auto__) || (G__18473.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18474 = coll;
if(G__18474){
var bit__13290__auto__ = (G__18474.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13290__auto__) || (G__18474.cljs$core$ISeq$)){
return true;
} else {
if((!G__18474.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18474);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18474);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18475 = (n__$1 - (1));
var G__18476 = cljs.core.rest(xs);
n__$1 = G__18475;
xs = G__18476;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18479 = o;
if(G__18479){
var bit__13283__auto__ = (G__18479.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13283__auto__) || (G__18479.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18480 = o;
if(G__18480){
var bit__13283__auto__ = (G__18480.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13283__auto__) || (G__18480.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__18484__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__18485 = ret;
var G__18486 = cljs.core.first(kvs);
var G__18487 = cljs.core.second(kvs);
var G__18488 = cljs.core.nnext(kvs);
coll = G__18485;
k = G__18486;
v = G__18487;
kvs = G__18488;
continue;
} else {
return ret;
}
break;
}
};
var G__18484 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__18489__i = 0, G__18489__a = new Array(arguments.length -  3);
while (G__18489__i < G__18489__a.length) {G__18489__a[G__18489__i] = arguments[G__18489__i + 3]; ++G__18489__i;}
  kvs = new cljs.core.IndexedSeq(G__18489__a,0);
} 
return G__18484__delegate.call(this,coll,k,v,kvs);};
G__18484.cljs$lang$maxFixedArity = 3;
G__18484.cljs$lang$applyTo = (function (arglist__18490){
var coll = cljs.core.first(arglist__18490);
arglist__18490 = cljs.core.next(arglist__18490);
var k = cljs.core.first(arglist__18490);
arglist__18490 = cljs.core.next(arglist__18490);
var v = cljs.core.first(arglist__18490);
var kvs = cljs.core.rest(arglist__18490);
return G__18484__delegate(coll,k,v,kvs);
});
G__18484.cljs$core$IFn$_invoke$arity$variadic = G__18484__delegate;
return G__18484;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__18491 = null;
if (arguments.length > 3) {
var G__18492__i = 0, G__18492__a = new Array(arguments.length -  3);
while (G__18492__i < G__18492__a.length) {G__18492__a[G__18492__i] = arguments[G__18492__i + 3]; ++G__18492__i;}
G__18491 = new cljs.core.IndexedSeq(G__18492__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__18491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__18495__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18496 = ret;
var G__18497 = cljs.core.first(ks);
var G__18498 = cljs.core.next(ks);
coll = G__18496;
k = G__18497;
ks = G__18498;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18495 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18499__i = 0, G__18499__a = new Array(arguments.length -  2);
while (G__18499__i < G__18499__a.length) {G__18499__a[G__18499__i] = arguments[G__18499__i + 2]; ++G__18499__i;}
  ks = new cljs.core.IndexedSeq(G__18499__a,0);
} 
return G__18495__delegate.call(this,coll,k,ks);};
G__18495.cljs$lang$maxFixedArity = 2;
G__18495.cljs$lang$applyTo = (function (arglist__18500){
var coll = cljs.core.first(arglist__18500);
arglist__18500 = cljs.core.next(arglist__18500);
var k = cljs.core.first(arglist__18500);
var ks = cljs.core.rest(arglist__18500);
return G__18495__delegate(coll,k,ks);
});
G__18495.cljs$core$IFn$_invoke$arity$variadic = G__18495__delegate;
return G__18495;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__18501 = null;
if (arguments.length > 2) {
var G__18502__i = 0, G__18502__a = new Array(arguments.length -  2);
while (G__18502__i < G__18502__a.length) {G__18502__a[G__18502__i] = arguments[G__18502__i + 2]; ++G__18502__i;}
G__18501 = new cljs.core.IndexedSeq(G__18502__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12607__auto__ = (function (){var G__18507 = f;
return goog.isFunction(G__18507);
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var G__18508 = f;
if(G__18508){
var bit__13290__auto__ = null;
if(cljs.core.truth_((function (){var or__12607__auto____$1 = bit__13290__auto__;
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
return G__18508.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__18508.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__18508);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__18974 = null;
var G__18974__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__18974__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18510 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18510) : self__.afn.call(null,G__18510));
});
var G__18974__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18511 = a;
var G__18512 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18511,G__18512) : self__.afn.call(null,G__18511,G__18512));
});
var G__18974__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18513 = a;
var G__18514 = b;
var G__18515 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18513,G__18514,G__18515) : self__.afn.call(null,G__18513,G__18514,G__18515));
});
var G__18974__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18516 = a;
var G__18517 = b;
var G__18518 = c;
var G__18519 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18516,G__18517,G__18518,G__18519) : self__.afn.call(null,G__18516,G__18517,G__18518,G__18519));
});
var G__18974__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18520 = a;
var G__18521 = b;
var G__18522 = c;
var G__18523 = d;
var G__18524 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18520,G__18521,G__18522,G__18523,G__18524) : self__.afn.call(null,G__18520,G__18521,G__18522,G__18523,G__18524));
});
var G__18974__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18525 = a;
var G__18526 = b;
var G__18527 = c;
var G__18528 = d;
var G__18529 = e;
var G__18530 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18525,G__18526,G__18527,G__18528,G__18529,G__18530) : self__.afn.call(null,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530));
});
var G__18974__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18531 = a;
var G__18532 = b;
var G__18533 = c;
var G__18534 = d;
var G__18535 = e;
var G__18536 = f;
var G__18537 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537) : self__.afn.call(null,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537));
});
var G__18974__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18538 = a;
var G__18539 = b;
var G__18540 = c;
var G__18541 = d;
var G__18542 = e;
var G__18543 = f;
var G__18544 = g;
var G__18545 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545) : self__.afn.call(null,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545));
});
var G__18974__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18546 = a;
var G__18547 = b;
var G__18548 = c;
var G__18549 = d;
var G__18550 = e;
var G__18551 = f;
var G__18552 = g;
var G__18553 = h;
var G__18554 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554) : self__.afn.call(null,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554));
});
var G__18974__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18555 = a;
var G__18556 = b;
var G__18557 = c;
var G__18558 = d;
var G__18559 = e;
var G__18560 = f;
var G__18561 = g;
var G__18562 = h;
var G__18563 = i;
var G__18564 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18555,G__18556,G__18557,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564) : self__.afn.call(null,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560,G__18561,G__18562,G__18563,G__18564));
});
var G__18974__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18565 = a;
var G__18566 = b;
var G__18567 = c;
var G__18568 = d;
var G__18569 = e;
var G__18570 = f;
var G__18571 = g;
var G__18572 = h;
var G__18573 = i;
var G__18574 = j;
var G__18575 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575) : self__.afn.call(null,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575));
});
var G__18974__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18576 = a;
var G__18577 = b;
var G__18578 = c;
var G__18579 = d;
var G__18580 = e;
var G__18581 = f;
var G__18582 = g;
var G__18583 = h;
var G__18584 = i;
var G__18585 = j;
var G__18586 = k;
var G__18587 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587) : self__.afn.call(null,G__18576,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587));
});
var G__18974__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18588 = a;
var G__18589 = b;
var G__18590 = c;
var G__18591 = d;
var G__18592 = e;
var G__18593 = f;
var G__18594 = g;
var G__18595 = h;
var G__18596 = i;
var G__18597 = j;
var G__18598 = k;
var G__18599 = l;
var G__18600 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600) : self__.afn.call(null,G__18588,G__18589,G__18590,G__18591,G__18592,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600));
});
var G__18974__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18601 = a;
var G__18602 = b;
var G__18603 = c;
var G__18604 = d;
var G__18605 = e;
var G__18606 = f;
var G__18607 = g;
var G__18608 = h;
var G__18609 = i;
var G__18610 = j;
var G__18611 = k;
var G__18612 = l;
var G__18613 = m;
var G__18614 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614) : self__.afn.call(null,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609,G__18610,G__18611,G__18612,G__18613,G__18614));
});
var G__18974__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18615 = a;
var G__18616 = b;
var G__18617 = c;
var G__18618 = d;
var G__18619 = e;
var G__18620 = f;
var G__18621 = g;
var G__18622 = h;
var G__18623 = i;
var G__18624 = j;
var G__18625 = k;
var G__18626 = l;
var G__18627 = m;
var G__18628 = n;
var G__18629 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629) : self__.afn.call(null,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626,G__18627,G__18628,G__18629));
});
var G__18974__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18630 = a;
var G__18631 = b;
var G__18632 = c;
var G__18633 = d;
var G__18634 = e;
var G__18635 = f;
var G__18636 = g;
var G__18637 = h;
var G__18638 = i;
var G__18639 = j;
var G__18640 = k;
var G__18641 = l;
var G__18642 = m;
var G__18643 = n;
var G__18644 = o;
var G__18645 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645) : self__.afn.call(null,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644,G__18645));
});
var G__18974__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18646 = a;
var G__18647 = b;
var G__18648 = c;
var G__18649 = d;
var G__18650 = e;
var G__18651 = f;
var G__18652 = g;
var G__18653 = h;
var G__18654 = i;
var G__18655 = j;
var G__18656 = k;
var G__18657 = l;
var G__18658 = m;
var G__18659 = n;
var G__18660 = o;
var G__18661 = p;
var G__18662 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662) : self__.afn.call(null,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662));
});
var G__18974__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18663 = a;
var G__18664 = b;
var G__18665 = c;
var G__18666 = d;
var G__18667 = e;
var G__18668 = f;
var G__18669 = g;
var G__18670 = h;
var G__18671 = i;
var G__18672 = j;
var G__18673 = k;
var G__18674 = l;
var G__18675 = m;
var G__18676 = n;
var G__18677 = o;
var G__18678 = p;
var G__18679 = q;
var G__18680 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680) : self__.afn.call(null,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680));
});
var G__18974__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18681 = a;
var G__18682 = b;
var G__18683 = c;
var G__18684 = d;
var G__18685 = e;
var G__18686 = f;
var G__18687 = g;
var G__18688 = h;
var G__18689 = i;
var G__18690 = j;
var G__18691 = k;
var G__18692 = l;
var G__18693 = m;
var G__18694 = n;
var G__18695 = o;
var G__18696 = p;
var G__18697 = q;
var G__18698 = r;
var G__18699 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699) : self__.afn.call(null,G__18681,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699));
});
var G__18974__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18700 = a;
var G__18701 = b;
var G__18702 = c;
var G__18703 = d;
var G__18704 = e;
var G__18705 = f;
var G__18706 = g;
var G__18707 = h;
var G__18708 = i;
var G__18709 = j;
var G__18710 = k;
var G__18711 = l;
var G__18712 = m;
var G__18713 = n;
var G__18714 = o;
var G__18715 = p;
var G__18716 = q;
var G__18717 = r;
var G__18718 = s;
var G__18719 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719) : self__.afn.call(null,G__18700,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719));
});
var G__18974__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18720 = self__.afn;
var G__18721 = a;
var G__18722 = b;
var G__18723 = c;
var G__18724 = d;
var G__18725 = e;
var G__18726 = f;
var G__18727 = g;
var G__18728 = h;
var G__18729 = i;
var G__18730 = j;
var G__18731 = k;
var G__18732 = l;
var G__18733 = m;
var G__18734 = n;
var G__18735 = o;
var G__18736 = p;
var G__18737 = q;
var G__18738 = r;
var G__18739 = s;
var G__18740 = t;
var G__18741 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741) : cljs.core.apply.call(null,G__18720,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740,G__18741));
});
G__18974 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18974__1.call(this,self__);
case 2:
return G__18974__2.call(this,self__,a);
case 3:
return G__18974__3.call(this,self__,a,b);
case 4:
return G__18974__4.call(this,self__,a,b,c);
case 5:
return G__18974__5.call(this,self__,a,b,c,d);
case 6:
return G__18974__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18974__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18974__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18974__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18974__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18974__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18974__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18974__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18974__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18974__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18974__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18974__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18974__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18974__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18974__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18974__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18974__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18974.cljs$core$IFn$_invoke$arity$1 = G__18974__1;
G__18974.cljs$core$IFn$_invoke$arity$2 = G__18974__2;
G__18974.cljs$core$IFn$_invoke$arity$3 = G__18974__3;
G__18974.cljs$core$IFn$_invoke$arity$4 = G__18974__4;
G__18974.cljs$core$IFn$_invoke$arity$5 = G__18974__5;
G__18974.cljs$core$IFn$_invoke$arity$6 = G__18974__6;
G__18974.cljs$core$IFn$_invoke$arity$7 = G__18974__7;
G__18974.cljs$core$IFn$_invoke$arity$8 = G__18974__8;
G__18974.cljs$core$IFn$_invoke$arity$9 = G__18974__9;
G__18974.cljs$core$IFn$_invoke$arity$10 = G__18974__10;
G__18974.cljs$core$IFn$_invoke$arity$11 = G__18974__11;
G__18974.cljs$core$IFn$_invoke$arity$12 = G__18974__12;
G__18974.cljs$core$IFn$_invoke$arity$13 = G__18974__13;
G__18974.cljs$core$IFn$_invoke$arity$14 = G__18974__14;
G__18974.cljs$core$IFn$_invoke$arity$15 = G__18974__15;
G__18974.cljs$core$IFn$_invoke$arity$16 = G__18974__16;
G__18974.cljs$core$IFn$_invoke$arity$17 = G__18974__17;
G__18974.cljs$core$IFn$_invoke$arity$18 = G__18974__18;
G__18974.cljs$core$IFn$_invoke$arity$19 = G__18974__19;
G__18974.cljs$core$IFn$_invoke$arity$20 = G__18974__20;
G__18974.cljs$core$IFn$_invoke$arity$21 = G__18974__21;
G__18974.cljs$core$IFn$_invoke$arity$22 = G__18974__22;
return G__18974;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args18509){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18509)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__18742 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__18742) : self__.afn.call(null,G__18742));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__18743 = a;
var G__18744 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__18743,G__18744) : self__.afn.call(null,G__18743,G__18744));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__18745 = a;
var G__18746 = b;
var G__18747 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__18745,G__18746,G__18747) : self__.afn.call(null,G__18745,G__18746,G__18747));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__18748 = a;
var G__18749 = b;
var G__18750 = c;
var G__18751 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__18748,G__18749,G__18750,G__18751) : self__.afn.call(null,G__18748,G__18749,G__18750,G__18751));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__18752 = a;
var G__18753 = b;
var G__18754 = c;
var G__18755 = d;
var G__18756 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__18752,G__18753,G__18754,G__18755,G__18756) : self__.afn.call(null,G__18752,G__18753,G__18754,G__18755,G__18756));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__18757 = a;
var G__18758 = b;
var G__18759 = c;
var G__18760 = d;
var G__18761 = e;
var G__18762 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__18757,G__18758,G__18759,G__18760,G__18761,G__18762) : self__.afn.call(null,G__18757,G__18758,G__18759,G__18760,G__18761,G__18762));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__18763 = a;
var G__18764 = b;
var G__18765 = c;
var G__18766 = d;
var G__18767 = e;
var G__18768 = f;
var G__18769 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769) : self__.afn.call(null,G__18763,G__18764,G__18765,G__18766,G__18767,G__18768,G__18769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__18770 = a;
var G__18771 = b;
var G__18772 = c;
var G__18773 = d;
var G__18774 = e;
var G__18775 = f;
var G__18776 = g;
var G__18777 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__18770,G__18771,G__18772,G__18773,G__18774,G__18775,G__18776,G__18777) : self__.afn.call(null,G__18770,G__18771,G__18772,G__18773,G__18774,G__18775,G__18776,G__18777));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__18778 = a;
var G__18779 = b;
var G__18780 = c;
var G__18781 = d;
var G__18782 = e;
var G__18783 = f;
var G__18784 = g;
var G__18785 = h;
var G__18786 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786) : self__.afn.call(null,G__18778,G__18779,G__18780,G__18781,G__18782,G__18783,G__18784,G__18785,G__18786));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__18787 = a;
var G__18788 = b;
var G__18789 = c;
var G__18790 = d;
var G__18791 = e;
var G__18792 = f;
var G__18793 = g;
var G__18794 = h;
var G__18795 = i;
var G__18796 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__18787,G__18788,G__18789,G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796) : self__.afn.call(null,G__18787,G__18788,G__18789,G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__18797 = a;
var G__18798 = b;
var G__18799 = c;
var G__18800 = d;
var G__18801 = e;
var G__18802 = f;
var G__18803 = g;
var G__18804 = h;
var G__18805 = i;
var G__18806 = j;
var G__18807 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807) : self__.afn.call(null,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804,G__18805,G__18806,G__18807));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__18808 = a;
var G__18809 = b;
var G__18810 = c;
var G__18811 = d;
var G__18812 = e;
var G__18813 = f;
var G__18814 = g;
var G__18815 = h;
var G__18816 = i;
var G__18817 = j;
var G__18818 = k;
var G__18819 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__18808,G__18809,G__18810,G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819) : self__.afn.call(null,G__18808,G__18809,G__18810,G__18811,G__18812,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__18820 = a;
var G__18821 = b;
var G__18822 = c;
var G__18823 = d;
var G__18824 = e;
var G__18825 = f;
var G__18826 = g;
var G__18827 = h;
var G__18828 = i;
var G__18829 = j;
var G__18830 = k;
var G__18831 = l;
var G__18832 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830,G__18831,G__18832) : self__.afn.call(null,G__18820,G__18821,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830,G__18831,G__18832));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__18833 = a;
var G__18834 = b;
var G__18835 = c;
var G__18836 = d;
var G__18837 = e;
var G__18838 = f;
var G__18839 = g;
var G__18840 = h;
var G__18841 = i;
var G__18842 = j;
var G__18843 = k;
var G__18844 = l;
var G__18845 = m;
var G__18846 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846) : self__.afn.call(null,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__18847 = a;
var G__18848 = b;
var G__18849 = c;
var G__18850 = d;
var G__18851 = e;
var G__18852 = f;
var G__18853 = g;
var G__18854 = h;
var G__18855 = i;
var G__18856 = j;
var G__18857 = k;
var G__18858 = l;
var G__18859 = m;
var G__18860 = n;
var G__18861 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__18847,G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861) : self__.afn.call(null,G__18847,G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__18862 = a;
var G__18863 = b;
var G__18864 = c;
var G__18865 = d;
var G__18866 = e;
var G__18867 = f;
var G__18868 = g;
var G__18869 = h;
var G__18870 = i;
var G__18871 = j;
var G__18872 = k;
var G__18873 = l;
var G__18874 = m;
var G__18875 = n;
var G__18876 = o;
var G__18877 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877) : self__.afn.call(null,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872,G__18873,G__18874,G__18875,G__18876,G__18877));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__18878 = a;
var G__18879 = b;
var G__18880 = c;
var G__18881 = d;
var G__18882 = e;
var G__18883 = f;
var G__18884 = g;
var G__18885 = h;
var G__18886 = i;
var G__18887 = j;
var G__18888 = k;
var G__18889 = l;
var G__18890 = m;
var G__18891 = n;
var G__18892 = o;
var G__18893 = p;
var G__18894 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__18878,G__18879,G__18880,G__18881,G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894) : self__.afn.call(null,G__18878,G__18879,G__18880,G__18881,G__18882,G__18883,G__18884,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__18895 = a;
var G__18896 = b;
var G__18897 = c;
var G__18898 = d;
var G__18899 = e;
var G__18900 = f;
var G__18901 = g;
var G__18902 = h;
var G__18903 = i;
var G__18904 = j;
var G__18905 = k;
var G__18906 = l;
var G__18907 = m;
var G__18908 = n;
var G__18909 = o;
var G__18910 = p;
var G__18911 = q;
var G__18912 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__18895,G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909,G__18910,G__18911,G__18912) : self__.afn.call(null,G__18895,G__18896,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909,G__18910,G__18911,G__18912));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__18913 = a;
var G__18914 = b;
var G__18915 = c;
var G__18916 = d;
var G__18917 = e;
var G__18918 = f;
var G__18919 = g;
var G__18920 = h;
var G__18921 = i;
var G__18922 = j;
var G__18923 = k;
var G__18924 = l;
var G__18925 = m;
var G__18926 = n;
var G__18927 = o;
var G__18928 = p;
var G__18929 = q;
var G__18930 = r;
var G__18931 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931) : self__.afn.call(null,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922,G__18923,G__18924,G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__18932 = a;
var G__18933 = b;
var G__18934 = c;
var G__18935 = d;
var G__18936 = e;
var G__18937 = f;
var G__18938 = g;
var G__18939 = h;
var G__18940 = i;
var G__18941 = j;
var G__18942 = k;
var G__18943 = l;
var G__18944 = m;
var G__18945 = n;
var G__18946 = o;
var G__18947 = p;
var G__18948 = q;
var G__18949 = r;
var G__18950 = s;
var G__18951 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951) : self__.afn.call(null,G__18932,G__18933,G__18934,G__18935,G__18936,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950,G__18951));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18952 = self__.afn;
var G__18953 = a;
var G__18954 = b;
var G__18955 = c;
var G__18956 = d;
var G__18957 = e;
var G__18958 = f;
var G__18959 = g;
var G__18960 = h;
var G__18961 = i;
var G__18962 = j;
var G__18963 = k;
var G__18964 = l;
var G__18965 = m;
var G__18966 = n;
var G__18967 = o;
var G__18968 = p;
var G__18969 = q;
var G__18970 = r;
var G__18971 = s;
var G__18972 = t;
var G__18973 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973) : cljs.core.apply.call(null,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__18978 = o;
if(G__18978){
var bit__13290__auto__ = (G__18978.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13290__auto__) || (G__18978.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__18978.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18978);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__18978);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12595__auto__ = !((o == null));
if(and__12595__auto__){
var G__18982 = o;
if(G__18982){
var bit__13290__auto__ = (G__18982.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13290__auto__) || (G__18982.cljs$core$IMeta$)){
return true;
} else {
if((!G__18982.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18982);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__18982);
}
} else {
return and__12595__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__18985__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__18986 = ret;
var G__18987 = cljs.core.first(ks);
var G__18988 = cljs.core.next(ks);
coll = G__18986;
k = G__18987;
ks = G__18988;
continue;
} else {
return ret;
}
}
break;
}
};
var G__18985 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__18989__i = 0, G__18989__a = new Array(arguments.length -  2);
while (G__18989__i < G__18989__a.length) {G__18989__a[G__18989__i] = arguments[G__18989__i + 2]; ++G__18989__i;}
  ks = new cljs.core.IndexedSeq(G__18989__a,0);
} 
return G__18985__delegate.call(this,coll,k,ks);};
G__18985.cljs$lang$maxFixedArity = 2;
G__18985.cljs$lang$applyTo = (function (arglist__18990){
var coll = cljs.core.first(arglist__18990);
arglist__18990 = cljs.core.next(arglist__18990);
var k = cljs.core.first(arglist__18990);
var ks = cljs.core.rest(arglist__18990);
return G__18985__delegate(coll,k,ks);
});
G__18985.cljs$core$IFn$_invoke$arity$variadic = G__18985__delegate;
return G__18985;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__18991 = null;
if (arguments.length > 2) {
var G__18992__i = 0, G__18992__a = new Array(arguments.length -  2);
while (G__18992__i < G__18992__a.length) {G__18992__a[G__18992__i] = arguments[G__18992__i + 2]; ++G__18992__i;}
G__18991 = new cljs.core.IndexedSeq(G__18992__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__18991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18994 = x;
if(G__18994){
var bit__13290__auto__ = (G__18994.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13290__auto__) || (G__18994.cljs$core$ICollection$)){
return true;
} else {
if((!G__18994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__18994);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__18996 = x;
if(G__18996){
var bit__13290__auto__ = (G__18996.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13290__auto__) || (G__18996.cljs$core$ISet$)){
return true;
} else {
if((!G__18996.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18996);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__18996);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__18998 = x;
if(G__18998){
var bit__13290__auto__ = (G__18998.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13290__auto__) || (G__18998.cljs$core$IAssociative$)){
return true;
} else {
if((!G__18998.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18998);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__18998);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19000 = x;
if(G__19000){
var bit__13290__auto__ = (G__19000.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13290__auto__) || (G__19000.cljs$core$ISequential$)){
return true;
} else {
if((!G__19000.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19000);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19000);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19002 = x;
if(G__19002){
var bit__13290__auto__ = (G__19002.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13290__auto__) || (G__19002.cljs$core$ISorted$)){
return true;
} else {
if((!G__19002.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19002);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19002);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19004 = x;
if(G__19004){
var bit__13290__auto__ = (G__19004.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13290__auto__) || (G__19004.cljs$core$IReduce$)){
return true;
} else {
if((!G__19004.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19004);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19004);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19006 = x;
if(G__19006){
var bit__13290__auto__ = (G__19006.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13290__auto__) || (G__19006.cljs$core$IMap$)){
return true;
} else {
if((!G__19006.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19006);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19006);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19008 = x;
if(G__19008){
var bit__13290__auto__ = (G__19008.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13290__auto__) || (G__19008.cljs$core$IVector$)){
return true;
} else {
if((!G__19008.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19008);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19008);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19010 = x;
if(G__19010){
var bit__13283__auto__ = (G__19010.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13283__auto__) || (G__19010.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19016 = {};
return obj19016;
});
var js_obj__1 = (function() { 
var G__19019__delegate = function (keyvals){
var G__19017 = goog.object.create;
var G__19018 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19017,G__19018) : cljs.core.apply.call(null,G__19017,G__19018));
};
var G__19019 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19020__i = 0, G__19020__a = new Array(arguments.length -  0);
while (G__19020__i < G__19020__a.length) {G__19020__a[G__19020__i] = arguments[G__19020__i + 0]; ++G__19020__i;}
  keyvals = new cljs.core.IndexedSeq(G__19020__a,0);
} 
return G__19019__delegate.call(this,keyvals);};
G__19019.cljs$lang$maxFixedArity = 0;
G__19019.cljs$lang$applyTo = (function (arglist__19021){
var keyvals = cljs.core.seq(arglist__19021);
return G__19019__delegate(keyvals);
});
G__19019.cljs$core$IFn$_invoke$arity$variadic = G__19019__delegate;
return G__19019;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19022 = null;
if (arguments.length > 0) {
var G__19023__i = 0, G__19023__a = new Array(arguments.length -  0);
while (G__19023__i < G__19023__a.length) {G__19023__a[G__19023__i] = arguments[G__19023__i + 0]; ++G__19023__i;}
G__19022 = new cljs.core.IndexedSeq(G__19023__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19022);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19026_19028 = obj;
var G__19027_19029 = ((function (G__19026_19028,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19026_19028,keys))
;
goog.object.forEach(G__19026_19028,G__19027_19029);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19030 = (i__$1 + (1));
var G__19031 = (j__$1 + (1));
var G__19032 = (len__$1 - (1));
i__$1 = G__19030;
j__$1 = G__19031;
len__$1 = G__19032;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19033 = (i__$1 - (1));
var G__19034 = (j__$1 - (1));
var G__19035 = (len__$1 - (1));
i__$1 = G__19033;
j__$1 = G__19034;
len__$1 = G__19035;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19037 = {};
return obj19037;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19039 = s;
if(G__19039){
var bit__13290__auto__ = (G__19039.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13290__auto__) || (G__19039.cljs$core$ISeq$)){
return true;
} else {
if((!G__19039.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19039);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19039);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19041 = s;
if(G__19041){
var bit__13290__auto__ = (G__19041.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13290__auto__) || (G__19041.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19041.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19041);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19041);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12607__auto__ = cljs.core.fn_QMARK_(f);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var G__19045 = f;
if(G__19045){
var bit__13290__auto__ = (G__19045.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13290__auto__) || (G__19045.cljs$core$IFn$)){
return true;
} else {
if((!G__19045.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19045);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19045);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19058 = n;
return isNaN(G__19058);
})())) && (!((n === Infinity))) && (((function (){var G__19059 = n;
return parseFloat(G__19059);
})() === (function (){var G__19060 = n;
var G__19061 = (10);
return parseInt(G__19060,G__19061);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19062__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19063 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19064 = etc;
s = G__19063;
xs = G__19064;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19062 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19065__i = 0, G__19065__a = new Array(arguments.length -  2);
while (G__19065__i < G__19065__a.length) {G__19065__a[G__19065__i] = arguments[G__19065__i + 2]; ++G__19065__i;}
  more = new cljs.core.IndexedSeq(G__19065__a,0);
} 
return G__19062__delegate.call(this,x,y,more);};
G__19062.cljs$lang$maxFixedArity = 2;
G__19062.cljs$lang$applyTo = (function (arglist__19066){
var x = cljs.core.first(arglist__19066);
arglist__19066 = cljs.core.next(arglist__19066);
var y = cljs.core.first(arglist__19066);
var more = cljs.core.rest(arglist__19066);
return G__19062__delegate(x,y,more);
});
G__19062.cljs$core$IFn$_invoke$arity$variadic = G__19062__delegate;
return G__19062;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__19067 = null;
if (arguments.length > 2) {
var G__19068__i = 0, G__19068__a = new Array(arguments.length -  2);
while (G__19068__i < G__19068__a.length) {G__19068__a[G__19068__i] = arguments[G__19068__i + 2]; ++G__19068__i;}
G__19067 = new cljs.core.IndexedSeq(G__19068__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__19072 = x;
if(G__19072){
var bit__13283__auto__ = (G__19072.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13283__auto__) || (G__19072.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__19073 = x;
var G__19074 = y;
return goog.array.defaultCompare(G__19073,G__19074);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__19079 = xs;
var G__19080 = ys;
var G__19081 = len;
var G__19082 = (n + (1));
xs = G__19079;
ys = G__19080;
len = G__19081;
n = G__19082;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__19087 = x;
var G__19088 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19087,G__19088) : f.call(null,G__19087,G__19088));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19089 = y;
var G__19090 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19089,G__19090) : f.call(null,G__19089,G__19090));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__19096 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19096) : cljs.core.to_array.call(null,G__19096));
})();
var G__19097_19099 = a;
var G__19098_19100 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__19097_19099,G__19098_19100);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__19106 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19106) : keyfn.call(null,G__19106));
})(),(function (){var G__19107 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19107) : keyfn.call(null,G__19107));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__19113 = f;
var G__19114 = cljs.core.first(s);
var G__19115 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19113,G__19114,G__19115) : cljs.core.reduce.call(null,G__19113,G__19114,G__19115));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__19116 = val__$1;
var G__19117 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19116,G__19117) : f.call(null,G__19116,G__19117));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19118 = nval;
var G__19119 = cljs.core.next(coll__$1);
val__$1 = G__19118;
coll__$1 = G__19119;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__19123 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19123) : cljs.core.to_array.call(null,G__19123));
})();
var G__19124_19126 = a;
goog.array.shuffle(G__19124_19126);

var G__19125 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__19125) : cljs.core.vec.call(null,G__19125));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__19129 = coll;
if(G__19129){
var bit__13283__auto__ = (G__19129.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13283__auto__) || (G__19129.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__19130 = coll;
if(G__19130){
var bit__13283__auto__ = (G__19130.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13283__auto__) || (G__19130.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__19139 = null;
var G__19139__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__19139__1 = (function (x){
var G__19136 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__19136) : cf.call(null,G__19136));
});
var G__19139__2 = (function (x,y){
var G__19137 = x;
var G__19138 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19137,G__19138) : f.call(null,G__19137,G__19138));
});
G__19139 = function(x,y){
switch(arguments.length){
case 0:
return G__19139__0.call(this);
case 1:
return G__19139__1.call(this,x);
case 2:
return G__19139__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19139.cljs$core$IFn$_invoke$arity$0 = G__19139__0;
G__19139.cljs$core$IFn$_invoke$arity$1 = G__19139__1;
G__19139.cljs$core$IFn$_invoke$arity$2 = G__19139__2;
return G__19139;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__19146 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19146) : xform.call(null,G__19146));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__19147 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__19147) : f__$1.call(null,G__19147));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__19148__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__19148 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19149__i = 0, G__19149__a = new Array(arguments.length -  2);
while (G__19149__i < G__19149__a.length) {G__19149__a[G__19149__i] = arguments[G__19149__i + 2]; ++G__19149__i;}
  more = new cljs.core.IndexedSeq(G__19149__a,0);
} 
return G__19148__delegate.call(this,x,y,more);};
G__19148.cljs$lang$maxFixedArity = 2;
G__19148.cljs$lang$applyTo = (function (arglist__19150){
var x = cljs.core.first(arglist__19150);
arglist__19150 = cljs.core.next(arglist__19150);
var y = cljs.core.first(arglist__19150);
var more = cljs.core.rest(arglist__19150);
return G__19148__delegate(x,y,more);
});
G__19148.cljs$core$IFn$_invoke$arity$variadic = G__19148__delegate;
return G__19148;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__19151 = null;
if (arguments.length > 2) {
var G__19152__i = 0, G__19152__a = new Array(arguments.length -  2);
while (G__19152__i < G__19152__a.length) {G__19152__a[G__19152__i] = arguments[G__19152__i + 2]; ++G__19152__i;}
G__19151 = new cljs.core.IndexedSeq(G__19152__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__19153__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__19153 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19154__i = 0, G__19154__a = new Array(arguments.length -  2);
while (G__19154__i < G__19154__a.length) {G__19154__a[G__19154__i] = arguments[G__19154__i + 2]; ++G__19154__i;}
  more = new cljs.core.IndexedSeq(G__19154__a,0);
} 
return G__19153__delegate.call(this,x,y,more);};
G__19153.cljs$lang$maxFixedArity = 2;
G__19153.cljs$lang$applyTo = (function (arglist__19155){
var x = cljs.core.first(arglist__19155);
arglist__19155 = cljs.core.next(arglist__19155);
var y = cljs.core.first(arglist__19155);
var more = cljs.core.rest(arglist__19155);
return G__19153__delegate(x,y,more);
});
G__19153.cljs$core$IFn$_invoke$arity$variadic = G__19153__delegate;
return G__19153;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__19156 = null;
if (arguments.length > 2) {
var G__19157__i = 0, G__19157__a = new Array(arguments.length -  2);
while (G__19157__i < G__19157__a.length) {G__19157__a[G__19157__i] = arguments[G__19157__i + 2]; ++G__19157__i;}
G__19156 = new cljs.core.IndexedSeq(G__19157__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__19158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__19158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19159__i = 0, G__19159__a = new Array(arguments.length -  2);
while (G__19159__i < G__19159__a.length) {G__19159__a[G__19159__i] = arguments[G__19159__i + 2]; ++G__19159__i;}
  more = new cljs.core.IndexedSeq(G__19159__a,0);
} 
return G__19158__delegate.call(this,x,y,more);};
G__19158.cljs$lang$maxFixedArity = 2;
G__19158.cljs$lang$applyTo = (function (arglist__19160){
var x = cljs.core.first(arglist__19160);
arglist__19160 = cljs.core.next(arglist__19160);
var y = cljs.core.first(arglist__19160);
var more = cljs.core.rest(arglist__19160);
return G__19158__delegate(x,y,more);
});
G__19158.cljs$core$IFn$_invoke$arity$variadic = G__19158__delegate;
return G__19158;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19161 = null;
if (arguments.length > 2) {
var G__19162__i = 0, G__19162__a = new Array(arguments.length -  2);
while (G__19162__i < G__19162__a.length) {G__19162__a[G__19162__i] = arguments[G__19162__i + 2]; ++G__19162__i;}
G__19161 = new cljs.core.IndexedSeq(G__19162__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19167__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19167 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19168__i = 0, G__19168__a = new Array(arguments.length -  2);
while (G__19168__i < G__19168__a.length) {G__19168__a[G__19168__i] = arguments[G__19168__i + 2]; ++G__19168__i;}
  more = new cljs.core.IndexedSeq(G__19168__a,0);
} 
return G__19167__delegate.call(this,x,y,more);};
G__19167.cljs$lang$maxFixedArity = 2;
G__19167.cljs$lang$applyTo = (function (arglist__19169){
var x = cljs.core.first(arglist__19169);
arglist__19169 = cljs.core.next(arglist__19169);
var y = cljs.core.first(arglist__19169);
var more = cljs.core.rest(arglist__19169);
return G__19167__delegate(x,y,more);
});
G__19167.cljs$core$IFn$_invoke$arity$variadic = G__19167__delegate;
return G__19167;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19170 = null;
if (arguments.length > 2) {
var G__19171__i = 0, G__19171__a = new Array(arguments.length -  2);
while (G__19171__i < G__19171__a.length) {G__19171__a[G__19171__i] = arguments[G__19171__i + 2]; ++G__19171__i;}
G__19170 = new cljs.core.IndexedSeq(G__19171__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19172__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19173 = y;
var G__19174 = cljs.core.first(more);
var G__19175 = cljs.core.next(more);
x = G__19173;
y = G__19174;
more = G__19175;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19172 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19176__i = 0, G__19176__a = new Array(arguments.length -  2);
while (G__19176__i < G__19176__a.length) {G__19176__a[G__19176__i] = arguments[G__19176__i + 2]; ++G__19176__i;}
  more = new cljs.core.IndexedSeq(G__19176__a,0);
} 
return G__19172__delegate.call(this,x,y,more);};
G__19172.cljs$lang$maxFixedArity = 2;
G__19172.cljs$lang$applyTo = (function (arglist__19177){
var x = cljs.core.first(arglist__19177);
arglist__19177 = cljs.core.next(arglist__19177);
var y = cljs.core.first(arglist__19177);
var more = cljs.core.rest(arglist__19177);
return G__19172__delegate(x,y,more);
});
G__19172.cljs$core$IFn$_invoke$arity$variadic = G__19172__delegate;
return G__19172;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19178 = null;
if (arguments.length > 2) {
var G__19179__i = 0, G__19179__a = new Array(arguments.length -  2);
while (G__19179__i < G__19179__a.length) {G__19179__a[G__19179__i] = arguments[G__19179__i + 2]; ++G__19179__i;}
G__19178 = new cljs.core.IndexedSeq(G__19179__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19180__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19181 = y;
var G__19182 = cljs.core.first(more);
var G__19183 = cljs.core.next(more);
x = G__19181;
y = G__19182;
more = G__19183;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19180 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19184__i = 0, G__19184__a = new Array(arguments.length -  2);
while (G__19184__i < G__19184__a.length) {G__19184__a[G__19184__i] = arguments[G__19184__i + 2]; ++G__19184__i;}
  more = new cljs.core.IndexedSeq(G__19184__a,0);
} 
return G__19180__delegate.call(this,x,y,more);};
G__19180.cljs$lang$maxFixedArity = 2;
G__19180.cljs$lang$applyTo = (function (arglist__19185){
var x = cljs.core.first(arglist__19185);
arglist__19185 = cljs.core.next(arglist__19185);
var y = cljs.core.first(arglist__19185);
var more = cljs.core.rest(arglist__19185);
return G__19180__delegate(x,y,more);
});
G__19180.cljs$core$IFn$_invoke$arity$variadic = G__19180__delegate;
return G__19180;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19186 = null;
if (arguments.length > 2) {
var G__19187__i = 0, G__19187__a = new Array(arguments.length -  2);
while (G__19187__i < G__19187__a.length) {G__19187__a[G__19187__i] = arguments[G__19187__i + 2]; ++G__19187__i;}
G__19186 = new cljs.core.IndexedSeq(G__19187__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19188__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19189 = y;
var G__19190 = cljs.core.first(more);
var G__19191 = cljs.core.next(more);
x = G__19189;
y = G__19190;
more = G__19191;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19188 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19192__i = 0, G__19192__a = new Array(arguments.length -  2);
while (G__19192__i < G__19192__a.length) {G__19192__a[G__19192__i] = arguments[G__19192__i + 2]; ++G__19192__i;}
  more = new cljs.core.IndexedSeq(G__19192__a,0);
} 
return G__19188__delegate.call(this,x,y,more);};
G__19188.cljs$lang$maxFixedArity = 2;
G__19188.cljs$lang$applyTo = (function (arglist__19193){
var x = cljs.core.first(arglist__19193);
arglist__19193 = cljs.core.next(arglist__19193);
var y = cljs.core.first(arglist__19193);
var more = cljs.core.rest(arglist__19193);
return G__19188__delegate(x,y,more);
});
G__19188.cljs$core$IFn$_invoke$arity$variadic = G__19188__delegate;
return G__19188;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19194 = null;
if (arguments.length > 2) {
var G__19195__i = 0, G__19195__a = new Array(arguments.length -  2);
while (G__19195__i < G__19195__a.length) {G__19195__a[G__19195__i] = arguments[G__19195__i + 2]; ++G__19195__i;}
G__19194 = new cljs.core.IndexedSeq(G__19195__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19196__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19197 = y;
var G__19198 = cljs.core.first(more);
var G__19199 = cljs.core.next(more);
x = G__19197;
y = G__19198;
more = G__19199;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19196 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19200__i = 0, G__19200__a = new Array(arguments.length -  2);
while (G__19200__i < G__19200__a.length) {G__19200__a[G__19200__i] = arguments[G__19200__i + 2]; ++G__19200__i;}
  more = new cljs.core.IndexedSeq(G__19200__a,0);
} 
return G__19196__delegate.call(this,x,y,more);};
G__19196.cljs$lang$maxFixedArity = 2;
G__19196.cljs$lang$applyTo = (function (arglist__19201){
var x = cljs.core.first(arglist__19201);
arglist__19201 = cljs.core.next(arglist__19201);
var y = cljs.core.first(arglist__19201);
var more = cljs.core.rest(arglist__19201);
return G__19196__delegate(x,y,more);
});
G__19196.cljs$core$IFn$_invoke$arity$variadic = G__19196__delegate;
return G__19196;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19202 = null;
if (arguments.length > 2) {
var G__19203__i = 0, G__19203__a = new Array(arguments.length -  2);
while (G__19203__i < G__19203__a.length) {G__19203__a[G__19203__i] = arguments[G__19203__i + 2]; ++G__19203__i;}
G__19202 = new cljs.core.IndexedSeq(G__19203__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12926__auto__ = x;
var y__12927__auto__ = y;
return ((x__12926__auto__ > y__12927__auto__) ? x__12926__auto__ : y__12927__auto__);
});
var max__3 = (function() { 
var G__19204__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12926__auto__ = x;
var y__12927__auto__ = y;
return ((x__12926__auto__ > y__12927__auto__) ? x__12926__auto__ : y__12927__auto__);
})(),more);
};
var G__19204 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19205__i = 0, G__19205__a = new Array(arguments.length -  2);
while (G__19205__i < G__19205__a.length) {G__19205__a[G__19205__i] = arguments[G__19205__i + 2]; ++G__19205__i;}
  more = new cljs.core.IndexedSeq(G__19205__a,0);
} 
return G__19204__delegate.call(this,x,y,more);};
G__19204.cljs$lang$maxFixedArity = 2;
G__19204.cljs$lang$applyTo = (function (arglist__19206){
var x = cljs.core.first(arglist__19206);
arglist__19206 = cljs.core.next(arglist__19206);
var y = cljs.core.first(arglist__19206);
var more = cljs.core.rest(arglist__19206);
return G__19204__delegate(x,y,more);
});
G__19204.cljs$core$IFn$_invoke$arity$variadic = G__19204__delegate;
return G__19204;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19207 = null;
if (arguments.length > 2) {
var G__19208__i = 0, G__19208__a = new Array(arguments.length -  2);
while (G__19208__i < G__19208__a.length) {G__19208__a[G__19208__i] = arguments[G__19208__i + 2]; ++G__19208__i;}
G__19207 = new cljs.core.IndexedSeq(G__19208__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12933__auto__ = x;
var y__12934__auto__ = y;
return ((x__12933__auto__ < y__12934__auto__) ? x__12933__auto__ : y__12934__auto__);
});
var min__3 = (function() { 
var G__19209__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12933__auto__ = x;
var y__12934__auto__ = y;
return ((x__12933__auto__ < y__12934__auto__) ? x__12933__auto__ : y__12934__auto__);
})(),more);
};
var G__19209 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19210__i = 0, G__19210__a = new Array(arguments.length -  2);
while (G__19210__i < G__19210__a.length) {G__19210__a[G__19210__i] = arguments[G__19210__i + 2]; ++G__19210__i;}
  more = new cljs.core.IndexedSeq(G__19210__a,0);
} 
return G__19209__delegate.call(this,x,y,more);};
G__19209.cljs$lang$maxFixedArity = 2;
G__19209.cljs$lang$applyTo = (function (arglist__19211){
var x = cljs.core.first(arglist__19211);
arglist__19211 = cljs.core.next(arglist__19211);
var y = cljs.core.first(arglist__19211);
var more = cljs.core.rest(arglist__19211);
return G__19209__delegate(x,y,more);
});
G__19209.cljs$core$IFn$_invoke$arity$variadic = G__19209__delegate;
return G__19209;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19212 = null;
if (arguments.length > 2) {
var G__19213__i = 0, G__19213__a = new Array(arguments.length -  2);
while (G__19213__i < G__19213__a.length) {G__19213__a[G__19213__i] = arguments[G__19213__i + 2]; ++G__19213__i;}
G__19212 = new cljs.core.IndexedSeq(G__19213__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19214__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19214 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19215__i = 0, G__19215__a = new Array(arguments.length -  2);
while (G__19215__i < G__19215__a.length) {G__19215__a[G__19215__i] = arguments[G__19215__i + 2]; ++G__19215__i;}
  more = new cljs.core.IndexedSeq(G__19215__a,0);
} 
return G__19214__delegate.call(this,x,y,more);};
G__19214.cljs$lang$maxFixedArity = 2;
G__19214.cljs$lang$applyTo = (function (arglist__19216){
var x = cljs.core.first(arglist__19216);
arglist__19216 = cljs.core.next(arglist__19216);
var y = cljs.core.first(arglist__19216);
var more = cljs.core.rest(arglist__19216);
return G__19214__delegate(x,y,more);
});
G__19214.cljs$core$IFn$_invoke$arity$variadic = G__19214__delegate;
return G__19214;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19217 = null;
if (arguments.length > 2) {
var G__19218__i = 0, G__19218__a = new Array(arguments.length -  2);
while (G__19218__i < G__19218__a.length) {G__19218__a[G__19218__i] = arguments[G__19218__i + 2]; ++G__19218__i;}
G__19217 = new cljs.core.IndexedSeq(G__19218__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19219__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19219 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19220__i = 0, G__19220__a = new Array(arguments.length -  2);
while (G__19220__i < G__19220__a.length) {G__19220__a[G__19220__i] = arguments[G__19220__i + 2]; ++G__19220__i;}
  more = new cljs.core.IndexedSeq(G__19220__a,0);
} 
return G__19219__delegate.call(this,x,y,more);};
G__19219.cljs$lang$maxFixedArity = 2;
G__19219.cljs$lang$applyTo = (function (arglist__19221){
var x = cljs.core.first(arglist__19221);
arglist__19221 = cljs.core.next(arglist__19221);
var y = cljs.core.first(arglist__19221);
var more = cljs.core.rest(arglist__19221);
return G__19219__delegate(x,y,more);
});
G__19219.cljs$core$IFn$_invoke$arity$variadic = G__19219__delegate;
return G__19219;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19222 = null;
if (arguments.length > 2) {
var G__19223__i = 0, G__19223__a = new Array(arguments.length -  2);
while (G__19223__i < G__19223__a.length) {G__19223__a[G__19223__i] = arguments[G__19223__i + 2]; ++G__19223__i;}
G__19222 = new cljs.core.IndexedSeq(G__19223__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19228__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19228 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19229__i = 0, G__19229__a = new Array(arguments.length -  2);
while (G__19229__i < G__19229__a.length) {G__19229__a[G__19229__i] = arguments[G__19229__i + 2]; ++G__19229__i;}
  more = new cljs.core.IndexedSeq(G__19229__a,0);
} 
return G__19228__delegate.call(this,x,y,more);};
G__19228.cljs$lang$maxFixedArity = 2;
G__19228.cljs$lang$applyTo = (function (arglist__19230){
var x = cljs.core.first(arglist__19230);
arglist__19230 = cljs.core.next(arglist__19230);
var y = cljs.core.first(arglist__19230);
var more = cljs.core.rest(arglist__19230);
return G__19228__delegate(x,y,more);
});
G__19228.cljs$core$IFn$_invoke$arity$variadic = G__19228__delegate;
return G__19228;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19231 = null;
if (arguments.length > 2) {
var G__19232__i = 0, G__19232__a = new Array(arguments.length -  2);
while (G__19232__i < G__19232__a.length) {G__19232__a[G__19232__i] = arguments[G__19232__i + 2]; ++G__19232__i;}
G__19231 = new cljs.core.IndexedSeq(G__19232__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19231);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19233__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19233 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19234__i = 0, G__19234__a = new Array(arguments.length -  2);
while (G__19234__i < G__19234__a.length) {G__19234__a[G__19234__i] = arguments[G__19234__i + 2]; ++G__19234__i;}
  more = new cljs.core.IndexedSeq(G__19234__a,0);
} 
return G__19233__delegate.call(this,x,y,more);};
G__19233.cljs$lang$maxFixedArity = 2;
G__19233.cljs$lang$applyTo = (function (arglist__19235){
var x = cljs.core.first(arglist__19235);
arglist__19235 = cljs.core.next(arglist__19235);
var y = cljs.core.first(arglist__19235);
var more = cljs.core.rest(arglist__19235);
return G__19233__delegate(x,y,more);
});
G__19233.cljs$core$IFn$_invoke$arity$variadic = G__19233__delegate;
return G__19233;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19236 = null;
if (arguments.length > 2) {
var G__19237__i = 0, G__19237__a = new Array(arguments.length -  2);
while (G__19237__i < G__19237__a.length) {G__19237__a[G__19237__i] = arguments[G__19237__i + 2]; ++G__19237__i;}
G__19236 = new cljs.core.IndexedSeq(G__19237__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19238__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19238 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19239__i = 0, G__19239__a = new Array(arguments.length -  2);
while (G__19239__i < G__19239__a.length) {G__19239__a[G__19239__i] = arguments[G__19239__i + 2]; ++G__19239__i;}
  more = new cljs.core.IndexedSeq(G__19239__a,0);
} 
return G__19238__delegate.call(this,x,y,more);};
G__19238.cljs$lang$maxFixedArity = 2;
G__19238.cljs$lang$applyTo = (function (arglist__19240){
var x = cljs.core.first(arglist__19240);
arglist__19240 = cljs.core.next(arglist__19240);
var y = cljs.core.first(arglist__19240);
var more = cljs.core.rest(arglist__19240);
return G__19238__delegate(x,y,more);
});
G__19238.cljs$core$IFn$_invoke$arity$variadic = G__19238__delegate;
return G__19238;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19241 = null;
if (arguments.length > 2) {
var G__19242__i = 0, G__19242__a = new Array(arguments.length -  2);
while (G__19242__i < G__19242__a.length) {G__19242__a[G__19242__i] = arguments[G__19242__i + 2]; ++G__19242__i;}
G__19241 = new cljs.core.IndexedSeq(G__19242__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19245 = x;
var G__19246 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19245,G__19246) : cljs.core.mod.call(null,G__19245,G__19246));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19247__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19247 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19248__i = 0, G__19248__a = new Array(arguments.length -  2);
while (G__19248__i < G__19248__a.length) {G__19248__a[G__19248__i] = arguments[G__19248__i + 2]; ++G__19248__i;}
  more = new cljs.core.IndexedSeq(G__19248__a,0);
} 
return G__19247__delegate.call(this,x,y,more);};
G__19247.cljs$lang$maxFixedArity = 2;
G__19247.cljs$lang$applyTo = (function (arglist__19249){
var x = cljs.core.first(arglist__19249);
arglist__19249 = cljs.core.next(arglist__19249);
var y = cljs.core.first(arglist__19249);
var more = cljs.core.rest(arglist__19249);
return G__19247__delegate(x,y,more);
});
G__19247.cljs$core$IFn$_invoke$arity$variadic = G__19247__delegate;
return G__19247;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19250 = null;
if (arguments.length > 2) {
var G__19251__i = 0, G__19251__a = new Array(arguments.length -  2);
while (G__19251__i < G__19251__a.length) {G__19251__a[G__19251__i] = arguments[G__19251__i + 2]; ++G__19251__i;}
G__19250 = new cljs.core.IndexedSeq(G__19251__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19252__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19253__i = 0, G__19253__a = new Array(arguments.length -  2);
while (G__19253__i < G__19253__a.length) {G__19253__a[G__19253__i] = arguments[G__19253__i + 2]; ++G__19253__i;}
  more = new cljs.core.IndexedSeq(G__19253__a,0);
} 
return G__19252__delegate.call(this,x,y,more);};
G__19252.cljs$lang$maxFixedArity = 2;
G__19252.cljs$lang$applyTo = (function (arglist__19254){
var x = cljs.core.first(arglist__19254);
arglist__19254 = cljs.core.next(arglist__19254);
var y = cljs.core.first(arglist__19254);
var more = cljs.core.rest(arglist__19254);
return G__19252__delegate(x,y,more);
});
G__19252.cljs$core$IFn$_invoke$arity$variadic = G__19252__delegate;
return G__19252;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19255 = null;
if (arguments.length > 2) {
var G__19256__i = 0, G__19256__a = new Array(arguments.length -  2);
while (G__19256__i < G__19256__a.length) {G__19256__a[G__19256__i] = arguments[G__19256__i + 2]; ++G__19256__i;}
G__19255 = new cljs.core.IndexedSeq(G__19256__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19259 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19259) : Math.floor.call(null,G__19259));
} else {
var G__19260 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19260) : Math.ceil.call(null,G__19260));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19265__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19266 = y;
var G__19267 = cljs.core.first(more);
var G__19268 = cljs.core.next(more);
x = G__19266;
y = G__19267;
more = G__19268;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19265 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19269__i = 0, G__19269__a = new Array(arguments.length -  2);
while (G__19269__i < G__19269__a.length) {G__19269__a[G__19269__i] = arguments[G__19269__i + 2]; ++G__19269__i;}
  more = new cljs.core.IndexedSeq(G__19269__a,0);
} 
return G__19265__delegate.call(this,x,y,more);};
G__19265.cljs$lang$maxFixedArity = 2;
G__19265.cljs$lang$applyTo = (function (arglist__19270){
var x = cljs.core.first(arglist__19270);
arglist__19270 = cljs.core.next(arglist__19270);
var y = cljs.core.first(arglist__19270);
var more = cljs.core.rest(arglist__19270);
return G__19265__delegate(x,y,more);
});
G__19265.cljs$core$IFn$_invoke$arity$variadic = G__19265__delegate;
return G__19265;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19271 = null;
if (arguments.length > 2) {
var G__19272__i = 0, G__19272__a = new Array(arguments.length -  2);
while (G__19272__i < G__19272__a.length) {G__19272__a[G__19272__i] = arguments[G__19272__i + 2]; ++G__19272__i;}
G__19271 = new cljs.core.IndexedSeq(G__19272__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19273 = (n__$1 - (1));
var G__19274 = cljs.core.next(xs);
n__$1 = G__19273;
xs = G__19274;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19278 = x;
return goog.string.buildString(G__19278);
}
});
var str__2 = (function() { 
var G__19279__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19280 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19281 = cljs.core.next(more);
sb = G__19280;
more = G__19281;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19279 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19282__i = 0, G__19282__a = new Array(arguments.length -  1);
while (G__19282__i < G__19282__a.length) {G__19282__a[G__19282__i] = arguments[G__19282__i + 1]; ++G__19282__i;}
  ys = new cljs.core.IndexedSeq(G__19282__a,0);
} 
return G__19279__delegate.call(this,x,ys);};
G__19279.cljs$lang$maxFixedArity = 1;
G__19279.cljs$lang$applyTo = (function (arglist__19283){
var x = cljs.core.first(arglist__19283);
var ys = cljs.core.rest(arglist__19283);
return G__19279__delegate(x,ys);
});
G__19279.cljs$core$IFn$_invoke$arity$variadic = G__19279__delegate;
return G__19279;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19284 = null;
if (arguments.length > 1) {
var G__19285__i = 0, G__19285__a = new Array(arguments.length -  1);
while (G__19285__i < G__19285__a.length) {G__19285__a[G__19285__i] = arguments[G__19285__i + 1]; ++G__19285__i;}
G__19284 = new cljs.core.IndexedSeq(G__19285__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19286 = cljs.core.next(xs);
var G__19287 = cljs.core.next(ys);
xs = G__19286;
ys = G__19287;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19288 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19289 = cljs.core.next(s);
res = G__19288;
s = G__19289;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19294 = ((h + (cljs.core.hash((function (){var G__19292 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19292) : cljs.core.key.call(null,G__19292));
})()) ^ cljs.core.hash((function (){var G__19293 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19293) : cljs.core.val.call(null,G__19293));
})()))) % (4503599627370496));
var G__19295 = cljs.core.next(s);
h = G__19294;
s = G__19295;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19296 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19297 = cljs.core.next(s__$1);
h = G__19296;
s__$1 = G__19297;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19308_19318 = cljs.core.seq(fn_map);
var chunk__19309_19319 = null;
var count__19310_19320 = (0);
var i__19311_19321 = (0);
while(true){
if((i__19311_19321 < count__19310_19320)){
var vec__19312_19322 = chunk__19309_19319.cljs$core$IIndexed$_nth$arity$2(null,i__19311_19321);
var key_name_19323 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19312_19322,(0),null);
var f_19324 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19312_19322,(1),null);
var str_name_19325 = (function (){var G__19313 = key_name_19323;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19313) : cljs.core.name.call(null,G__19313));
})();
(obj[str_name_19325] = f_19324);

var G__19326 = seq__19308_19318;
var G__19327 = chunk__19309_19319;
var G__19328 = count__19310_19320;
var G__19329 = (i__19311_19321 + (1));
seq__19308_19318 = G__19326;
chunk__19309_19319 = G__19327;
count__19310_19320 = G__19328;
i__19311_19321 = G__19329;
continue;
} else {
var temp__4126__auto___19330 = cljs.core.seq(seq__19308_19318);
if(temp__4126__auto___19330){
var seq__19308_19331__$1 = temp__4126__auto___19330;
if(cljs.core.chunked_seq_QMARK_(seq__19308_19331__$1)){
var c__13396__auto___19332 = (function (){var G__19314 = seq__19308_19331__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19314) : cljs.core.chunk_first.call(null,G__19314));
})();
var G__19333 = (function (){var G__19315 = seq__19308_19331__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19315) : cljs.core.chunk_rest.call(null,G__19315));
})();
var G__19334 = c__13396__auto___19332;
var G__19335 = cljs.core.count(c__13396__auto___19332);
var G__19336 = (0);
seq__19308_19318 = G__19333;
chunk__19309_19319 = G__19334;
count__19310_19320 = G__19335;
i__19311_19321 = G__19336;
continue;
} else {
var vec__19316_19337 = cljs.core.first(seq__19308_19331__$1);
var key_name_19338 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19316_19337,(0),null);
var f_19339 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19316_19337,(1),null);
var str_name_19340 = (function (){var G__19317 = key_name_19338;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19317) : cljs.core.name.call(null,G__19317));
})();
(obj[str_name_19340] = f_19339);

var G__19341 = cljs.core.next(seq__19308_19331__$1);
var G__19342 = null;
var G__19343 = (0);
var G__19344 = (0);
seq__19308_19318 = G__19341;
chunk__19309_19319 = G__19342;
count__19310_19320 = G__19343;
i__19311_19321 = G__19344;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19346 = coll;
if(G__19346){
var bit__13290__auto__ = (G__19346.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13290__auto__) || (G__19346.cljs$core$IReversible$)){
return true;
} else {
if((!G__19346.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19346);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19347 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19347;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19348 = (i - (1));
var G__19349 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19348;
r = G__19349;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19350__i = 0, G__19350__a = new Array(arguments.length -  0);
while (G__19350__i < G__19350__a.length) {G__19350__a[G__19350__i] = arguments[G__19350__i + 0]; ++G__19350__i;}
  xs = new cljs.core.IndexedSeq(G__19350__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19351){
var xs = cljs.core.seq(arglist__19351);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12607__auto__ = (coll == null);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var G__19355 = coll;
if(G__19355){
var bit__13283__auto__ = (G__19355.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13283__auto__) || (G__19355.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19357 = x;
if(G__19357){
var bit__13290__auto__ = (G__19357.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13290__auto__) || (G__19357.cljs$core$IList$)){
return true;
} else {
if((!G__19357.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19357);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12595__auto__ = cljs.core.not(a.ns);
if(and__12595__auto__){
return b.ns;
} else {
return and__12595__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19364 = a.ns;
var G__19365 = b.ns;
return goog.array.defaultCompare(G__19364,G__19365);
})();
if(((0) === nsc)){
var G__19366 = a.name;
var G__19367 = b.name;
return goog.array.defaultCompare(G__19366,G__19367);
} else {
return nsc;
}
}
} else {
var G__19368 = a.name;
var G__19369 = b.name;
return goog.array.defaultCompare(G__19368,G__19369);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13030__auto__ = self__._hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19371 = null;
var G__19371__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19371__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19371 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19371__2.call(this,self__,coll);
case 3:
return G__19371__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19371.cljs$core$IFn$_invoke$arity$2 = G__19371__2;
G__19371.cljs$core$IFn$_invoke$arity$3 = G__19371__3;
return G__19371;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19370){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19370)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19373 = x;
if(G__19373){
var bit__13283__auto__ = (G__19373.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13283__auto__) || (G__19373.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19375 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19375) : cljs.core.name.call(null,G__19375));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19376 = ls.sval();
ls = G__19376;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19378 = s;
if(G__19378){
var bit__13283__auto__ = (G__19378.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13283__auto__) || (G__19378.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19379 = cljs.core.next(s__$1);
s__$1 = G__19379;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19380 = (0);
var xs_19381 = cljs.core.seq(coll);
while(true){
if(xs_19381){
(ret[i_19380] = cljs.core.to_array(cljs.core.first(xs_19381)));

var G__19382 = (i_19380 + (1));
var G__19383 = cljs.core.next(xs_19381);
i_19380 = G__19382;
xs_19381 = G__19383;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19386 = (i + (1));
var G__19387 = cljs.core.next(s__$1);
i = G__19386;
s__$1 = G__19387;
continue;
} else {
return a;
}
break;
}
} else {
var n__13496__auto___19388 = size;
var i_19389 = (0);
while(true){
if((i_19389 < n__13496__auto___19388)){
(a[i_19389] = init_val_or_seq);

var G__19390 = (i_19389 + (1));
i_19389 = G__19390;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19393 = (i + (1));
var G__19394 = cljs.core.next(s__$1);
i = G__19393;
s__$1 = G__19394;
continue;
} else {
return a;
}
break;
}
} else {
var n__13496__auto___19395 = size;
var i_19396 = (0);
while(true){
if((i_19396 < n__13496__auto___19395)){
(a[i_19396] = init_val_or_seq);

var G__19397 = (i_19396 + (1));
i_19396 = G__19397;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19400 = (i + (1));
var G__19401 = cljs.core.next(s__$1);
i = G__19400;
s__$1 = G__19401;
continue;
} else {
return a;
}
break;
}
} else {
var n__13496__auto___19402 = size;
var i_19403 = (0);
while(true){
if((i_19403 < n__13496__auto___19402)){
(a[i_19403] = init_val_or_seq);

var G__19404 = (i_19403 + (1));
i_19403 = G__19404;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19407 = (i + (1));
var G__19408 = cljs.core.next(s__$1);
i = G__19407;
s__$1 = G__19408;
continue;
} else {
return a;
}
break;
}
} else {
var n__13496__auto___19409 = size;
var i_19410 = (0);
while(true){
if((i_19410 < n__13496__auto___19409)){
(a[i_19410] = init_val_or_seq);

var G__19411 = (i_19410 + (1));
i_19410 = G__19411;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19412 = cljs.core.next(s__$1);
var G__19413 = (i - (1));
var G__19414 = (sum + (1));
s__$1 = G__19412;
i = G__19413;
sum = G__19414;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19434__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19434 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19435__i = 0, G__19435__a = new Array(arguments.length -  2);
while (G__19435__i < G__19435__a.length) {G__19435__a[G__19435__i] = arguments[G__19435__i + 2]; ++G__19435__i;}
  zs = new cljs.core.IndexedSeq(G__19435__a,0);
} 
return G__19434__delegate.call(this,x,y,zs);};
G__19434.cljs$lang$maxFixedArity = 2;
G__19434.cljs$lang$applyTo = (function (arglist__19436){
var x = cljs.core.first(arglist__19436);
arglist__19436 = cljs.core.next(arglist__19436);
var y = cljs.core.first(arglist__19436);
var zs = cljs.core.rest(arglist__19436);
return G__19434__delegate(x,y,zs);
});
G__19434.cljs$core$IFn$_invoke$arity$variadic = G__19434__delegate;
return G__19434;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19437 = null;
if (arguments.length > 2) {
var G__19438__i = 0, G__19438__a = new Array(arguments.length -  2);
while (G__19438__i < G__19438__a.length) {G__19438__a[G__19438__i] = arguments[G__19438__i + 2]; ++G__19438__i;}
G__19437 = new cljs.core.IndexedSeq(G__19438__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19439__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19439 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19440__i = 0, G__19440__a = new Array(arguments.length -  4);
while (G__19440__i < G__19440__a.length) {G__19440__a[G__19440__i] = arguments[G__19440__i + 4]; ++G__19440__i;}
  more = new cljs.core.IndexedSeq(G__19440__a,0);
} 
return G__19439__delegate.call(this,a,b,c,d,more);};
G__19439.cljs$lang$maxFixedArity = 4;
G__19439.cljs$lang$applyTo = (function (arglist__19441){
var a = cljs.core.first(arglist__19441);
arglist__19441 = cljs.core.next(arglist__19441);
var b = cljs.core.first(arglist__19441);
arglist__19441 = cljs.core.next(arglist__19441);
var c = cljs.core.first(arglist__19441);
arglist__19441 = cljs.core.next(arglist__19441);
var d = cljs.core.first(arglist__19441);
var more = cljs.core.rest(arglist__19441);
return G__19439__delegate(a,b,c,d,more);
});
G__19439.cljs$core$IFn$_invoke$arity$variadic = G__19439__delegate;
return G__19439;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19442 = null;
if (arguments.length > 4) {
var G__19443__i = 0, G__19443__a = new Array(arguments.length -  4);
while (G__19443__i < G__19443__a.length) {G__19443__a[G__19443__i] = arguments[G__19443__i + 4]; ++G__19443__i;}
G__19442 = new cljs.core.IndexedSeq(G__19443__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19444__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19445 = ntcoll;
var G__19446 = cljs.core.first(vals);
var G__19447 = cljs.core.next(vals);
tcoll = G__19445;
val = G__19446;
vals = G__19447;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19444 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19448__i = 0, G__19448__a = new Array(arguments.length -  2);
while (G__19448__i < G__19448__a.length) {G__19448__a[G__19448__i] = arguments[G__19448__i + 2]; ++G__19448__i;}
  vals = new cljs.core.IndexedSeq(G__19448__a,0);
} 
return G__19444__delegate.call(this,tcoll,val,vals);};
G__19444.cljs$lang$maxFixedArity = 2;
G__19444.cljs$lang$applyTo = (function (arglist__19449){
var tcoll = cljs.core.first(arglist__19449);
arglist__19449 = cljs.core.next(arglist__19449);
var val = cljs.core.first(arglist__19449);
var vals = cljs.core.rest(arglist__19449);
return G__19444__delegate(tcoll,val,vals);
});
G__19444.cljs$core$IFn$_invoke$arity$variadic = G__19444__delegate;
return G__19444;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19450 = null;
if (arguments.length > 2) {
var G__19451__i = 0, G__19451__a = new Array(arguments.length -  2);
while (G__19451__i < G__19451__a.length) {G__19451__a[G__19451__i] = arguments[G__19451__i + 2]; ++G__19451__i;}
G__19450 = new cljs.core.IndexedSeq(G__19451__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19452__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19453 = ntcoll;
var G__19454 = cljs.core.first(kvs);
var G__19455 = cljs.core.second(kvs);
var G__19456 = cljs.core.nnext(kvs);
tcoll = G__19453;
key = G__19454;
val = G__19455;
kvs = G__19456;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19452 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19457__i = 0, G__19457__a = new Array(arguments.length -  3);
while (G__19457__i < G__19457__a.length) {G__19457__a[G__19457__i] = arguments[G__19457__i + 3]; ++G__19457__i;}
  kvs = new cljs.core.IndexedSeq(G__19457__a,0);
} 
return G__19452__delegate.call(this,tcoll,key,val,kvs);};
G__19452.cljs$lang$maxFixedArity = 3;
G__19452.cljs$lang$applyTo = (function (arglist__19458){
var tcoll = cljs.core.first(arglist__19458);
arglist__19458 = cljs.core.next(arglist__19458);
var key = cljs.core.first(arglist__19458);
arglist__19458 = cljs.core.next(arglist__19458);
var val = cljs.core.first(arglist__19458);
var kvs = cljs.core.rest(arglist__19458);
return G__19452__delegate(tcoll,key,val,kvs);
});
G__19452.cljs$core$IFn$_invoke$arity$variadic = G__19452__delegate;
return G__19452;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19459 = null;
if (arguments.length > 3) {
var G__19460__i = 0, G__19460__a = new Array(arguments.length -  3);
while (G__19460__i < G__19460__a.length) {G__19460__a[G__19460__i] = arguments[G__19460__i + 3]; ++G__19460__i;}
G__19459 = new cljs.core.IndexedSeq(G__19460__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19459);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19461__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19462 = ntcoll;
var G__19463 = cljs.core.first(ks);
var G__19464 = cljs.core.next(ks);
tcoll = G__19462;
key = G__19463;
ks = G__19464;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19461 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19465__i = 0, G__19465__a = new Array(arguments.length -  2);
while (G__19465__i < G__19465__a.length) {G__19465__a[G__19465__i] = arguments[G__19465__i + 2]; ++G__19465__i;}
  ks = new cljs.core.IndexedSeq(G__19465__a,0);
} 
return G__19461__delegate.call(this,tcoll,key,ks);};
G__19461.cljs$lang$maxFixedArity = 2;
G__19461.cljs$lang$applyTo = (function (arglist__19466){
var tcoll = cljs.core.first(arglist__19466);
arglist__19466 = cljs.core.next(arglist__19466);
var key = cljs.core.first(arglist__19466);
var ks = cljs.core.rest(arglist__19466);
return G__19461__delegate(tcoll,key,ks);
});
G__19461.cljs$core$IFn$_invoke$arity$variadic = G__19461__delegate;
return G__19461;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__19467 = null;
if (arguments.length > 2) {
var G__19468__i = 0, G__19468__a = new Array(arguments.length -  2);
while (G__19468__i < G__19468__a.length) {G__19468__a[G__19468__i] = arguments[G__19468__i + 2]; ++G__19468__i;}
G__19467 = new cljs.core.IndexedSeq(G__19468__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__19467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__19469__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19470 = ntcoll;
var G__19471 = cljs.core.first(vals);
var G__19472 = cljs.core.next(vals);
tcoll = G__19470;
val = G__19471;
vals = G__19472;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19469 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19473__i = 0, G__19473__a = new Array(arguments.length -  2);
while (G__19473__i < G__19473__a.length) {G__19473__a[G__19473__i] = arguments[G__19473__i + 2]; ++G__19473__i;}
  vals = new cljs.core.IndexedSeq(G__19473__a,0);
} 
return G__19469__delegate.call(this,tcoll,val,vals);};
G__19469.cljs$lang$maxFixedArity = 2;
G__19469.cljs$lang$applyTo = (function (arglist__19474){
var tcoll = cljs.core.first(arglist__19474);
arglist__19474 = cljs.core.next(arglist__19474);
var val = cljs.core.first(arglist__19474);
var vals = cljs.core.rest(arglist__19474);
return G__19469__delegate(tcoll,val,vals);
});
G__19469.cljs$core$IFn$_invoke$arity$variadic = G__19469__delegate;
return G__19469;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__19475 = null;
if (arguments.length > 2) {
var G__19476__i = 0, G__19476__a = new Array(arguments.length -  2);
while (G__19476__i < G__19476__a.length) {G__19476__a[G__19476__i] = arguments[G__19476__i + 2]; ++G__19476__i;}
G__19475 = new cljs.core.IndexedSeq(G__19476__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13540 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13540);
} else {
var G__19687 = a13540;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19687) : f.call(null,G__19687));
}
} else {
var b13541 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13540,b13541);
} else {
var G__19688 = a13540;
var G__19689 = b13541;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19688,G__19689) : f.call(null,G__19688,G__19689));
}
} else {
var c13542 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13540,b13541,c13542);
} else {
var G__19690 = a13540;
var G__19691 = b13541;
var G__19692 = c13542;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19690,G__19691,G__19692) : f.call(null,G__19690,G__19691,G__19692));
}
} else {
var d13543 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13540,b13541,c13542,d13543);
} else {
var G__19693 = a13540;
var G__19694 = b13541;
var G__19695 = c13542;
var G__19696 = d13543;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19693,G__19694,G__19695,G__19696) : f.call(null,G__19693,G__19694,G__19695,G__19696));
}
} else {
var e13544 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13540,b13541,c13542,d13543,e13544);
} else {
var G__19697 = a13540;
var G__19698 = b13541;
var G__19699 = c13542;
var G__19700 = d13543;
var G__19701 = e13544;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19697,G__19698,G__19699,G__19700,G__19701) : f.call(null,G__19697,G__19698,G__19699,G__19700,G__19701));
}
} else {
var f13545 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13540,b13541,c13542,d13543,e13544,f13545);
} else {
var G__19702 = a13540;
var G__19703 = b13541;
var G__19704 = c13542;
var G__19705 = d13543;
var G__19706 = e13544;
var G__19707 = f13545;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__19702,G__19703,G__19704,G__19705,G__19706,G__19707) : f.call(null,G__19702,G__19703,G__19704,G__19705,G__19706,G__19707));
}
} else {
var g13546 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13540,b13541,c13542,d13543,e13544,f13545,g13546);
} else {
var G__19708 = a13540;
var G__19709 = b13541;
var G__19710 = c13542;
var G__19711 = d13543;
var G__19712 = e13544;
var G__19713 = f13545;
var G__19714 = g13546;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714) : f.call(null,G__19708,G__19709,G__19710,G__19711,G__19712,G__19713,G__19714));
}
} else {
var h13547 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547);
} else {
var G__19715 = a13540;
var G__19716 = b13541;
var G__19717 = c13542;
var G__19718 = d13543;
var G__19719 = e13544;
var G__19720 = f13545;
var G__19721 = g13546;
var G__19722 = h13547;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__19715,G__19716,G__19717,G__19718,G__19719,G__19720,G__19721,G__19722) : f.call(null,G__19715,G__19716,G__19717,G__19718,G__19719,G__19720,G__19721,G__19722));
}
} else {
var i13548 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548);
} else {
var G__19723 = a13540;
var G__19724 = b13541;
var G__19725 = c13542;
var G__19726 = d13543;
var G__19727 = e13544;
var G__19728 = f13545;
var G__19729 = g13546;
var G__19730 = h13547;
var G__19731 = i13548;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731) : f.call(null,G__19723,G__19724,G__19725,G__19726,G__19727,G__19728,G__19729,G__19730,G__19731));
}
} else {
var j13549 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549);
} else {
var G__19732 = a13540;
var G__19733 = b13541;
var G__19734 = c13542;
var G__19735 = d13543;
var G__19736 = e13544;
var G__19737 = f13545;
var G__19738 = g13546;
var G__19739 = h13547;
var G__19740 = i13548;
var G__19741 = j13549;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741) : f.call(null,G__19732,G__19733,G__19734,G__19735,G__19736,G__19737,G__19738,G__19739,G__19740,G__19741));
}
} else {
var k13550 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550);
} else {
var G__19742 = a13540;
var G__19743 = b13541;
var G__19744 = c13542;
var G__19745 = d13543;
var G__19746 = e13544;
var G__19747 = f13545;
var G__19748 = g13546;
var G__19749 = h13547;
var G__19750 = i13548;
var G__19751 = j13549;
var G__19752 = k13550;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752) : f.call(null,G__19742,G__19743,G__19744,G__19745,G__19746,G__19747,G__19748,G__19749,G__19750,G__19751,G__19752));
}
} else {
var l13551 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551);
} else {
var G__19753 = a13540;
var G__19754 = b13541;
var G__19755 = c13542;
var G__19756 = d13543;
var G__19757 = e13544;
var G__19758 = f13545;
var G__19759 = g13546;
var G__19760 = h13547;
var G__19761 = i13548;
var G__19762 = j13549;
var G__19763 = k13550;
var G__19764 = l13551;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__19753,G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764) : f.call(null,G__19753,G__19754,G__19755,G__19756,G__19757,G__19758,G__19759,G__19760,G__19761,G__19762,G__19763,G__19764));
}
} else {
var m13552 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552);
} else {
var G__19765 = a13540;
var G__19766 = b13541;
var G__19767 = c13542;
var G__19768 = d13543;
var G__19769 = e13544;
var G__19770 = f13545;
var G__19771 = g13546;
var G__19772 = h13547;
var G__19773 = i13548;
var G__19774 = j13549;
var G__19775 = k13550;
var G__19776 = l13551;
var G__19777 = m13552;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775,G__19776,G__19777) : f.call(null,G__19765,G__19766,G__19767,G__19768,G__19769,G__19770,G__19771,G__19772,G__19773,G__19774,G__19775,G__19776,G__19777));
}
} else {
var n13553 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553);
} else {
var G__19778 = a13540;
var G__19779 = b13541;
var G__19780 = c13542;
var G__19781 = d13543;
var G__19782 = e13544;
var G__19783 = f13545;
var G__19784 = g13546;
var G__19785 = h13547;
var G__19786 = i13548;
var G__19787 = j13549;
var G__19788 = k13550;
var G__19789 = l13551;
var G__19790 = m13552;
var G__19791 = n13553;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791) : f.call(null,G__19778,G__19779,G__19780,G__19781,G__19782,G__19783,G__19784,G__19785,G__19786,G__19787,G__19788,G__19789,G__19790,G__19791));
}
} else {
var o13554 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554);
} else {
var G__19792 = a13540;
var G__19793 = b13541;
var G__19794 = c13542;
var G__19795 = d13543;
var G__19796 = e13544;
var G__19797 = f13545;
var G__19798 = g13546;
var G__19799 = h13547;
var G__19800 = i13548;
var G__19801 = j13549;
var G__19802 = k13550;
var G__19803 = l13551;
var G__19804 = m13552;
var G__19805 = n13553;
var G__19806 = o13554;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__19792,G__19793,G__19794,G__19795,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806) : f.call(null,G__19792,G__19793,G__19794,G__19795,G__19796,G__19797,G__19798,G__19799,G__19800,G__19801,G__19802,G__19803,G__19804,G__19805,G__19806));
}
} else {
var p13555 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554,p13555);
} else {
var G__19807 = a13540;
var G__19808 = b13541;
var G__19809 = c13542;
var G__19810 = d13543;
var G__19811 = e13544;
var G__19812 = f13545;
var G__19813 = g13546;
var G__19814 = h13547;
var G__19815 = i13548;
var G__19816 = j13549;
var G__19817 = k13550;
var G__19818 = l13551;
var G__19819 = m13552;
var G__19820 = n13553;
var G__19821 = o13554;
var G__19822 = p13555;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817,G__19818,G__19819,G__19820,G__19821,G__19822) : f.call(null,G__19807,G__19808,G__19809,G__19810,G__19811,G__19812,G__19813,G__19814,G__19815,G__19816,G__19817,G__19818,G__19819,G__19820,G__19821,G__19822));
}
} else {
var q13556 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554,p13555,q13556);
} else {
var G__19823 = a13540;
var G__19824 = b13541;
var G__19825 = c13542;
var G__19826 = d13543;
var G__19827 = e13544;
var G__19828 = f13545;
var G__19829 = g13546;
var G__19830 = h13547;
var G__19831 = i13548;
var G__19832 = j13549;
var G__19833 = k13550;
var G__19834 = l13551;
var G__19835 = m13552;
var G__19836 = n13553;
var G__19837 = o13554;
var G__19838 = p13555;
var G__19839 = q13556;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__19823,G__19824,G__19825,G__19826,G__19827,G__19828,G__19829,G__19830,G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839) : f.call(null,G__19823,G__19824,G__19825,G__19826,G__19827,G__19828,G__19829,G__19830,G__19831,G__19832,G__19833,G__19834,G__19835,G__19836,G__19837,G__19838,G__19839));
}
} else {
var r13557 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554,p13555,q13556,r13557);
} else {
var G__19840 = a13540;
var G__19841 = b13541;
var G__19842 = c13542;
var G__19843 = d13543;
var G__19844 = e13544;
var G__19845 = f13545;
var G__19846 = g13546;
var G__19847 = h13547;
var G__19848 = i13548;
var G__19849 = j13549;
var G__19850 = k13550;
var G__19851 = l13551;
var G__19852 = m13552;
var G__19853 = n13553;
var G__19854 = o13554;
var G__19855 = p13555;
var G__19856 = q13556;
var G__19857 = r13557;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__19840,G__19841,G__19842,G__19843,G__19844,G__19845,G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857) : f.call(null,G__19840,G__19841,G__19842,G__19843,G__19844,G__19845,G__19846,G__19847,G__19848,G__19849,G__19850,G__19851,G__19852,G__19853,G__19854,G__19855,G__19856,G__19857));
}
} else {
var s13558 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554,p13555,q13556,r13557,s13558);
} else {
var G__19858 = a13540;
var G__19859 = b13541;
var G__19860 = c13542;
var G__19861 = d13543;
var G__19862 = e13544;
var G__19863 = f13545;
var G__19864 = g13546;
var G__19865 = h13547;
var G__19866 = i13548;
var G__19867 = j13549;
var G__19868 = k13550;
var G__19869 = l13551;
var G__19870 = m13552;
var G__19871 = n13553;
var G__19872 = o13554;
var G__19873 = p13555;
var G__19874 = q13556;
var G__19875 = r13557;
var G__19876 = s13558;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__19858,G__19859,G__19860,G__19861,G__19862,G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875,G__19876) : f.call(null,G__19858,G__19859,G__19860,G__19861,G__19862,G__19863,G__19864,G__19865,G__19866,G__19867,G__19868,G__19869,G__19870,G__19871,G__19872,G__19873,G__19874,G__19875,G__19876));
}
} else {
var t13559 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13540,b13541,c13542,d13543,e13544,f13545,g13546,h13547,i13548,j13549,k13550,l13551,m13552,n13553,o13554,p13555,q13556,r13557,s13558,t13559);
} else {
var G__19877 = a13540;
var G__19878 = b13541;
var G__19879 = c13542;
var G__19880 = d13543;
var G__19881 = e13544;
var G__19882 = f13545;
var G__19883 = g13546;
var G__19884 = h13547;
var G__19885 = i13548;
var G__19886 = j13549;
var G__19887 = k13550;
var G__19888 = l13551;
var G__19889 = m13552;
var G__19890 = n13553;
var G__19891 = o13554;
var G__19892 = p13555;
var G__19893 = q13556;
var G__19894 = r13557;
var G__19895 = s13558;
var G__19896 = t13559;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895,G__19896) : f.call(null,G__19877,G__19878,G__19879,G__19880,G__19881,G__19882,G__19883,G__19884,G__19885,G__19886,G__19887,G__19888,G__19889,G__19890,G__19891,G__19892,G__19893,G__19894,G__19895,G__19896));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__19897__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__19897 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__19898__i = 0, G__19898__a = new Array(arguments.length -  5);
while (G__19898__i < G__19898__a.length) {G__19898__a[G__19898__i] = arguments[G__19898__i + 5]; ++G__19898__i;}
  args = new cljs.core.IndexedSeq(G__19898__a,0);
} 
return G__19897__delegate.call(this,f,a,b,c,d,args);};
G__19897.cljs$lang$maxFixedArity = 5;
G__19897.cljs$lang$applyTo = (function (arglist__19899){
var f = cljs.core.first(arglist__19899);
arglist__19899 = cljs.core.next(arglist__19899);
var a = cljs.core.first(arglist__19899);
arglist__19899 = cljs.core.next(arglist__19899);
var b = cljs.core.first(arglist__19899);
arglist__19899 = cljs.core.next(arglist__19899);
var c = cljs.core.first(arglist__19899);
arglist__19899 = cljs.core.next(arglist__19899);
var d = cljs.core.first(arglist__19899);
var args = cljs.core.rest(arglist__19899);
return G__19897__delegate(f,a,b,c,d,args);
});
G__19897.cljs$core$IFn$_invoke$arity$variadic = G__19897__delegate;
return G__19897;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__19900 = null;
if (arguments.length > 5) {
var G__19901__i = 0, G__19901__a = new Array(arguments.length -  5);
while (G__19901__i < G__19901__a.length) {G__19901__a[G__19901__i] = arguments[G__19901__i + 5]; ++G__19901__i;}
G__19900 = new cljs.core.IndexedSeq(G__19901__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__19900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__19917 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19917) : f.call(null,G__19917));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__19918 = cljs.core.meta(obj);
var G__19919 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19918,G__19919) : f.call(null,G__19918,G__19919));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__19920 = cljs.core.meta(obj);
var G__19921 = a;
var G__19922 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19920,G__19921,G__19922) : f.call(null,G__19920,G__19921,G__19922));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__19923 = cljs.core.meta(obj);
var G__19924 = a;
var G__19925 = b;
var G__19926 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19923,G__19924,G__19925,G__19926) : f.call(null,G__19923,G__19924,G__19925,G__19926));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__19927 = cljs.core.meta(obj);
var G__19928 = a;
var G__19929 = b;
var G__19930 = c;
var G__19931 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__19927,G__19928,G__19929,G__19930,G__19931) : f.call(null,G__19927,G__19928,G__19929,G__19930,G__19931));
})());
});
var vary_meta__7 = (function() { 
var G__19932__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__19932 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__19933__i = 0, G__19933__a = new Array(arguments.length -  6);
while (G__19933__i < G__19933__a.length) {G__19933__a[G__19933__i] = arguments[G__19933__i + 6]; ++G__19933__i;}
  args = new cljs.core.IndexedSeq(G__19933__a,0);
} 
return G__19932__delegate.call(this,obj,f,a,b,c,d,args);};
G__19932.cljs$lang$maxFixedArity = 6;
G__19932.cljs$lang$applyTo = (function (arglist__19934){
var obj = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var f = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var a = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var b = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var c = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var d = cljs.core.first(arglist__19934);
var args = cljs.core.rest(arglist__19934);
return G__19932__delegate(obj,f,a,b,c,d,args);
});
G__19932.cljs$core$IFn$_invoke$arity$variadic = G__19932__delegate;
return G__19932;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__19935 = null;
if (arguments.length > 6) {
var G__19936__i = 0, G__19936__a = new Array(arguments.length -  6);
while (G__19936__i < G__19936__a.length) {G__19936__a[G__19936__i] = arguments[G__19936__i + 6]; ++G__19936__i;}
G__19935 = new cljs.core.IndexedSeq(G__19936__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__19935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__19937__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__19937 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19938__i = 0, G__19938__a = new Array(arguments.length -  2);
while (G__19938__i < G__19938__a.length) {G__19938__a[G__19938__i] = arguments[G__19938__i + 2]; ++G__19938__i;}
  more = new cljs.core.IndexedSeq(G__19938__a,0);
} 
return G__19937__delegate.call(this,x,y,more);};
G__19937.cljs$lang$maxFixedArity = 2;
G__19937.cljs$lang$applyTo = (function (arglist__19939){
var x = cljs.core.first(arglist__19939);
arglist__19939 = cljs.core.next(arglist__19939);
var y = cljs.core.first(arglist__19939);
var more = cljs.core.rest(arglist__19939);
return G__19937__delegate(x,y,more);
});
G__19937.cljs$core$IFn$_invoke$arity$variadic = G__19937__delegate;
return G__19937;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__19940 = null;
if (arguments.length > 2) {
var G__19941__i = 0, G__19941__a = new Array(arguments.length -  2);
while (G__19941__i < G__19941__a.length) {G__19941__a[G__19941__i] = arguments[G__19941__i + 2]; ++G__19941__i;}
G__19940 = new cljs.core.IndexedSeq(G__19941__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t19945 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t19945 = (function (nil_iter,meta19946){
this.nil_iter = nil_iter;
this.meta19946 = meta19946;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t19945.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t19945.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t19945.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t19945.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_19947){
var self__ = this;
var _19947__$1 = this;
return self__.meta19946;
});

cljs.core.t19945.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_19947,meta19946__$1){
var self__ = this;
var _19947__$1 = this;
return (new cljs.core.t19945(self__.nil_iter,meta19946__$1));
});

cljs.core.t19945.cljs$lang$type = true;

cljs.core.t19945.cljs$lang$ctorStr = "cljs.core/t19945";

cljs.core.t19945.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/t19945");
});

cljs.core.__GT_t19945 = (function __GT_t19945(nil_iter__$1,meta19946){
return (new cljs.core.t19945(nil_iter__$1,meta19946));
});

}

return (new cljs.core.t19945(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/brentvatne/coding/matter-cljs-fun/.repl/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12595__auto__ = !((lt.stepper == null));
if(and__12595__auto__){
return self__.iter.hasNext();
} else {
return and__12595__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__19948 = lt;
var G__19949 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__19948,G__19949) : self__.xform.call(null,G__19948,G__19949));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19950 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19950) : self__.xform.call(null,G__19950));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__19952 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19952) : xform.call(null,G__19952));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__19954 = cljs.core.next(iters__$1);
iters__$1 = G__19954;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13496__auto___19955 = self__.iters.length;
var i_19956 = (0);
while(true){
if((i_19956 < n__13496__auto___19955)){
(self__.nexts[i_19956] = (self__.iters[i_19956]).next());

var G__19957 = (i_19956 + (1));
i_19956 = G__19957;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12595__auto__ = !((lt.stepper == null));
if(and__12595__auto__){
return this$.hasNext();
} else {
return and__12595__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__19953 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__19953) : self__.xform.call(null,G__19953));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__19962 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19962) : xform.call(null,G__19962));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__19963_19967 = cljs.core.seq(colls);
var chunk__19964_19968 = null;
var count__19965_19969 = (0);
var i__19966_19970 = (0);
while(true){
if((i__19966_19970 < count__19965_19969)){
var coll_19971 = chunk__19964_19968.cljs$core$IIndexed$_nth$arity$2(null,i__19966_19970);
iters.push(cljs.core.iter(coll_19971));

var G__19972 = seq__19963_19967;
var G__19973 = chunk__19964_19968;
var G__19974 = count__19965_19969;
var G__19975 = (i__19966_19970 + (1));
seq__19963_19967 = G__19972;
chunk__19964_19968 = G__19973;
count__19965_19969 = G__19974;
i__19966_19970 = G__19975;
continue;
} else {
var temp__4126__auto___19976 = cljs.core.seq(seq__19963_19967);
if(temp__4126__auto___19976){
var seq__19963_19977__$1 = temp__4126__auto___19976;
if(cljs.core.chunked_seq_QMARK_(seq__19963_19977__$1)){
var c__13396__auto___19978 = cljs.core.chunk_first(seq__19963_19977__$1);
var G__19979 = cljs.core.chunk_rest(seq__19963_19977__$1);
var G__19980 = c__13396__auto___19978;
var G__19981 = cljs.core.count(c__13396__auto___19978);
var G__19982 = (0);
seq__19963_19967 = G__19979;
chunk__19964_19968 = G__19980;
count__19965_19969 = G__19981;
i__19966_19970 = G__19982;
continue;
} else {
var coll_19983 = cljs.core.first(seq__19963_19977__$1);
iters.push(cljs.core.iter(coll_19983));

var G__19984 = cljs.core.next(seq__19963_19977__$1);
var G__19985 = null;
var G__19986 = (0);
var G__19987 = (0);
seq__19963_19967 = G__19984;
chunk__19964_19968 = G__19985;
count__19965_19969 = G__19986;
i__19966_19970 = G__19987;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12607__auto__ = cljs.core.seq(coll);
if(or__12607__auto__){
return or__12607__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__19988__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__19988 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__19989__i = 0, G__19989__a = new Array(arguments.length -  2);
while (G__19989__i < G__19989__a.length) {G__19989__a[G__19989__i] = arguments[G__19989__i + 2]; ++G__19989__i;}
  colls = new cljs.core.IndexedSeq(G__19989__a,0);
} 
return G__19988__delegate.call(this,xform,coll,colls);};
G__19988.cljs$lang$maxFixedArity = 2;
G__19988.cljs$lang$applyTo = (function (arglist__19990){
var xform = cljs.core.first(arglist__19990);
arglist__19990 = cljs.core.next(arglist__19990);
var coll = cljs.core.first(arglist__19990);
var colls = cljs.core.rest(arglist__19990);
return G__19988__delegate(xform,coll,colls);
});
G__19988.cljs$core$IFn$_invoke$arity$variadic = G__19988__delegate;
return G__19988;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__19991 = null;
if (arguments.length > 2) {
var G__19992__i = 0, G__19992__a = new Array(arguments.length -  2);
while (G__19992__i < G__19992__a.length) {G__19992__a[G__19992__i] = arguments[G__19992__i + 2]; ++G__19992__i;}
G__19991 = new cljs.core.IndexedSeq(G__19992__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__19991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__19994 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19994) : pred.call(null,G__19994));
})())){
var G__19995 = pred;
var G__19996 = cljs.core.next(coll);
pred = G__19995;
coll = G__19996;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12607__auto__ = (function (){var G__20000 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20000) : pred.call(null,G__20000));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var G__20001 = pred;
var G__20002 = cljs.core.next(coll);
pred = G__20001;
coll = G__20002;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20009 = null;
var G__20009__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20009__1 = (function (x){
return cljs.core.not((function (){var G__20006 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20006) : f.call(null,G__20006));
})());
});
var G__20009__2 = (function (x,y){
return cljs.core.not((function (){var G__20007 = x;
var G__20008 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20007,G__20008) : f.call(null,G__20007,G__20008));
})());
});
var G__20009__3 = (function() { 
var G__20010__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20010 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20011__i = 0, G__20011__a = new Array(arguments.length -  2);
while (G__20011__i < G__20011__a.length) {G__20011__a[G__20011__i] = arguments[G__20011__i + 2]; ++G__20011__i;}
  zs = new cljs.core.IndexedSeq(G__20011__a,0);
} 
return G__20010__delegate.call(this,x,y,zs);};
G__20010.cljs$lang$maxFixedArity = 2;
G__20010.cljs$lang$applyTo = (function (arglist__20012){
var x = cljs.core.first(arglist__20012);
arglist__20012 = cljs.core.next(arglist__20012);
var y = cljs.core.first(arglist__20012);
var zs = cljs.core.rest(arglist__20012);
return G__20010__delegate(x,y,zs);
});
G__20010.cljs$core$IFn$_invoke$arity$variadic = G__20010__delegate;
return G__20010;
})()
;
G__20009 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20009__0.call(this);
case 1:
return G__20009__1.call(this,x);
case 2:
return G__20009__2.call(this,x,y);
default:
var G__20013 = null;
if (arguments.length > 2) {
var G__20014__i = 0, G__20014__a = new Array(arguments.length -  2);
while (G__20014__i < G__20014__a.length) {G__20014__a[G__20014__i] = arguments[G__20014__i + 2]; ++G__20014__i;}
G__20013 = new cljs.core.IndexedSeq(G__20014__a,0);
}
return G__20009__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20009.cljs$lang$maxFixedArity = 2;
G__20009.cljs$lang$applyTo = G__20009__3.cljs$lang$applyTo;
G__20009.cljs$core$IFn$_invoke$arity$0 = G__20009__0;
G__20009.cljs$core$IFn$_invoke$arity$1 = G__20009__1;
G__20009.cljs$core$IFn$_invoke$arity$2 = G__20009__2;
G__20009.cljs$core$IFn$_invoke$arity$variadic = G__20009__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20009;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20015__delegate = function (args){
return x;
};
var G__20015 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20016__i = 0, G__20016__a = new Array(arguments.length -  0);
while (G__20016__i < G__20016__a.length) {G__20016__a[G__20016__i] = arguments[G__20016__i + 0]; ++G__20016__i;}
  args = new cljs.core.IndexedSeq(G__20016__a,0);
} 
return G__20015__delegate.call(this,args);};
G__20015.cljs$lang$maxFixedArity = 0;
G__20015.cljs$lang$applyTo = (function (arglist__20017){
var args = cljs.core.seq(arglist__20017);
return G__20015__delegate(args);
});
G__20015.cljs$core$IFn$_invoke$arity$variadic = G__20015__delegate;
return G__20015;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__20072 = null;
var G__20072__0 = (function (){
var G__20045 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20045) : f.call(null,G__20045));
});
var G__20072__1 = (function (x){
var G__20046 = (function (){var G__20047 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20047) : g.call(null,G__20047));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20046) : f.call(null,G__20046));
});
var G__20072__2 = (function (x,y){
var G__20048 = (function (){var G__20049 = x;
var G__20050 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20049,G__20050) : g.call(null,G__20049,G__20050));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20048) : f.call(null,G__20048));
});
var G__20072__3 = (function (x,y,z){
var G__20051 = (function (){var G__20052 = x;
var G__20053 = y;
var G__20054 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20052,G__20053,G__20054) : g.call(null,G__20052,G__20053,G__20054));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20051) : f.call(null,G__20051));
});
var G__20072__4 = (function() { 
var G__20073__delegate = function (x,y,z,args){
var G__20055 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20055) : f.call(null,G__20055));
};
var G__20073 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20074__i = 0, G__20074__a = new Array(arguments.length -  3);
while (G__20074__i < G__20074__a.length) {G__20074__a[G__20074__i] = arguments[G__20074__i + 3]; ++G__20074__i;}
  args = new cljs.core.IndexedSeq(G__20074__a,0);
} 
return G__20073__delegate.call(this,x,y,z,args);};
G__20073.cljs$lang$maxFixedArity = 3;
G__20073.cljs$lang$applyTo = (function (arglist__20075){
var x = cljs.core.first(arglist__20075);
arglist__20075 = cljs.core.next(arglist__20075);
var y = cljs.core.first(arglist__20075);
arglist__20075 = cljs.core.next(arglist__20075);
var z = cljs.core.first(arglist__20075);
var args = cljs.core.rest(arglist__20075);
return G__20073__delegate(x,y,z,args);
});
G__20073.cljs$core$IFn$_invoke$arity$variadic = G__20073__delegate;
return G__20073;
})()
;
G__20072 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20072__0.call(this);
case 1:
return G__20072__1.call(this,x);
case 2:
return G__20072__2.call(this,x,y);
case 3:
return G__20072__3.call(this,x,y,z);
default:
var G__20076 = null;
if (arguments.length > 3) {
var G__20077__i = 0, G__20077__a = new Array(arguments.length -  3);
while (G__20077__i < G__20077__a.length) {G__20077__a[G__20077__i] = arguments[G__20077__i + 3]; ++G__20077__i;}
G__20076 = new cljs.core.IndexedSeq(G__20077__a,0);
}
return G__20072__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20072.cljs$lang$maxFixedArity = 3;
G__20072.cljs$lang$applyTo = G__20072__4.cljs$lang$applyTo;
G__20072.cljs$core$IFn$_invoke$arity$0 = G__20072__0;
G__20072.cljs$core$IFn$_invoke$arity$1 = G__20072__1;
G__20072.cljs$core$IFn$_invoke$arity$2 = G__20072__2;
G__20072.cljs$core$IFn$_invoke$arity$3 = G__20072__3;
G__20072.cljs$core$IFn$_invoke$arity$variadic = G__20072__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20072;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__20078 = null;
var G__20078__0 = (function (){
var G__20056 = (function (){var G__20057 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20057) : g.call(null,G__20057));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20056) : f.call(null,G__20056));
});
var G__20078__1 = (function (x){
var G__20058 = (function (){var G__20059 = (function (){var G__20060 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20060) : h.call(null,G__20060));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20059) : g.call(null,G__20059));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20058) : f.call(null,G__20058));
});
var G__20078__2 = (function (x,y){
var G__20061 = (function (){var G__20062 = (function (){var G__20063 = x;
var G__20064 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20063,G__20064) : h.call(null,G__20063,G__20064));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20062) : g.call(null,G__20062));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20061) : f.call(null,G__20061));
});
var G__20078__3 = (function (x,y,z){
var G__20065 = (function (){var G__20066 = (function (){var G__20067 = x;
var G__20068 = y;
var G__20069 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20067,G__20068,G__20069) : h.call(null,G__20067,G__20068,G__20069));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20066) : g.call(null,G__20066));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20065) : f.call(null,G__20065));
});
var G__20078__4 = (function() { 
var G__20079__delegate = function (x,y,z,args){
var G__20070 = (function (){var G__20071 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20071) : g.call(null,G__20071));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20070) : f.call(null,G__20070));
};
var G__20079 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20080__i = 0, G__20080__a = new Array(arguments.length -  3);
while (G__20080__i < G__20080__a.length) {G__20080__a[G__20080__i] = arguments[G__20080__i + 3]; ++G__20080__i;}
  args = new cljs.core.IndexedSeq(G__20080__a,0);
} 
return G__20079__delegate.call(this,x,y,z,args);};
G__20079.cljs$lang$maxFixedArity = 3;
G__20079.cljs$lang$applyTo = (function (arglist__20081){
var x = cljs.core.first(arglist__20081);
arglist__20081 = cljs.core.next(arglist__20081);
var y = cljs.core.first(arglist__20081);
arglist__20081 = cljs.core.next(arglist__20081);
var z = cljs.core.first(arglist__20081);
var args = cljs.core.rest(arglist__20081);
return G__20079__delegate(x,y,z,args);
});
G__20079.cljs$core$IFn$_invoke$arity$variadic = G__20079__delegate;
return G__20079;
})()
;
G__20078 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20078__0.call(this);
case 1:
return G__20078__1.call(this,x);
case 2:
return G__20078__2.call(this,x,y);
case 3:
return G__20078__3.call(this,x,y,z);
default:
var G__20082 = null;
if (arguments.length > 3) {
var G__20083__i = 0, G__20083__a = new Array(arguments.length -  3);
while (G__20083__i < G__20083__a.length) {G__20083__a[G__20083__i] = arguments[G__20083__i + 3]; ++G__20083__i;}
G__20082 = new cljs.core.IndexedSeq(G__20083__a,0);
}
return G__20078__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20078.cljs$lang$maxFixedArity = 3;
G__20078.cljs$lang$applyTo = G__20078__4.cljs$lang$applyTo;
G__20078.cljs$core$IFn$_invoke$arity$0 = G__20078__0;
G__20078.cljs$core$IFn$_invoke$arity$1 = G__20078__1;
G__20078.cljs$core$IFn$_invoke$arity$2 = G__20078__2;
G__20078.cljs$core$IFn$_invoke$arity$3 = G__20078__3;
G__20078.cljs$core$IFn$_invoke$arity$variadic = G__20078__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20078;
})()
});
var comp__4 = (function() { 
var G__20084__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__20085__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__20086 = cljs.core.first(fs__$2).call(null,ret);
var G__20087 = cljs.core.next(fs__$2);
ret = G__20086;
fs__$2 = G__20087;
continue;
} else {
return ret;
}
break;
}
};
var G__20085 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20088__i = 0, G__20088__a = new Array(arguments.length -  0);
while (G__20088__i < G__20088__a.length) {G__20088__a[G__20088__i] = arguments[G__20088__i + 0]; ++G__20088__i;}
  args = new cljs.core.IndexedSeq(G__20088__a,0);
} 
return G__20085__delegate.call(this,args);};
G__20085.cljs$lang$maxFixedArity = 0;
G__20085.cljs$lang$applyTo = (function (arglist__20089){
var args = cljs.core.seq(arglist__20089);
return G__20085__delegate(args);
});
G__20085.cljs$core$IFn$_invoke$arity$variadic = G__20085__delegate;
return G__20085;
})()
;
;})(fs__$1))
};
var G__20084 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__20090__i = 0, G__20090__a = new Array(arguments.length -  3);
while (G__20090__i < G__20090__a.length) {G__20090__a[G__20090__i] = arguments[G__20090__i + 3]; ++G__20090__i;}
  fs = new cljs.core.IndexedSeq(G__20090__a,0);
} 
return G__20084__delegate.call(this,f1,f2,f3,fs);};
G__20084.cljs$lang$maxFixedArity = 3;
G__20084.cljs$lang$applyTo = (function (arglist__20091){
var f1 = cljs.core.first(arglist__20091);
arglist__20091 = cljs.core.next(arglist__20091);
var f2 = cljs.core.first(arglist__20091);
arglist__20091 = cljs.core.next(arglist__20091);
var f3 = cljs.core.first(arglist__20091);
var fs = cljs.core.rest(arglist__20091);
return G__20084__delegate(f1,f2,f3,fs);
});
G__20084.cljs$core$IFn$_invoke$arity$variadic = G__20084__delegate;
return G__20084;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__20092 = null;
if (arguments.length > 3) {
var G__20093__i = 0, G__20093__a = new Array(arguments.length -  3);
while (G__20093__i < G__20093__a.length) {G__20093__a[G__20093__i] = arguments[G__20093__i + 3]; ++G__20093__i;}
G__20092 = new cljs.core.IndexedSeq(G__20093__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__20092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20178 = null;
var G__20178__0 = (function (){
var G__20136 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20136) : f.call(null,G__20136));
});
var G__20178__1 = (function (x){
var G__20137 = arg1;
var G__20138 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20137,G__20138) : f.call(null,G__20137,G__20138));
});
var G__20178__2 = (function (x,y){
var G__20139 = arg1;
var G__20140 = x;
var G__20141 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20139,G__20140,G__20141) : f.call(null,G__20139,G__20140,G__20141));
});
var G__20178__3 = (function (x,y,z){
var G__20142 = arg1;
var G__20143 = x;
var G__20144 = y;
var G__20145 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20142,G__20143,G__20144,G__20145) : f.call(null,G__20142,G__20143,G__20144,G__20145));
});
var G__20178__4 = (function() { 
var G__20179__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20179 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20180__i = 0, G__20180__a = new Array(arguments.length -  3);
while (G__20180__i < G__20180__a.length) {G__20180__a[G__20180__i] = arguments[G__20180__i + 3]; ++G__20180__i;}
  args = new cljs.core.IndexedSeq(G__20180__a,0);
} 
return G__20179__delegate.call(this,x,y,z,args);};
G__20179.cljs$lang$maxFixedArity = 3;
G__20179.cljs$lang$applyTo = (function (arglist__20181){
var x = cljs.core.first(arglist__20181);
arglist__20181 = cljs.core.next(arglist__20181);
var y = cljs.core.first(arglist__20181);
arglist__20181 = cljs.core.next(arglist__20181);
var z = cljs.core.first(arglist__20181);
var args = cljs.core.rest(arglist__20181);
return G__20179__delegate(x,y,z,args);
});
G__20179.cljs$core$IFn$_invoke$arity$variadic = G__20179__delegate;
return G__20179;
})()
;
G__20178 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20178__0.call(this);
case 1:
return G__20178__1.call(this,x);
case 2:
return G__20178__2.call(this,x,y);
case 3:
return G__20178__3.call(this,x,y,z);
default:
var G__20182 = null;
if (arguments.length > 3) {
var G__20183__i = 0, G__20183__a = new Array(arguments.length -  3);
while (G__20183__i < G__20183__a.length) {G__20183__a[G__20183__i] = arguments[G__20183__i + 3]; ++G__20183__i;}
G__20182 = new cljs.core.IndexedSeq(G__20183__a,0);
}
return G__20178__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20182);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20178.cljs$lang$maxFixedArity = 3;
G__20178.cljs$lang$applyTo = G__20178__4.cljs$lang$applyTo;
G__20178.cljs$core$IFn$_invoke$arity$0 = G__20178__0;
G__20178.cljs$core$IFn$_invoke$arity$1 = G__20178__1;
G__20178.cljs$core$IFn$_invoke$arity$2 = G__20178__2;
G__20178.cljs$core$IFn$_invoke$arity$3 = G__20178__3;
G__20178.cljs$core$IFn$_invoke$arity$variadic = G__20178__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20178;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20184 = null;
var G__20184__0 = (function (){
var G__20146 = arg1;
var G__20147 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20146,G__20147) : f.call(null,G__20146,G__20147));
});
var G__20184__1 = (function (x){
var G__20148 = arg1;
var G__20149 = arg2;
var G__20150 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20148,G__20149,G__20150) : f.call(null,G__20148,G__20149,G__20150));
});
var G__20184__2 = (function (x,y){
var G__20151 = arg1;
var G__20152 = arg2;
var G__20153 = x;
var G__20154 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20151,G__20152,G__20153,G__20154) : f.call(null,G__20151,G__20152,G__20153,G__20154));
});
var G__20184__3 = (function (x,y,z){
var G__20155 = arg1;
var G__20156 = arg2;
var G__20157 = x;
var G__20158 = y;
var G__20159 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20155,G__20156,G__20157,G__20158,G__20159) : f.call(null,G__20155,G__20156,G__20157,G__20158,G__20159));
});
var G__20184__4 = (function() { 
var G__20185__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20185 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20186__i = 0, G__20186__a = new Array(arguments.length -  3);
while (G__20186__i < G__20186__a.length) {G__20186__a[G__20186__i] = arguments[G__20186__i + 3]; ++G__20186__i;}
  args = new cljs.core.IndexedSeq(G__20186__a,0);
} 
return G__20185__delegate.call(this,x,y,z,args);};
G__20185.cljs$lang$maxFixedArity = 3;
G__20185.cljs$lang$applyTo = (function (arglist__20187){
var x = cljs.core.first(arglist__20187);
arglist__20187 = cljs.core.next(arglist__20187);
var y = cljs.core.first(arglist__20187);
arglist__20187 = cljs.core.next(arglist__20187);
var z = cljs.core.first(arglist__20187);
var args = cljs.core.rest(arglist__20187);
return G__20185__delegate(x,y,z,args);
});
G__20185.cljs$core$IFn$_invoke$arity$variadic = G__20185__delegate;
return G__20185;
})()
;
G__20184 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20184__0.call(this);
case 1:
return G__20184__1.call(this,x);
case 2:
return G__20184__2.call(this,x,y);
case 3:
return G__20184__3.call(this,x,y,z);
default:
var G__20188 = null;
if (arguments.length > 3) {
var G__20189__i = 0, G__20189__a = new Array(arguments.length -  3);
while (G__20189__i < G__20189__a.length) {G__20189__a[G__20189__i] = arguments[G__20189__i + 3]; ++G__20189__i;}
G__20188 = new cljs.core.IndexedSeq(G__20189__a,0);
}
return G__20184__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20184.cljs$lang$maxFixedArity = 3;
G__20184.cljs$lang$applyTo = G__20184__4.cljs$lang$applyTo;
G__20184.cljs$core$IFn$_invoke$arity$0 = G__20184__0;
G__20184.cljs$core$IFn$_invoke$arity$1 = G__20184__1;
G__20184.cljs$core$IFn$_invoke$arity$2 = G__20184__2;
G__20184.cljs$core$IFn$_invoke$arity$3 = G__20184__3;
G__20184.cljs$core$IFn$_invoke$arity$variadic = G__20184__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20184;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20190 = null;
var G__20190__0 = (function (){
var G__20160 = arg1;
var G__20161 = arg2;
var G__20162 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20160,G__20161,G__20162) : f.call(null,G__20160,G__20161,G__20162));
});
var G__20190__1 = (function (x){
var G__20163 = arg1;
var G__20164 = arg2;
var G__20165 = arg3;
var G__20166 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20163,G__20164,G__20165,G__20166) : f.call(null,G__20163,G__20164,G__20165,G__20166));
});
var G__20190__2 = (function (x,y){
var G__20167 = arg1;
var G__20168 = arg2;
var G__20169 = arg3;
var G__20170 = x;
var G__20171 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20167,G__20168,G__20169,G__20170,G__20171) : f.call(null,G__20167,G__20168,G__20169,G__20170,G__20171));
});
var G__20190__3 = (function (x,y,z){
var G__20172 = arg1;
var G__20173 = arg2;
var G__20174 = arg3;
var G__20175 = x;
var G__20176 = y;
var G__20177 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20172,G__20173,G__20174,G__20175,G__20176,G__20177) : f.call(null,G__20172,G__20173,G__20174,G__20175,G__20176,G__20177));
});
var G__20190__4 = (function() { 
var G__20191__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20191 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20192__i = 0, G__20192__a = new Array(arguments.length -  3);
while (G__20192__i < G__20192__a.length) {G__20192__a[G__20192__i] = arguments[G__20192__i + 3]; ++G__20192__i;}
  args = new cljs.core.IndexedSeq(G__20192__a,0);
} 
return G__20191__delegate.call(this,x,y,z,args);};
G__20191.cljs$lang$maxFixedArity = 3;
G__20191.cljs$lang$applyTo = (function (arglist__20193){
var x = cljs.core.first(arglist__20193);
arglist__20193 = cljs.core.next(arglist__20193);
var y = cljs.core.first(arglist__20193);
arglist__20193 = cljs.core.next(arglist__20193);
var z = cljs.core.first(arglist__20193);
var args = cljs.core.rest(arglist__20193);
return G__20191__delegate(x,y,z,args);
});
G__20191.cljs$core$IFn$_invoke$arity$variadic = G__20191__delegate;
return G__20191;
})()
;
G__20190 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20190__0.call(this);
case 1:
return G__20190__1.call(this,x);
case 2:
return G__20190__2.call(this,x,y);
case 3:
return G__20190__3.call(this,x,y,z);
default:
var G__20194 = null;
if (arguments.length > 3) {
var G__20195__i = 0, G__20195__a = new Array(arguments.length -  3);
while (G__20195__i < G__20195__a.length) {G__20195__a[G__20195__i] = arguments[G__20195__i + 3]; ++G__20195__i;}
G__20194 = new cljs.core.IndexedSeq(G__20195__a,0);
}
return G__20190__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20190.cljs$lang$maxFixedArity = 3;
G__20190.cljs$lang$applyTo = G__20190__4.cljs$lang$applyTo;
G__20190.cljs$core$IFn$_invoke$arity$0 = G__20190__0;
G__20190.cljs$core$IFn$_invoke$arity$1 = G__20190__1;
G__20190.cljs$core$IFn$_invoke$arity$2 = G__20190__2;
G__20190.cljs$core$IFn$_invoke$arity$3 = G__20190__3;
G__20190.cljs$core$IFn$_invoke$arity$variadic = G__20190__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20190;
})()
});
var partial__5 = (function() { 
var G__20196__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20197__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20197 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20198__i = 0, G__20198__a = new Array(arguments.length -  0);
while (G__20198__i < G__20198__a.length) {G__20198__a[G__20198__i] = arguments[G__20198__i + 0]; ++G__20198__i;}
  args = new cljs.core.IndexedSeq(G__20198__a,0);
} 
return G__20197__delegate.call(this,args);};
G__20197.cljs$lang$maxFixedArity = 0;
G__20197.cljs$lang$applyTo = (function (arglist__20199){
var args = cljs.core.seq(arglist__20199);
return G__20197__delegate(args);
});
G__20197.cljs$core$IFn$_invoke$arity$variadic = G__20197__delegate;
return G__20197;
})()
;
};
var G__20196 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20200__i = 0, G__20200__a = new Array(arguments.length -  4);
while (G__20200__i < G__20200__a.length) {G__20200__a[G__20200__i] = arguments[G__20200__i + 4]; ++G__20200__i;}
  more = new cljs.core.IndexedSeq(G__20200__a,0);
} 
return G__20196__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20196.cljs$lang$maxFixedArity = 4;
G__20196.cljs$lang$applyTo = (function (arglist__20201){
var f = cljs.core.first(arglist__20201);
arglist__20201 = cljs.core.next(arglist__20201);
var arg1 = cljs.core.first(arglist__20201);
arglist__20201 = cljs.core.next(arglist__20201);
var arg2 = cljs.core.first(arglist__20201);
arglist__20201 = cljs.core.next(arglist__20201);
var arg3 = cljs.core.first(arglist__20201);
var more = cljs.core.rest(arglist__20201);
return G__20196__delegate(f,arg1,arg2,arg3,more);
});
G__20196.cljs$core$IFn$_invoke$arity$variadic = G__20196__delegate;
return G__20196;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20202 = null;
if (arguments.length > 4) {
var G__20203__i = 0, G__20203__a = new Array(arguments.length -  4);
while (G__20203__i < G__20203__a.length) {G__20203__a[G__20203__i] = arguments[G__20203__i + 4]; ++G__20203__i;}
G__20202 = new cljs.core.IndexedSeq(G__20203__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20236 = null;
var G__20236__1 = (function (a){
var G__20220 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20220) : f.call(null,G__20220));
});
var G__20236__2 = (function (a,b){
var G__20221 = (((a == null))?x:a);
var G__20222 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20221,G__20222) : f.call(null,G__20221,G__20222));
});
var G__20236__3 = (function (a,b,c){
var G__20223 = (((a == null))?x:a);
var G__20224 = b;
var G__20225 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20223,G__20224,G__20225) : f.call(null,G__20223,G__20224,G__20225));
});
var G__20236__4 = (function() { 
var G__20237__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20237 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20238__i = 0, G__20238__a = new Array(arguments.length -  3);
while (G__20238__i < G__20238__a.length) {G__20238__a[G__20238__i] = arguments[G__20238__i + 3]; ++G__20238__i;}
  ds = new cljs.core.IndexedSeq(G__20238__a,0);
} 
return G__20237__delegate.call(this,a,b,c,ds);};
G__20237.cljs$lang$maxFixedArity = 3;
G__20237.cljs$lang$applyTo = (function (arglist__20239){
var a = cljs.core.first(arglist__20239);
arglist__20239 = cljs.core.next(arglist__20239);
var b = cljs.core.first(arglist__20239);
arglist__20239 = cljs.core.next(arglist__20239);
var c = cljs.core.first(arglist__20239);
var ds = cljs.core.rest(arglist__20239);
return G__20237__delegate(a,b,c,ds);
});
G__20237.cljs$core$IFn$_invoke$arity$variadic = G__20237__delegate;
return G__20237;
})()
;
G__20236 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20236__1.call(this,a);
case 2:
return G__20236__2.call(this,a,b);
case 3:
return G__20236__3.call(this,a,b,c);
default:
var G__20240 = null;
if (arguments.length > 3) {
var G__20241__i = 0, G__20241__a = new Array(arguments.length -  3);
while (G__20241__i < G__20241__a.length) {G__20241__a[G__20241__i] = arguments[G__20241__i + 3]; ++G__20241__i;}
G__20240 = new cljs.core.IndexedSeq(G__20241__a,0);
}
return G__20236__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20236.cljs$lang$maxFixedArity = 3;
G__20236.cljs$lang$applyTo = G__20236__4.cljs$lang$applyTo;
G__20236.cljs$core$IFn$_invoke$arity$1 = G__20236__1;
G__20236.cljs$core$IFn$_invoke$arity$2 = G__20236__2;
G__20236.cljs$core$IFn$_invoke$arity$3 = G__20236__3;
G__20236.cljs$core$IFn$_invoke$arity$variadic = G__20236__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20236;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20242 = null;
var G__20242__2 = (function (a,b){
var G__20226 = (((a == null))?x:a);
var G__20227 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20226,G__20227) : f.call(null,G__20226,G__20227));
});
var G__20242__3 = (function (a,b,c){
var G__20228 = (((a == null))?x:a);
var G__20229 = (((b == null))?y:b);
var G__20230 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20228,G__20229,G__20230) : f.call(null,G__20228,G__20229,G__20230));
});
var G__20242__4 = (function() { 
var G__20243__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20243 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20244__i = 0, G__20244__a = new Array(arguments.length -  3);
while (G__20244__i < G__20244__a.length) {G__20244__a[G__20244__i] = arguments[G__20244__i + 3]; ++G__20244__i;}
  ds = new cljs.core.IndexedSeq(G__20244__a,0);
} 
return G__20243__delegate.call(this,a,b,c,ds);};
G__20243.cljs$lang$maxFixedArity = 3;
G__20243.cljs$lang$applyTo = (function (arglist__20245){
var a = cljs.core.first(arglist__20245);
arglist__20245 = cljs.core.next(arglist__20245);
var b = cljs.core.first(arglist__20245);
arglist__20245 = cljs.core.next(arglist__20245);
var c = cljs.core.first(arglist__20245);
var ds = cljs.core.rest(arglist__20245);
return G__20243__delegate(a,b,c,ds);
});
G__20243.cljs$core$IFn$_invoke$arity$variadic = G__20243__delegate;
return G__20243;
})()
;
G__20242 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20242__2.call(this,a,b);
case 3:
return G__20242__3.call(this,a,b,c);
default:
var G__20246 = null;
if (arguments.length > 3) {
var G__20247__i = 0, G__20247__a = new Array(arguments.length -  3);
while (G__20247__i < G__20247__a.length) {G__20247__a[G__20247__i] = arguments[G__20247__i + 3]; ++G__20247__i;}
G__20246 = new cljs.core.IndexedSeq(G__20247__a,0);
}
return G__20242__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20242.cljs$lang$maxFixedArity = 3;
G__20242.cljs$lang$applyTo = G__20242__4.cljs$lang$applyTo;
G__20242.cljs$core$IFn$_invoke$arity$2 = G__20242__2;
G__20242.cljs$core$IFn$_invoke$arity$3 = G__20242__3;
G__20242.cljs$core$IFn$_invoke$arity$variadic = G__20242__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20242;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20248 = null;
var G__20248__2 = (function (a,b){
var G__20231 = (((a == null))?x:a);
var G__20232 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20231,G__20232) : f.call(null,G__20231,G__20232));
});
var G__20248__3 = (function (a,b,c){
var G__20233 = (((a == null))?x:a);
var G__20234 = (((b == null))?y:b);
var G__20235 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20233,G__20234,G__20235) : f.call(null,G__20233,G__20234,G__20235));
});
var G__20248__4 = (function() { 
var G__20249__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20249 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20250__i = 0, G__20250__a = new Array(arguments.length -  3);
while (G__20250__i < G__20250__a.length) {G__20250__a[G__20250__i] = arguments[G__20250__i + 3]; ++G__20250__i;}
  ds = new cljs.core.IndexedSeq(G__20250__a,0);
} 
return G__20249__delegate.call(this,a,b,c,ds);};
G__20249.cljs$lang$maxFixedArity = 3;
G__20249.cljs$lang$applyTo = (function (arglist__20251){
var a = cljs.core.first(arglist__20251);
arglist__20251 = cljs.core.next(arglist__20251);
var b = cljs.core.first(arglist__20251);
arglist__20251 = cljs.core.next(arglist__20251);
var c = cljs.core.first(arglist__20251);
var ds = cljs.core.rest(arglist__20251);
return G__20249__delegate(a,b,c,ds);
});
G__20249.cljs$core$IFn$_invoke$arity$variadic = G__20249__delegate;
return G__20249;
})()
;
G__20248 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20248__2.call(this,a,b);
case 3:
return G__20248__3.call(this,a,b,c);
default:
var G__20252 = null;
if (arguments.length > 3) {
var G__20253__i = 0, G__20253__a = new Array(arguments.length -  3);
while (G__20253__i < G__20253__a.length) {G__20253__a[G__20253__i] = arguments[G__20253__i + 3]; ++G__20253__i;}
G__20252 = new cljs.core.IndexedSeq(G__20253__a,0);
}
return G__20248__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20248.cljs$lang$maxFixedArity = 3;
G__20248.cljs$lang$applyTo = G__20248__4.cljs$lang$applyTo;
G__20248.cljs$core$IFn$_invoke$arity$2 = G__20248__2;
G__20248.cljs$core$IFn$_invoke$arity$3 = G__20248__3;
G__20248.cljs$core$IFn$_invoke$arity$variadic = G__20248__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20248;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13496__auto___20302 = size;
var i_20303 = (0);
while(true){
if((i_20303 < n__13496__auto___20302)){
cljs.core.chunk_append(b,(function (){var G__20298 = (idx + i_20303);
var G__20299 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20303);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20298,G__20299) : f.call(null,G__20298,G__20299));
})());

var G__20304 = (i_20303 + (1));
i_20303 = G__20304;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20300 = idx;
var G__20301 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20300,G__20301) : f.call(null,G__20300,G__20301));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20323 = null;
var G__20323__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20323__1 = (function (result){
var G__20317 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20317) : rf.call(null,G__20317));
});
var G__20323__2 = (function (result,input){
var v = (function (){var G__20318 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20318) : f.call(null,G__20318));
})();
if((v == null)){
return result;
} else {
var G__20319 = result;
var G__20320 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20319,G__20320) : rf.call(null,G__20319,G__20320));
}
});
G__20323 = function(result,input){
switch(arguments.length){
case 0:
return G__20323__0.call(this);
case 1:
return G__20323__1.call(this,result);
case 2:
return G__20323__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20323.cljs$core$IFn$_invoke$arity$0 = G__20323__0;
G__20323.cljs$core$IFn$_invoke$arity$1 = G__20323__1;
G__20323.cljs$core$IFn$_invoke$arity$2 = G__20323__2;
return G__20323;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13496__auto___20324 = size;
var i_20325 = (0);
while(true){
if((i_20325 < n__13496__auto___20324)){
var x_20326 = (function (){var G__20321 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20325);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20321) : f.call(null,G__20321));
})();
if((x_20326 == null)){
} else {
cljs.core.chunk_append(b,x_20326);
}

var G__20327 = (i_20325 + (1));
i_20325 = G__20327;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20322 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20322) : f.call(null,G__20322));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20328 = this$__$1;
return goog.getUid(G__20328);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20329 = cljs.core.seq(self__.watches);
var chunk__20330 = null;
var count__20331 = (0);
var i__20332 = (0);
while(true){
if((i__20332 < count__20331)){
var vec__20333 = chunk__20330.cljs$core$IIndexed$_nth$arity$2(null,i__20332);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20333,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20333,(1),null);
var G__20334_20343 = key;
var G__20335_20344 = this$__$1;
var G__20336_20345 = oldval;
var G__20337_20346 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20334_20343,G__20335_20344,G__20336_20345,G__20337_20346) : f.call(null,G__20334_20343,G__20335_20344,G__20336_20345,G__20337_20346));

var G__20347 = seq__20329;
var G__20348 = chunk__20330;
var G__20349 = count__20331;
var G__20350 = (i__20332 + (1));
seq__20329 = G__20347;
chunk__20330 = G__20348;
count__20331 = G__20349;
i__20332 = G__20350;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20329);
if(temp__4126__auto__){
var seq__20329__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20329__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__20329__$1);
var G__20351 = cljs.core.chunk_rest(seq__20329__$1);
var G__20352 = c__13396__auto__;
var G__20353 = cljs.core.count(c__13396__auto__);
var G__20354 = (0);
seq__20329 = G__20351;
chunk__20330 = G__20352;
count__20331 = G__20353;
i__20332 = G__20354;
continue;
} else {
var vec__20338 = cljs.core.first(seq__20329__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20338,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20338,(1),null);
var G__20339_20355 = key;
var G__20340_20356 = this$__$1;
var G__20341_20357 = oldval;
var G__20342_20358 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20339_20355,G__20340_20356,G__20341_20357,G__20342_20358) : f.call(null,G__20339_20355,G__20340_20356,G__20341_20357,G__20342_20358));

var G__20359 = cljs.core.next(seq__20329__$1);
var G__20360 = null;
var G__20361 = (0);
var G__20362 = (0);
seq__20329 = G__20359;
chunk__20330 = G__20360;
count__20331 = G__20361;
i__20332 = G__20362;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20366__delegate = function (x,p__20363){
var map__20365 = p__20363;
var map__20365__$1 = ((cljs.core.seq_QMARK_(map__20365))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20365):map__20365);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20365__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20365__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20366 = function (x,var_args){
var p__20363 = null;
if (arguments.length > 1) {
var G__20367__i = 0, G__20367__a = new Array(arguments.length -  1);
while (G__20367__i < G__20367__a.length) {G__20367__a[G__20367__i] = arguments[G__20367__i + 1]; ++G__20367__i;}
  p__20363 = new cljs.core.IndexedSeq(G__20367__a,0);
} 
return G__20366__delegate.call(this,x,p__20363);};
G__20366.cljs$lang$maxFixedArity = 1;
G__20366.cljs$lang$applyTo = (function (arglist__20368){
var x = cljs.core.first(arglist__20368);
var p__20363 = cljs.core.rest(arglist__20368);
return G__20366__delegate(x,p__20363);
});
G__20366.cljs$core$IFn$_invoke$arity$variadic = G__20366__delegate;
return G__20366;
})()
;
atom = function(x,var_args){
var p__20363 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20369 = null;
if (arguments.length > 1) {
var G__20370__i = 0, G__20370__a = new Array(arguments.length -  1);
while (G__20370__i < G__20370__a.length) {G__20370__a[G__20370__i] = arguments[G__20370__i + 1]; ++G__20370__i;}
G__20369 = new cljs.core.IndexedSeq(G__20370__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__20373 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20373) : validate.call(null,G__20373));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__20374 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20374) : cljs.core.pr_str.call(null,G__20374));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20381 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20381) : f.call(null,G__20381));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20382 = a.state;
var G__20383 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20382,G__20383) : f.call(null,G__20382,G__20383));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20384 = a.state;
var G__20385 = x;
var G__20386 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20384,G__20385,G__20386) : f.call(null,G__20384,G__20385,G__20386));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20387__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20387 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20388__i = 0, G__20388__a = new Array(arguments.length -  4);
while (G__20388__i < G__20388__a.length) {G__20388__a[G__20388__i] = arguments[G__20388__i + 4]; ++G__20388__i;}
  more = new cljs.core.IndexedSeq(G__20388__a,0);
} 
return G__20387__delegate.call(this,a,f,x,y,more);};
G__20387.cljs$lang$maxFixedArity = 4;
G__20387.cljs$lang$applyTo = (function (arglist__20389){
var a = cljs.core.first(arglist__20389);
arglist__20389 = cljs.core.next(arglist__20389);
var f = cljs.core.first(arglist__20389);
arglist__20389 = cljs.core.next(arglist__20389);
var x = cljs.core.first(arglist__20389);
arglist__20389 = cljs.core.next(arglist__20389);
var y = cljs.core.first(arglist__20389);
var more = cljs.core.rest(arglist__20389);
return G__20387__delegate(a,f,x,y,more);
});
G__20387.cljs$core$IFn$_invoke$arity$variadic = G__20387__delegate;
return G__20387;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20390 = null;
if (arguments.length > 4) {
var G__20391__i = 0, G__20391__a = new Array(arguments.length -  4);
while (G__20391__i < G__20391__a.length) {G__20391__a[G__20391__i] = arguments[G__20391__i + 4]; ++G__20391__i;}
G__20390 = new cljs.core.IndexedSeq(G__20391__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20390);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20458 = null;
var G__20458__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20458__1 = (function (result){
var G__20425 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20425) : rf.call(null,G__20425));
});
var G__20458__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20426 = i;
var G__20427 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20426,G__20427) : f.call(null,G__20426,G__20427));
})();
if((v == null)){
return result;
} else {
var G__20428 = result;
var G__20429 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20428,G__20429) : rf.call(null,G__20428,G__20429));
}
});
G__20458 = function(result,input){
switch(arguments.length){
case 0:
return G__20458__0.call(this);
case 1:
return G__20458__1.call(this,result);
case 2:
return G__20458__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20458.cljs$core$IFn$_invoke$arity$0 = G__20458__0;
G__20458.cljs$core$IFn$_invoke$arity$1 = G__20458__1;
G__20458.cljs$core$IFn$_invoke$arity$2 = G__20458__2;
return G__20458;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13496__auto___20459 = size;
var i_20460 = (0);
while(true){
if((i_20460 < n__13496__auto___20459)){
var x_20461 = (function (){var G__20454 = (idx + i_20460);
var G__20455 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20460);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20454,G__20455) : f.call(null,G__20454,G__20455));
})();
if((x_20461 == null)){
} else {
cljs.core.chunk_append(b,x_20461);
}

var G__20462 = (i_20460 + (1));
i_20460 = G__20462;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20456 = idx;
var G__20457 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20456,G__20457) : f.call(null,G__20456,G__20457));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__20676 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20676) : p.call(null,G__20676));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20678 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20678) : p.call(null,G__20678));
})();
if(cljs.core.truth_(and__12595__auto__)){
var G__20679 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20679) : p.call(null,G__20679));
} else {
return and__12595__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20681 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20681) : p.call(null,G__20681));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20683 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20683) : p.call(null,G__20683));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var G__20684 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__20684) : p.call(null,G__20684));
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__20853__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__20853 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20854__i = 0, G__20854__a = new Array(arguments.length -  3);
while (G__20854__i < G__20854__a.length) {G__20854__a[G__20854__i] = arguments[G__20854__i + 3]; ++G__20854__i;}
  args = new cljs.core.IndexedSeq(G__20854__a,0);
} 
return G__20853__delegate.call(this,x,y,z,args);};
G__20853.cljs$lang$maxFixedArity = 3;
G__20853.cljs$lang$applyTo = (function (arglist__20855){
var x = cljs.core.first(arglist__20855);
arglist__20855 = cljs.core.next(arglist__20855);
var y = cljs.core.first(arglist__20855);
arglist__20855 = cljs.core.next(arglist__20855);
var z = cljs.core.first(arglist__20855);
var args = cljs.core.rest(arglist__20855);
return G__20853__delegate(x,y,z,args);
});
G__20853.cljs$core$IFn$_invoke$arity$variadic = G__20853__delegate;
return G__20853;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__20856 = null;
if (arguments.length > 3) {
var G__20857__i = 0, G__20857__a = new Array(arguments.length -  3);
while (G__20857__i < G__20857__a.length) {G__20857__a[G__20857__i] = arguments[G__20857__i + 3]; ++G__20857__i;}
G__20856 = new cljs.core.IndexedSeq(G__20857__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20856);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20716 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20716) : p1.call(null,G__20716));
})();
if(cljs.core.truth_(and__12595__auto__)){
var G__20717 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20717) : p2.call(null,G__20717));
} else {
return and__12595__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20719 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20719) : p1.call(null,G__20719));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20721 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20721) : p1.call(null,G__20721));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var and__12595__auto____$2 = (function (){var G__20723 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20723) : p2.call(null,G__20723));
})();
if(cljs.core.truth_(and__12595__auto____$2)){
var G__20724 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20724) : p2.call(null,G__20724));
} else {
return and__12595__auto____$2;
}
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20726 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20726) : p1.call(null,G__20726));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20728 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20728) : p1.call(null,G__20728));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var and__12595__auto____$2 = (function (){var G__20730 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20730) : p1.call(null,G__20730));
})();
if(cljs.core.truth_(and__12595__auto____$2)){
var and__12595__auto____$3 = (function (){var G__20732 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20732) : p2.call(null,G__20732));
})();
if(cljs.core.truth_(and__12595__auto____$3)){
var and__12595__auto____$4 = (function (){var G__20734 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20734) : p2.call(null,G__20734));
})();
if(cljs.core.truth_(and__12595__auto____$4)){
var G__20735 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20735) : p2.call(null,G__20735));
} else {
return and__12595__auto____$4;
}
} else {
return and__12595__auto____$3;
}
} else {
return and__12595__auto____$2;
}
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__20858__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20463_SHARP_){
var and__12595__auto__ = (function (){var G__20740 = p1__20463_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20740) : p1.call(null,G__20740));
})();
if(cljs.core.truth_(and__12595__auto__)){
var G__20741 = p1__20463_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20741) : p2.call(null,G__20741));
} else {
return and__12595__auto__;
}
}),args)));
};
var G__20858 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20859__i = 0, G__20859__a = new Array(arguments.length -  3);
while (G__20859__i < G__20859__a.length) {G__20859__a[G__20859__i] = arguments[G__20859__i + 3]; ++G__20859__i;}
  args = new cljs.core.IndexedSeq(G__20859__a,0);
} 
return G__20858__delegate.call(this,x,y,z,args);};
G__20858.cljs$lang$maxFixedArity = 3;
G__20858.cljs$lang$applyTo = (function (arglist__20860){
var x = cljs.core.first(arglist__20860);
arglist__20860 = cljs.core.next(arglist__20860);
var y = cljs.core.first(arglist__20860);
arglist__20860 = cljs.core.next(arglist__20860);
var z = cljs.core.first(arglist__20860);
var args = cljs.core.rest(arglist__20860);
return G__20858__delegate(x,y,z,args);
});
G__20858.cljs$core$IFn$_invoke$arity$variadic = G__20858__delegate;
return G__20858;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__20861 = null;
if (arguments.length > 3) {
var G__20862__i = 0, G__20862__a = new Array(arguments.length -  3);
while (G__20862__i < G__20862__a.length) {G__20862__a[G__20862__i] = arguments[G__20862__i + 3]; ++G__20862__i;}
G__20861 = new cljs.core.IndexedSeq(G__20862__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20787 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20787) : p1.call(null,G__20787));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20789 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20789) : p2.call(null,G__20789));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var G__20790 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20790) : p3.call(null,G__20790));
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20792 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20792) : p1.call(null,G__20792));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20794 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20794) : p2.call(null,G__20794));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var and__12595__auto____$2 = (function (){var G__20796 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20796) : p3.call(null,G__20796));
})();
if(cljs.core.truth_(and__12595__auto____$2)){
var and__12595__auto____$3 = (function (){var G__20798 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20798) : p1.call(null,G__20798));
})();
if(cljs.core.truth_(and__12595__auto____$3)){
var and__12595__auto____$4 = (function (){var G__20800 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20800) : p2.call(null,G__20800));
})();
if(cljs.core.truth_(and__12595__auto____$4)){
var G__20801 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20801) : p3.call(null,G__20801));
} else {
return and__12595__auto____$4;
}
} else {
return and__12595__auto____$3;
}
} else {
return and__12595__auto____$2;
}
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12595__auto__ = (function (){var G__20803 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20803) : p1.call(null,G__20803));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20805 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20805) : p2.call(null,G__20805));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var and__12595__auto____$2 = (function (){var G__20807 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20807) : p3.call(null,G__20807));
})();
if(cljs.core.truth_(and__12595__auto____$2)){
var and__12595__auto____$3 = (function (){var G__20809 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20809) : p1.call(null,G__20809));
})();
if(cljs.core.truth_(and__12595__auto____$3)){
var and__12595__auto____$4 = (function (){var G__20811 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20811) : p2.call(null,G__20811));
})();
if(cljs.core.truth_(and__12595__auto____$4)){
var and__12595__auto____$5 = (function (){var G__20813 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20813) : p3.call(null,G__20813));
})();
if(cljs.core.truth_(and__12595__auto____$5)){
var and__12595__auto____$6 = (function (){var G__20815 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20815) : p1.call(null,G__20815));
})();
if(cljs.core.truth_(and__12595__auto____$6)){
var and__12595__auto____$7 = (function (){var G__20817 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20817) : p2.call(null,G__20817));
})();
if(cljs.core.truth_(and__12595__auto____$7)){
var G__20818 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20818) : p3.call(null,G__20818));
} else {
return and__12595__auto____$7;
}
} else {
return and__12595__auto____$6;
}
} else {
return and__12595__auto____$5;
}
} else {
return and__12595__auto____$4;
}
} else {
return and__12595__auto____$3;
}
} else {
return and__12595__auto____$2;
}
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__20863__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__20464_SHARP_){
var and__12595__auto__ = (function (){var G__20825 = p1__20464_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__20825) : p1.call(null,G__20825));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20827 = p1__20464_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__20827) : p2.call(null,G__20827));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var G__20828 = p1__20464_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__20828) : p3.call(null,G__20828));
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
}),args)));
};
var G__20863 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20864__i = 0, G__20864__a = new Array(arguments.length -  3);
while (G__20864__i < G__20864__a.length) {G__20864__a[G__20864__i] = arguments[G__20864__i + 3]; ++G__20864__i;}
  args = new cljs.core.IndexedSeq(G__20864__a,0);
} 
return G__20863__delegate.call(this,x,y,z,args);};
G__20863.cljs$lang$maxFixedArity = 3;
G__20863.cljs$lang$applyTo = (function (arglist__20865){
var x = cljs.core.first(arglist__20865);
arglist__20865 = cljs.core.next(arglist__20865);
var y = cljs.core.first(arglist__20865);
arglist__20865 = cljs.core.next(arglist__20865);
var z = cljs.core.first(arglist__20865);
var args = cljs.core.rest(arglist__20865);
return G__20863__delegate(x,y,z,args);
});
G__20863.cljs$core$IFn$_invoke$arity$variadic = G__20863__delegate;
return G__20863;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__20866 = null;
if (arguments.length > 3) {
var G__20867__i = 0, G__20867__a = new Array(arguments.length -  3);
while (G__20867__i < G__20867__a.length) {G__20867__a[G__20867__i] = arguments[G__20867__i + 3]; ++G__20867__i;}
G__20866 = new cljs.core.IndexedSeq(G__20867__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__20868__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20465_SHARP_){
var G__20844 = x;
return (p1__20465_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20465_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20844) : p1__20465_SHARP_.call(null,G__20844));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20466_SHARP_){
var and__12595__auto__ = (function (){var G__20846 = x;
return (p1__20466_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20466_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20846) : p1__20466_SHARP_.call(null,G__20846));
})();
if(cljs.core.truth_(and__12595__auto__)){
var G__20847 = y;
return (p1__20466_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20466_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20847) : p1__20466_SHARP_.call(null,G__20847));
} else {
return and__12595__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20467_SHARP_){
var and__12595__auto__ = (function (){var G__20849 = x;
return (p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20849) : p1__20467_SHARP_.call(null,G__20849));
})();
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__20851 = y;
return (p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20851) : p1__20467_SHARP_.call(null,G__20851));
})();
if(cljs.core.truth_(and__12595__auto____$1)){
var G__20852 = z;
return (p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20467_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20852) : p1__20467_SHARP_.call(null,G__20852));
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__20869__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__20468_SHARP_){
return cljs.core.every_QMARK_(p1__20468_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__20869 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20870__i = 0, G__20870__a = new Array(arguments.length -  3);
while (G__20870__i < G__20870__a.length) {G__20870__a[G__20870__i] = arguments[G__20870__i + 3]; ++G__20870__i;}
  args = new cljs.core.IndexedSeq(G__20870__a,0);
} 
return G__20869__delegate.call(this,x,y,z,args);};
G__20869.cljs$lang$maxFixedArity = 3;
G__20869.cljs$lang$applyTo = (function (arglist__20871){
var x = cljs.core.first(arglist__20871);
arglist__20871 = cljs.core.next(arglist__20871);
var y = cljs.core.first(arglist__20871);
arglist__20871 = cljs.core.next(arglist__20871);
var z = cljs.core.first(arglist__20871);
var args = cljs.core.rest(arglist__20871);
return G__20869__delegate(x,y,z,args);
});
G__20869.cljs$core$IFn$_invoke$arity$variadic = G__20869__delegate;
return G__20869;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__20872 = null;
if (arguments.length > 3) {
var G__20873__i = 0, G__20873__a = new Array(arguments.length -  3);
while (G__20873__i < G__20873__a.length) {G__20873__a[G__20873__i] = arguments[G__20873__i + 3]; ++G__20873__i;}
G__20872 = new cljs.core.IndexedSeq(G__20873__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__20868 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__20874__i = 0, G__20874__a = new Array(arguments.length -  3);
while (G__20874__i < G__20874__a.length) {G__20874__a[G__20874__i] = arguments[G__20874__i + 3]; ++G__20874__i;}
  ps = new cljs.core.IndexedSeq(G__20874__a,0);
} 
return G__20868__delegate.call(this,p1,p2,p3,ps);};
G__20868.cljs$lang$maxFixedArity = 3;
G__20868.cljs$lang$applyTo = (function (arglist__20875){
var p1 = cljs.core.first(arglist__20875);
arglist__20875 = cljs.core.next(arglist__20875);
var p2 = cljs.core.first(arglist__20875);
arglist__20875 = cljs.core.next(arglist__20875);
var p3 = cljs.core.first(arglist__20875);
var ps = cljs.core.rest(arglist__20875);
return G__20868__delegate(p1,p2,p3,ps);
});
G__20868.cljs$core$IFn$_invoke$arity$variadic = G__20868__delegate;
return G__20868;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__20876 = null;
if (arguments.length > 3) {
var G__20877__i = 0, G__20877__a = new Array(arguments.length -  3);
while (G__20877__i < G__20877__a.length) {G__20877__a[G__20877__i] = arguments[G__20877__i + 3]; ++G__20877__i;}
G__20876 = new cljs.core.IndexedSeq(G__20877__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__20876);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__21083 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21083) : p.call(null,G__21083));
});
var sp1__2 = (function (x,y){
var or__12607__auto__ = (function (){var G__21085 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21085) : p.call(null,G__21085));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var G__21086 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21086) : p.call(null,G__21086));
}
});
var sp1__3 = (function (x,y,z){
var or__12607__auto__ = (function (){var G__21088 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21088) : p.call(null,G__21088));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21090 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21090) : p.call(null,G__21090));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var G__21091 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21091) : p.call(null,G__21091));
}
}
});
var sp1__4 = (function() { 
var G__21252__delegate = function (x,y,z,args){
var or__12607__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21252 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21253__i = 0, G__21253__a = new Array(arguments.length -  3);
while (G__21253__i < G__21253__a.length) {G__21253__a[G__21253__i] = arguments[G__21253__i + 3]; ++G__21253__i;}
  args = new cljs.core.IndexedSeq(G__21253__a,0);
} 
return G__21252__delegate.call(this,x,y,z,args);};
G__21252.cljs$lang$maxFixedArity = 3;
G__21252.cljs$lang$applyTo = (function (arglist__21254){
var x = cljs.core.first(arglist__21254);
arglist__21254 = cljs.core.next(arglist__21254);
var y = cljs.core.first(arglist__21254);
arglist__21254 = cljs.core.next(arglist__21254);
var z = cljs.core.first(arglist__21254);
var args = cljs.core.rest(arglist__21254);
return G__21252__delegate(x,y,z,args);
});
G__21252.cljs$core$IFn$_invoke$arity$variadic = G__21252__delegate;
return G__21252;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21255 = null;
if (arguments.length > 3) {
var G__21256__i = 0, G__21256__a = new Array(arguments.length -  3);
while (G__21256__i < G__21256__a.length) {G__21256__a[G__21256__i] = arguments[G__21256__i + 3]; ++G__21256__i;}
G__21255 = new cljs.core.IndexedSeq(G__21256__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12607__auto__ = (function (){var G__21123 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21123) : p1.call(null,G__21123));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var G__21124 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21124) : p2.call(null,G__21124));
}
});
var sp2__2 = (function (x,y){
var or__12607__auto__ = (function (){var G__21126 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21126) : p1.call(null,G__21126));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21128 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21128) : p1.call(null,G__21128));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var G__21130 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21130) : p2.call(null,G__21130));
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
var G__21131 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21131) : p2.call(null,G__21131));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12607__auto__ = (function (){var G__21133 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21133) : p1.call(null,G__21133));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21135 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21135) : p1.call(null,G__21135));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var G__21137 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21137) : p1.call(null,G__21137));
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
var or__12607__auto____$3 = (function (){var G__21139 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21139) : p2.call(null,G__21139));
})();
if(cljs.core.truth_(or__12607__auto____$3)){
return or__12607__auto____$3;
} else {
var or__12607__auto____$4 = (function (){var G__21141 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21141) : p2.call(null,G__21141));
})();
if(cljs.core.truth_(or__12607__auto____$4)){
return or__12607__auto____$4;
} else {
var G__21142 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21142) : p2.call(null,G__21142));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21257__delegate = function (x,y,z,args){
var or__12607__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.some(((function (or__12607__auto__){
return (function (p1__20878_SHARP_){
var or__12607__auto____$1 = (function (){var G__21144 = p1__20878_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21144) : p1.call(null,G__21144));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var G__21145 = p1__20878_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21145) : p2.call(null,G__21145));
}
});})(or__12607__auto__))
,args);
}
};
var G__21257 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21258__i = 0, G__21258__a = new Array(arguments.length -  3);
while (G__21258__i < G__21258__a.length) {G__21258__a[G__21258__i] = arguments[G__21258__i + 3]; ++G__21258__i;}
  args = new cljs.core.IndexedSeq(G__21258__a,0);
} 
return G__21257__delegate.call(this,x,y,z,args);};
G__21257.cljs$lang$maxFixedArity = 3;
G__21257.cljs$lang$applyTo = (function (arglist__21259){
var x = cljs.core.first(arglist__21259);
arglist__21259 = cljs.core.next(arglist__21259);
var y = cljs.core.first(arglist__21259);
arglist__21259 = cljs.core.next(arglist__21259);
var z = cljs.core.first(arglist__21259);
var args = cljs.core.rest(arglist__21259);
return G__21257__delegate(x,y,z,args);
});
G__21257.cljs$core$IFn$_invoke$arity$variadic = G__21257__delegate;
return G__21257;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21260 = null;
if (arguments.length > 3) {
var G__21261__i = 0, G__21261__a = new Array(arguments.length -  3);
while (G__21261__i < G__21261__a.length) {G__21261__a[G__21261__i] = arguments[G__21261__i + 3]; ++G__21261__i;}
G__21260 = new cljs.core.IndexedSeq(G__21261__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12607__auto__ = (function (){var G__21191 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21191) : p1.call(null,G__21191));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21193 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21193) : p2.call(null,G__21193));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var G__21194 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21194) : p3.call(null,G__21194));
}
}
});
var sp3__2 = (function (x,y){
var or__12607__auto__ = (function (){var G__21196 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21196) : p1.call(null,G__21196));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21198 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21198) : p2.call(null,G__21198));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var G__21200 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21200) : p3.call(null,G__21200));
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
var or__12607__auto____$3 = (function (){var G__21202 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21202) : p1.call(null,G__21202));
})();
if(cljs.core.truth_(or__12607__auto____$3)){
return or__12607__auto____$3;
} else {
var or__12607__auto____$4 = (function (){var G__21204 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21204) : p2.call(null,G__21204));
})();
if(cljs.core.truth_(or__12607__auto____$4)){
return or__12607__auto____$4;
} else {
var G__21205 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21205) : p3.call(null,G__21205));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12607__auto__ = (function (){var G__21207 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21207) : p1.call(null,G__21207));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21209 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21209) : p2.call(null,G__21209));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var G__21211 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21211) : p3.call(null,G__21211));
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
var or__12607__auto____$3 = (function (){var G__21213 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21213) : p1.call(null,G__21213));
})();
if(cljs.core.truth_(or__12607__auto____$3)){
return or__12607__auto____$3;
} else {
var or__12607__auto____$4 = (function (){var G__21215 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21215) : p2.call(null,G__21215));
})();
if(cljs.core.truth_(or__12607__auto____$4)){
return or__12607__auto____$4;
} else {
var or__12607__auto____$5 = (function (){var G__21217 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21217) : p3.call(null,G__21217));
})();
if(cljs.core.truth_(or__12607__auto____$5)){
return or__12607__auto____$5;
} else {
var or__12607__auto____$6 = (function (){var G__21219 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21219) : p1.call(null,G__21219));
})();
if(cljs.core.truth_(or__12607__auto____$6)){
return or__12607__auto____$6;
} else {
var or__12607__auto____$7 = (function (){var G__21221 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21221) : p2.call(null,G__21221));
})();
if(cljs.core.truth_(or__12607__auto____$7)){
return or__12607__auto____$7;
} else {
var G__21222 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21222) : p3.call(null,G__21222));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21262__delegate = function (x,y,z,args){
var or__12607__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.some(((function (or__12607__auto__){
return (function (p1__20879_SHARP_){
var or__12607__auto____$1 = (function (){var G__21224 = p1__20879_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21224) : p1.call(null,G__21224));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var G__21226 = p1__20879_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21226) : p2.call(null,G__21226));
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
var G__21227 = p1__20879_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21227) : p3.call(null,G__21227));
}
}
});})(or__12607__auto__))
,args);
}
};
var G__21262 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21263__i = 0, G__21263__a = new Array(arguments.length -  3);
while (G__21263__i < G__21263__a.length) {G__21263__a[G__21263__i] = arguments[G__21263__i + 3]; ++G__21263__i;}
  args = new cljs.core.IndexedSeq(G__21263__a,0);
} 
return G__21262__delegate.call(this,x,y,z,args);};
G__21262.cljs$lang$maxFixedArity = 3;
G__21262.cljs$lang$applyTo = (function (arglist__21264){
var x = cljs.core.first(arglist__21264);
arglist__21264 = cljs.core.next(arglist__21264);
var y = cljs.core.first(arglist__21264);
arglist__21264 = cljs.core.next(arglist__21264);
var z = cljs.core.first(arglist__21264);
var args = cljs.core.rest(arglist__21264);
return G__21262__delegate(x,y,z,args);
});
G__21262.cljs$core$IFn$_invoke$arity$variadic = G__21262__delegate;
return G__21262;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21265 = null;
if (arguments.length > 3) {
var G__21266__i = 0, G__21266__a = new Array(arguments.length -  3);
while (G__21266__i < G__21266__a.length) {G__21266__a[G__21266__i] = arguments[G__21266__i + 3]; ++G__21266__i;}
G__21265 = new cljs.core.IndexedSeq(G__21266__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21267__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__20880_SHARP_){
var G__21243 = x;
return (p1__20880_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20880_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21243) : p1__20880_SHARP_.call(null,G__21243));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__20881_SHARP_){
var or__12607__auto__ = (function (){var G__21245 = x;
return (p1__20881_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20881_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21245) : p1__20881_SHARP_.call(null,G__21245));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var G__21246 = y;
return (p1__20881_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20881_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21246) : p1__20881_SHARP_.call(null,G__21246));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__20882_SHARP_){
var or__12607__auto__ = (function (){var G__21248 = x;
return (p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21248) : p1__20882_SHARP_.call(null,G__21248));
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var G__21250 = y;
return (p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21250) : p1__20882_SHARP_.call(null,G__21250));
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var G__21251 = z;
return (p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__20882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21251) : p1__20882_SHARP_.call(null,G__21251));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21268__delegate = function (x,y,z,args){
var or__12607__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.some(((function (or__12607__auto__,ps__$1){
return (function (p1__20883_SHARP_){
return cljs.core.some(p1__20883_SHARP_,args);
});})(or__12607__auto__,ps__$1))
,ps__$1);
}
};
var G__21268 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21269__i = 0, G__21269__a = new Array(arguments.length -  3);
while (G__21269__i < G__21269__a.length) {G__21269__a[G__21269__i] = arguments[G__21269__i + 3]; ++G__21269__i;}
  args = new cljs.core.IndexedSeq(G__21269__a,0);
} 
return G__21268__delegate.call(this,x,y,z,args);};
G__21268.cljs$lang$maxFixedArity = 3;
G__21268.cljs$lang$applyTo = (function (arglist__21270){
var x = cljs.core.first(arglist__21270);
arglist__21270 = cljs.core.next(arglist__21270);
var y = cljs.core.first(arglist__21270);
arglist__21270 = cljs.core.next(arglist__21270);
var z = cljs.core.first(arglist__21270);
var args = cljs.core.rest(arglist__21270);
return G__21268__delegate(x,y,z,args);
});
G__21268.cljs$core$IFn$_invoke$arity$variadic = G__21268__delegate;
return G__21268;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21271 = null;
if (arguments.length > 3) {
var G__21272__i = 0, G__21272__a = new Array(arguments.length -  3);
while (G__21272__i < G__21272__a.length) {G__21272__a[G__21272__i] = arguments[G__21272__i + 3]; ++G__21272__i;}
G__21271 = new cljs.core.IndexedSeq(G__21272__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21267 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21273__i = 0, G__21273__a = new Array(arguments.length -  3);
while (G__21273__i < G__21273__a.length) {G__21273__a[G__21273__i] = arguments[G__21273__i + 3]; ++G__21273__i;}
  ps = new cljs.core.IndexedSeq(G__21273__a,0);
} 
return G__21267__delegate.call(this,p1,p2,p3,ps);};
G__21267.cljs$lang$maxFixedArity = 3;
G__21267.cljs$lang$applyTo = (function (arglist__21274){
var p1 = cljs.core.first(arglist__21274);
arglist__21274 = cljs.core.next(arglist__21274);
var p2 = cljs.core.first(arglist__21274);
arglist__21274 = cljs.core.next(arglist__21274);
var p3 = cljs.core.first(arglist__21274);
var ps = cljs.core.rest(arglist__21274);
return G__21267__delegate(p1,p2,p3,ps);
});
G__21267.cljs$core$IFn$_invoke$arity$variadic = G__21267__delegate;
return G__21267;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21275 = null;
if (arguments.length > 3) {
var G__21276__i = 0, G__21276__a = new Array(arguments.length -  3);
while (G__21276__i < G__21276__a.length) {G__21276__a[G__21276__i] = arguments[G__21276__i + 3]; ++G__21276__i;}
G__21275 = new cljs.core.IndexedSeq(G__21276__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21331 = null;
var G__21331__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21331__1 = (function (result){
var G__21317 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21317) : rf.call(null,G__21317));
});
var G__21331__2 = (function (result,input){
var G__21318 = result;
var G__21319 = (function (){var G__21320 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21320) : f.call(null,G__21320));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21318,G__21319) : rf.call(null,G__21318,G__21319));
});
var G__21331__3 = (function() { 
var G__21332__delegate = function (result,input,inputs){
var G__21321 = result;
var G__21322 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21321,G__21322) : rf.call(null,G__21321,G__21322));
};
var G__21332 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21333__i = 0, G__21333__a = new Array(arguments.length -  2);
while (G__21333__i < G__21333__a.length) {G__21333__a[G__21333__i] = arguments[G__21333__i + 2]; ++G__21333__i;}
  inputs = new cljs.core.IndexedSeq(G__21333__a,0);
} 
return G__21332__delegate.call(this,result,input,inputs);};
G__21332.cljs$lang$maxFixedArity = 2;
G__21332.cljs$lang$applyTo = (function (arglist__21334){
var result = cljs.core.first(arglist__21334);
arglist__21334 = cljs.core.next(arglist__21334);
var input = cljs.core.first(arglist__21334);
var inputs = cljs.core.rest(arglist__21334);
return G__21332__delegate(result,input,inputs);
});
G__21332.cljs$core$IFn$_invoke$arity$variadic = G__21332__delegate;
return G__21332;
})()
;
G__21331 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21331__0.call(this);
case 1:
return G__21331__1.call(this,result);
case 2:
return G__21331__2.call(this,result,input);
default:
var G__21335 = null;
if (arguments.length > 2) {
var G__21336__i = 0, G__21336__a = new Array(arguments.length -  2);
while (G__21336__i < G__21336__a.length) {G__21336__a[G__21336__i] = arguments[G__21336__i + 2]; ++G__21336__i;}
G__21335 = new cljs.core.IndexedSeq(G__21336__a,0);
}
return G__21331__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21331.cljs$lang$maxFixedArity = 2;
G__21331.cljs$lang$applyTo = G__21331__3.cljs$lang$applyTo;
G__21331.cljs$core$IFn$_invoke$arity$0 = G__21331__0;
G__21331.cljs$core$IFn$_invoke$arity$1 = G__21331__1;
G__21331.cljs$core$IFn$_invoke$arity$2 = G__21331__2;
G__21331.cljs$core$IFn$_invoke$arity$variadic = G__21331__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21331;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13496__auto___21337 = size;
var i_21338 = (0);
while(true){
if((i_21338 < n__13496__auto___21337)){
cljs.core.chunk_append(b,(function (){var G__21323 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21338);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21323) : f.call(null,G__21323));
})());

var G__21339 = (i_21338 + (1));
i_21338 = G__21339;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21324 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21324) : f.call(null,G__21324));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21325 = cljs.core.first(s1);
var G__21326 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21325,G__21326) : f.call(null,G__21325,G__21326));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21327 = cljs.core.first(s1);
var G__21328 = cljs.core.first(s2);
var G__21329 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21327,G__21328,G__21329) : f.call(null,G__21327,G__21328,G__21329));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21340__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21277_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21277_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21340 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21341__i = 0, G__21341__a = new Array(arguments.length -  4);
while (G__21341__i < G__21341__a.length) {G__21341__a[G__21341__i] = arguments[G__21341__i + 4]; ++G__21341__i;}
  colls = new cljs.core.IndexedSeq(G__21341__a,0);
} 
return G__21340__delegate.call(this,f,c1,c2,c3,colls);};
G__21340.cljs$lang$maxFixedArity = 4;
G__21340.cljs$lang$applyTo = (function (arglist__21342){
var f = cljs.core.first(arglist__21342);
arglist__21342 = cljs.core.next(arglist__21342);
var c1 = cljs.core.first(arglist__21342);
arglist__21342 = cljs.core.next(arglist__21342);
var c2 = cljs.core.first(arglist__21342);
arglist__21342 = cljs.core.next(arglist__21342);
var c3 = cljs.core.first(arglist__21342);
var colls = cljs.core.rest(arglist__21342);
return G__21340__delegate(f,c1,c2,c3,colls);
});
G__21340.cljs$core$IFn$_invoke$arity$variadic = G__21340__delegate;
return G__21340;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21343 = null;
if (arguments.length > 4) {
var G__21344__i = 0, G__21344__a = new Array(arguments.length -  4);
while (G__21344__i < G__21344__a.length) {G__21344__a[G__21344__i] = arguments[G__21344__i + 4]; ++G__21344__i;}
G__21343 = new cljs.core.IndexedSeq(G__21344__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21343);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21353 = null;
var G__21353__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21353__1 = (function (result){
var G__21350 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21350) : rf.call(null,G__21350));
});
var G__21353__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21351 = result;
var G__21352 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21351,G__21352) : rf.call(null,G__21351,G__21352));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21353 = function(result,input){
switch(arguments.length){
case 0:
return G__21353__0.call(this);
case 1:
return G__21353__1.call(this,result);
case 2:
return G__21353__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21353.cljs$core$IFn$_invoke$arity$0 = G__21353__0;
G__21353.cljs$core$IFn$_invoke$arity$1 = G__21353__1;
G__21353.cljs$core$IFn$_invoke$arity$2 = G__21353__2;
return G__21353;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21360 = null;
var G__21360__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21360__1 = (function (result){
var G__21357 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21357) : rf.call(null,G__21357));
});
var G__21360__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21358 = result;
var G__21359 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21358,G__21359) : rf.call(null,G__21358,G__21359));
}
});
G__21360 = function(result,input){
switch(arguments.length){
case 0:
return G__21360__0.call(this);
case 1:
return G__21360__1.call(this,result);
case 2:
return G__21360__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21360.cljs$core$IFn$_invoke$arity$0 = G__21360__0;
G__21360.cljs$core$IFn$_invoke$arity$1 = G__21360__1;
G__21360.cljs$core$IFn$_invoke$arity$2 = G__21360__2;
return G__21360;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21361 = (n__$1 - (1));
var G__21362 = cljs.core.rest(s);
n__$1 = G__21361;
coll__$1 = G__21362;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21365 = cljs.core.next(s);
var G__21366 = cljs.core.next(lead);
s = G__21365;
lead = G__21366;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21379 = null;
var G__21379__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21379__1 = (function (result){
var G__21373 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21373) : rf.call(null,G__21373));
});
var G__21379__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12595__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12595__auto__)){
var G__21374 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21374) : pred.call(null,G__21374));
} else {
return and__12595__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21375 = result;
var G__21376 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21375,G__21376) : rf.call(null,G__21375,G__21376));
}
});
G__21379 = function(result,input){
switch(arguments.length){
case 0:
return G__21379__0.call(this);
case 1:
return G__21379__1.call(this,result);
case 2:
return G__21379__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21379.cljs$core$IFn$_invoke$arity$0 = G__21379__0;
G__21379.cljs$core$IFn$_invoke$arity$1 = G__21379__1;
G__21379.cljs$core$IFn$_invoke$arity$2 = G__21379__2;
return G__21379;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12595__auto__ = s;
if(and__12595__auto__){
var G__21378 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21378) : pred__$1.call(null,G__21378));
} else {
return and__12595__auto__;
}
})())){
var G__21380 = pred__$1;
var G__21381 = cljs.core.rest(s);
pred__$1 = G__21380;
coll__$1 = G__21381;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21390 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21390) : f.call(null,G__21390));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21393__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21393 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21394__i = 0, G__21394__a = new Array(arguments.length -  2);
while (G__21394__i < G__21394__a.length) {G__21394__a[G__21394__i] = arguments[G__21394__i + 2]; ++G__21394__i;}
  colls = new cljs.core.IndexedSeq(G__21394__a,0);
} 
return G__21393__delegate.call(this,c1,c2,colls);};
G__21393.cljs$lang$maxFixedArity = 2;
G__21393.cljs$lang$applyTo = (function (arglist__21395){
var c1 = cljs.core.first(arglist__21395);
arglist__21395 = cljs.core.next(arglist__21395);
var c2 = cljs.core.first(arglist__21395);
var colls = cljs.core.rest(arglist__21395);
return G__21393__delegate(c1,c2,colls);
});
G__21393.cljs$core$IFn$_invoke$arity$variadic = G__21393__delegate;
return G__21393;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21396 = null;
if (arguments.length > 2) {
var G__21397__i = 0, G__21397__a = new Array(arguments.length -  2);
while (G__21397__i < G__21397__a.length) {G__21397__a[G__21397__i] = arguments[G__21397__i + 2]; ++G__21397__i;}
G__21396 = new cljs.core.IndexedSeq(G__21397__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21406__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21406 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  1);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 1]; ++G__21407__i;}
  colls = new cljs.core.IndexedSeq(G__21407__a,0);
} 
return G__21406__delegate.call(this,f,colls);};
G__21406.cljs$lang$maxFixedArity = 1;
G__21406.cljs$lang$applyTo = (function (arglist__21408){
var f = cljs.core.first(arglist__21408);
var colls = cljs.core.rest(arglist__21408);
return G__21406__delegate(f,colls);
});
G__21406.cljs$core$IFn$_invoke$arity$variadic = G__21406__delegate;
return G__21406;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21409 = null;
if (arguments.length > 1) {
var G__21410__i = 0, G__21410__a = new Array(arguments.length -  1);
while (G__21410__i < G__21410__a.length) {G__21410__a[G__21410__i] = arguments[G__21410__i + 1]; ++G__21410__i;}
G__21409 = new cljs.core.IndexedSeq(G__21410__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21429 = null;
var G__21429__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21429__1 = (function (result){
var G__21423 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21423) : rf.call(null,G__21423));
});
var G__21429__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21424 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21424) : pred.call(null,G__21424));
})())){
var G__21425 = result;
var G__21426 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21425,G__21426) : rf.call(null,G__21425,G__21426));
} else {
return result;
}
});
G__21429 = function(result,input){
switch(arguments.length){
case 0:
return G__21429__0.call(this);
case 1:
return G__21429__1.call(this,result);
case 2:
return G__21429__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21429.cljs$core$IFn$_invoke$arity$0 = G__21429__0;
G__21429.cljs$core$IFn$_invoke$arity$1 = G__21429__1;
G__21429.cljs$core$IFn$_invoke$arity$2 = G__21429__2;
return G__21429;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13496__auto___21430 = size;
var i_21431 = (0);
while(true){
if((i_21431 < n__13496__auto___21430)){
if(cljs.core.truth_((function (){var G__21427 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21431);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21427) : pred.call(null,G__21427));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21431));
} else {
}

var G__21432 = (i_21431 + (1));
i_21431 = G__21432;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21428 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21428) : pred.call(null,G__21428));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21439 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21439) : branch_QMARK_.call(null,G__21439));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21440 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21440) : children.call(null,G__21440));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21441_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21441_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21444 = to;
if(G__21444){
var bit__13283__auto__ = (G__21444.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13283__auto__) || (G__21444.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21445 = to;
if(G__21445){
var bit__13283__auto__ = (G__21445.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13283__auto__) || (G__21445.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21447 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21447) : f.call(null,G__21447));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21448__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21448 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21449__i = 0, G__21449__a = new Array(arguments.length -  4);
while (G__21449__i < G__21449__a.length) {G__21449__a[G__21449__i] = arguments[G__21449__i + 4]; ++G__21449__i;}
  colls = new cljs.core.IndexedSeq(G__21449__a,0);
} 
return G__21448__delegate.call(this,f,c1,c2,c3,colls);};
G__21448.cljs$lang$maxFixedArity = 4;
G__21448.cljs$lang$applyTo = (function (arglist__21450){
var f = cljs.core.first(arglist__21450);
arglist__21450 = cljs.core.next(arglist__21450);
var c1 = cljs.core.first(arglist__21450);
arglist__21450 = cljs.core.next(arglist__21450);
var c2 = cljs.core.first(arglist__21450);
arglist__21450 = cljs.core.next(arglist__21450);
var c3 = cljs.core.first(arglist__21450);
var colls = cljs.core.rest(arglist__21450);
return G__21448__delegate(f,c1,c2,c3,colls);
});
G__21448.cljs$core$IFn$_invoke$arity$variadic = G__21448__delegate;
return G__21448;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21451 = null;
if (arguments.length > 4) {
var G__21452__i = 0, G__21452__a = new Array(arguments.length -  4);
while (G__21452__i < G__21452__a.length) {G__21452__a[G__21452__i] = arguments[G__21452__i + 4]; ++G__21452__i;}
G__21451 = new cljs.core.IndexedSeq(G__21452__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21454 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21454) : pred.call(null,G__21454));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__21469 = m__$1;
if(G__21469){
var bit__13290__auto__ = (G__21469.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13290__auto__) || (G__21469.cljs$core$ILookup$)){
return true;
} else {
if((!G__21469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__21469);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__21470 = sentinel;
var G__21471 = m__$2;
var G__21472 = cljs.core.next(ks__$1);
sentinel = G__21470;
m__$1 = G__21471;
ks__$1 = G__21472;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__21473,v){
var vec__21478 = p__21473;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21478,(0),null);
var ks = cljs.core.nthnext(vec__21478,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__21479,f){
var vec__21517 = p__21479;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21517,(0),null);
var ks = cljs.core.nthnext(vec__21517,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21518 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21518) : f.call(null,G__21518));
})());
}
});
var update_in__4 = (function (m,p__21480,f,a){
var vec__21519 = p__21480;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21519,(0),null);
var ks = cljs.core.nthnext(vec__21519,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21520 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21521 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21520,G__21521) : f.call(null,G__21520,G__21521));
})());
}
});
var update_in__5 = (function (m,p__21481,f,a,b){
var vec__21522 = p__21481;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21522,(0),null);
var ks = cljs.core.nthnext(vec__21522,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21523 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21524 = a;
var G__21525 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21523,G__21524,G__21525) : f.call(null,G__21523,G__21524,G__21525));
})());
}
});
var update_in__6 = (function (m,p__21482,f,a,b,c){
var vec__21526 = p__21482;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21526,(0),null);
var ks = cljs.core.nthnext(vec__21526,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21527 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21528 = a;
var G__21529 = b;
var G__21530 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21527,G__21528,G__21529,G__21530) : f.call(null,G__21527,G__21528,G__21529,G__21530));
})());
}
});
var update_in__7 = (function() { 
var G__21532__delegate = function (m,p__21483,f,a,b,c,args){
var vec__21531 = p__21483;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21531,(0),null);
var ks = cljs.core.nthnext(vec__21531,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__21532 = function (m,p__21483,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__21533__i = 0, G__21533__a = new Array(arguments.length -  6);
while (G__21533__i < G__21533__a.length) {G__21533__a[G__21533__i] = arguments[G__21533__i + 6]; ++G__21533__i;}
  args = new cljs.core.IndexedSeq(G__21533__a,0);
} 
return G__21532__delegate.call(this,m,p__21483,f,a,b,c,args);};
G__21532.cljs$lang$maxFixedArity = 6;
G__21532.cljs$lang$applyTo = (function (arglist__21534){
var m = cljs.core.first(arglist__21534);
arglist__21534 = cljs.core.next(arglist__21534);
var p__21483 = cljs.core.first(arglist__21534);
arglist__21534 = cljs.core.next(arglist__21534);
var f = cljs.core.first(arglist__21534);
arglist__21534 = cljs.core.next(arglist__21534);
var a = cljs.core.first(arglist__21534);
arglist__21534 = cljs.core.next(arglist__21534);
var b = cljs.core.first(arglist__21534);
arglist__21534 = cljs.core.next(arglist__21534);
var c = cljs.core.first(arglist__21534);
var args = cljs.core.rest(arglist__21534);
return G__21532__delegate(m,p__21483,f,a,b,c,args);
});
G__21532.cljs$core$IFn$_invoke$arity$variadic = G__21532__delegate;
return G__21532;
})()
;
update_in = function(m,p__21483,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__21483,f);
case 4:
return update_in__4.call(this,m,p__21483,f,a);
case 5:
return update_in__5.call(this,m,p__21483,f,a,b);
case 6:
return update_in__6.call(this,m,p__21483,f,a,b,c);
default:
var G__21535 = null;
if (arguments.length > 6) {
var G__21536__i = 0, G__21536__a = new Array(arguments.length -  6);
while (G__21536__i < G__21536__a.length) {G__21536__a[G__21536__i] = arguments[G__21536__i + 6]; ++G__21536__i;}
G__21535 = new cljs.core.IndexedSeq(G__21536__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__21483,f,a,b,c, G__21535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21547 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21547) : f.call(null,G__21547));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21548 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21549 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21548,G__21549) : f.call(null,G__21548,G__21549));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21550 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21551 = x;
var G__21552 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21550,G__21551,G__21552) : f.call(null,G__21550,G__21551,G__21552));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__21553 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__21554 = x;
var G__21555 = y;
var G__21556 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21553,G__21554,G__21555,G__21556) : f.call(null,G__21553,G__21554,G__21555,G__21556));
})());
});
var update__7 = (function() { 
var G__21557__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__21557 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__21558__i = 0, G__21558__a = new Array(arguments.length -  6);
while (G__21558__i < G__21558__a.length) {G__21558__a[G__21558__i] = arguments[G__21558__i + 6]; ++G__21558__i;}
  more = new cljs.core.IndexedSeq(G__21558__a,0);
} 
return G__21557__delegate.call(this,m,k,f,x,y,z,more);};
G__21557.cljs$lang$maxFixedArity = 6;
G__21557.cljs$lang$applyTo = (function (arglist__21559){
var m = cljs.core.first(arglist__21559);
arglist__21559 = cljs.core.next(arglist__21559);
var k = cljs.core.first(arglist__21559);
arglist__21559 = cljs.core.next(arglist__21559);
var f = cljs.core.first(arglist__21559);
arglist__21559 = cljs.core.next(arglist__21559);
var x = cljs.core.first(arglist__21559);
arglist__21559 = cljs.core.next(arglist__21559);
var y = cljs.core.first(arglist__21559);
arglist__21559 = cljs.core.next(arglist__21559);
var z = cljs.core.first(arglist__21559);
var more = cljs.core.rest(arglist__21559);
return G__21557__delegate(m,k,f,x,y,z,more);
});
G__21557.cljs$core$IFn$_invoke$arity$variadic = G__21557__delegate;
return G__21557;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__21560 = null;
if (arguments.length > 6) {
var G__21561__i = 0, G__21561__a = new Array(arguments.length -  6);
while (G__21561__i < G__21561__a.length) {G__21561__a[G__21561__i] = arguments[G__21561__i + 6]; ++G__21561__i;}
G__21560 = new cljs.core.IndexedSeq(G__21561__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__21560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__21562 = (ll - (5));
var G__21563 = r;
ll = G__21562;
ret = G__21563;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21568 = cljs.core.pv_aget(node,(0));
var G__21569 = (level - (5));
node = G__21568;
level = G__21569;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__21570 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__21571 = (level - (5));
node = G__21570;
level = G__21571;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21581 = init__$2;
var G__21582 = (j + i);
var G__21583 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21581,G__21582,G__21583) : f.call(null,G__21581,G__21582,G__21583));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21594 = (j + (1));
var G__21595 = init__$3;
j = G__21594;
init__$2 = G__21595;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21584 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21584) : cljs.core.deref.call(null,G__21584));
} else {
var G__21596 = (i + len);
var G__21597 = init__$2;
i = G__21596;
init__$1 = G__21597;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__21585 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__21585) : cljs.core.tv_editable_root.call(null,G__21585));
})(),(function (){var G__21586 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__21586) : cljs.core.tv_editable_tail.call(null,G__21586));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__21587 = init__$2;
var G__21588 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21587,G__21588) : f.call(null,G__21587,G__21588));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__21598 = (j + (1));
var G__21599 = init__$3;
j = G__21598;
init__$2 = G__21599;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21589 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21589) : cljs.core.deref.call(null,G__21589));
} else {
var G__21600 = (i + len);
var G__21601 = init__$2;
i = G__21600;
init__$1 = G__21601;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__21590 = coll__$1;
var G__21591 = cljs.core.first_array_for_longvec(coll__$1);
var G__21592 = (0);
var G__21593 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21590,G__21591,G__21592,G__21593) : cljs.core.chunked_seq.call(null,G__21590,G__21591,G__21592,G__21593));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13496__auto___21602 = len;
var i_21603 = (0);
while(true){
if((i_21603 < n__13496__auto___21602)){
(new_tail[i_21603] = (self__.tail[i_21603]));

var G__21604 = (i_21603 + (1));
i_21603 = G__21604;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__21605 = null;
var G__21605__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21605__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21605 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21605__2.call(this,self__,k);
case 3:
return G__21605__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21605.cljs$core$IFn$_invoke$arity$2 = G__21605__2;
G__21605.cljs$core$IFn$_invoke$arity$3 = G__21605__3;
return G__21605;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args21580){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21580)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__21606 = (i + (1));
var G__21607 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__21606;
out = G__21607;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__21608__i = 0, G__21608__a = new Array(arguments.length -  0);
while (G__21608__i < G__21608__a.length) {G__21608__a[G__21608__i] = arguments[G__21608__i + 0]; ++G__21608__i;}
  args = new cljs.core.IndexedSeq(G__21608__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__21609){
var args = cljs.core.seq(arglist__21609);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21610 = self__.vec;
var G__21611 = self__.node;
var G__21612 = self__.i;
var G__21613 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21610,G__21611,G__21612,G__21613) : cljs.core.chunked_seq.call(null,G__21610,G__21611,G__21612,G__21613));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__21614 = self__.vec;
var G__21615 = (self__.i + self__.off);
var G__21616 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21614,G__21615,G__21616) : cljs.core.subvec.call(null,G__21614,G__21615,G__21616));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__21617 = self__.vec;
var G__21618 = (self__.i + self__.off);
var G__21619 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__21617,G__21618,G__21619) : cljs.core.subvec.call(null,G__21617,G__21618,G__21619));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__21620 = self__.vec;
var G__21621 = self__.node;
var G__21622 = self__.i;
var G__21623 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21620,G__21621,G__21622,G__21623) : cljs.core.chunked_seq.call(null,G__21620,G__21621,G__21622,G__21623));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21624 = self__.vec;
var G__21625 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21626 = end;
var G__21627 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21624,G__21625,G__21626,G__21627) : cljs.core.chunked_seq.call(null,G__21624,G__21625,G__21626,G__21627));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__21628 = self__.vec;
var G__21629 = self__.node;
var G__21630 = self__.i;
var G__21631 = self__.off;
var G__21632 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__21628,G__21629,G__21630,G__21631,G__21632) : cljs.core.chunked_seq.call(null,G__21628,G__21629,G__21630,G__21631,G__21632));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__21633 = self__.vec;
var G__21634 = cljs.core.unchecked_array_for(self__.vec,end);
var G__21635 = end;
var G__21636 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__21633,G__21634,G__21635,G__21636) : cljs.core.chunked_seq.call(null,G__21633,G__21634,G__21635,G__21636));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__21638 = self__.meta;
var G__21639 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__21640 = self__.start;
var G__21641 = (function (){var x__12926__auto__ = self__.end;
var y__12927__auto__ = (v_pos + (1));
return ((x__12926__auto__ > y__12927__auto__) ? x__12926__auto__ : y__12927__auto__);
})();
var G__21642 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21638,G__21639,G__21640,G__21641,G__21642) : cljs.core.build_subvec.call(null,G__21638,G__21639,G__21640,G__21641,G__21642));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__21643 = self__.meta;
var G__21644 = self__.v;
var G__21645 = self__.start;
var G__21646 = (self__.end - (1));
var G__21647 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21643,G__21644,G__21645,G__21646,G__21647) : cljs.core.build_subvec.call(null,G__21643,G__21644,G__21645,G__21646,G__21647));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__21649 = meta__$1;
var G__21650 = self__.v;
var G__21651 = self__.start;
var G__21652 = self__.end;
var G__21653 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21649,G__21650,G__21651,G__21652,G__21653) : cljs.core.build_subvec.call(null,G__21649,G__21650,G__21651,G__21652,G__21653));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21654 = self__.meta;
var G__21655 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__21656 = self__.start;
var G__21657 = (self__.end + (1));
var G__21658 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__21654,G__21655,G__21656,G__21657,G__21658) : cljs.core.build_subvec.call(null,G__21654,G__21655,G__21656,G__21657,G__21658));
});

cljs.core.Subvec.prototype.call = (function() {
var G__21659 = null;
var G__21659__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__21659__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__21659 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21659__2.call(this,self__,k);
case 3:
return G__21659__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21659.cljs$core$IFn$_invoke$arity$2 = G__21659__2;
G__21659.cljs$core$IFn$_invoke$arity$3 = G__21659__3;
return G__21659;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args21637){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21637)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__21660 = meta;
var G__21661 = v.v;
var G__21662 = (v.start + start);
var G__21663 = (v.start + end);
var G__21664 = __hash;
meta = G__21660;
v = G__21661;
start = G__21662;
end = G__21663;
__hash = G__21664;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj21671 = {};
return obj21671;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__21679 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__21680 = (level - (5));
node = G__21679;
level = G__21680;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__21684 = null;
var G__21684__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21684__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21684 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21684__2.call(this,self__,k);
case 3:
return G__21684__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21684.cljs$core$IFn$_invoke$arity$2 = G__21684__2;
G__21684.cljs$core$IFn$_invoke$arity$3 = G__21684__3;
return G__21684;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args21681){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21681)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12607__auto__ = self__.front;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12607__auto__ = self__.rear;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__21685 = (i + incr);
i = G__21685;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__21686 = (i + (1));
var G__21687 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__21686;
out = G__21687;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj21691 = {};
return obj21691;
})();
var l = ks.length;
var i_21692 = (0);
while(true){
if((i_21692 < l)){
var k_21693 = (ks[i_21692]);
(new_obj[k_21693] = (obj[k_21693]));

var G__21694 = (i_21692 + (1));
i_21692 = G__21694;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12595__auto__ = (function (){var G__21698 = k;
return goog.isString(G__21698);
})();
if(cljs.core.truth_(and__12595__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12595__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__21699 = init__$1;
var G__21700 = k;
var G__21701 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21699,G__21700,G__21701) : f.call(null,G__21699,G__21700,G__21701));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21702 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21702) : cljs.core.deref.call(null,G__21702));
} else {
var G__21708 = cljs.core.rest(keys__$1);
var G__21709 = init__$2;
keys__$1 = G__21708;
init__$1 = G__21709;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12595__auto__ = (function (){var G__21704 = k;
return goog.isString(G__21704);
})();
if(cljs.core.truth_(and__12595__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12595__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__21705 = k;
return goog.isString(G__21705);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12595__auto__ = (function (){var G__21707 = k;
return goog.isString(G__21707);
})();
if(cljs.core.truth_(and__12595__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12595__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__21695_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__21695_SHARP_,(self__.strobj[p1__21695_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__21710 = null;
var G__21710__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21710__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21710 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21710__2.call(this,self__,k);
case 3:
return G__21710__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21710.cljs$core$IFn$_invoke$arity$2 = G__21710__2;
G__21710.cljs$core$IFn$_invoke$arity$3 = G__21710__3;
return G__21710;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args21696){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21696)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj21712 = {};
return obj21712;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__21713 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21713,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21713,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__21714 = (i + (2));
i = G__21714;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__21715 = (i + (2));
i = G__21715;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__21716 = (i + (2));
i = G__21716;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__21717 = (i + (2));
i = G__21717;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__21718 = (i + (2));
i = G__21718;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12607__auto__ = (function (){var G__21722 = k;
return goog.isString(G__21722);
})();
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_21723 = (0);
while(true){
if((i_21723 < l)){
(narr[i_21723] = (arr[i_21723]));

var G__21724 = (i_21723 + (1));
i_21723 = G__21724;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21726 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21726) : cljs.core.keys.call(null,G__21726));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21727 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21727) : cljs.core.vals.call(null,G__21727));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21728 = cljs.core.seq(coll);
var chunk__21729 = null;
var count__21730 = (0);
var i__21731 = (0);
while(true){
if((i__21731 < count__21730)){
var vec__21732 = chunk__21729.cljs$core$IIndexed$_nth$arity$2(null,i__21731);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21732,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21732,(1),null);
var G__21733_21746 = v;
var G__21734_21747 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21733_21746,G__21734_21747) : f.call(null,G__21733_21746,G__21734_21747));

var G__21748 = seq__21728;
var G__21749 = chunk__21729;
var G__21750 = count__21730;
var G__21751 = (i__21731 + (1));
seq__21728 = G__21748;
chunk__21729 = G__21749;
count__21730 = G__21750;
i__21731 = G__21751;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21728);
if(temp__4126__auto__){
var seq__21728__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21728__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__21728__$1);
var G__21752 = cljs.core.chunk_rest(seq__21728__$1);
var G__21753 = c__13396__auto__;
var G__21754 = cljs.core.count(c__13396__auto__);
var G__21755 = (0);
seq__21728 = G__21752;
chunk__21729 = G__21753;
count__21730 = G__21754;
i__21731 = G__21755;
continue;
} else {
var vec__21735 = cljs.core.first(seq__21728__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21735,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21735,(1),null);
var G__21736_21756 = v;
var G__21737_21757 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21736_21756,G__21737_21757) : f.call(null,G__21736_21756,G__21737_21757));

var G__21758 = cljs.core.next(seq__21728__$1);
var G__21759 = null;
var G__21760 = (0);
var G__21761 = (0);
seq__21728 = G__21758;
chunk__21729 = G__21759;
count__21730 = G__21760;
i__21731 = G__21761;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__21738 = init__$1;
var G__21739 = (self__.arr[i]);
var G__21740 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21738,G__21739,G__21740) : f.call(null,G__21738,G__21739,G__21740));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21741 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21741) : cljs.core.deref.call(null,G__21741));
} else {
var G__21762 = (i + (2));
var G__21763 = init__$2;
i = G__21762;
init__$1 = G__21763;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__21742 = other;
if(G__21742){
var bit__13283__auto__ = (G__21742.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13283__auto__) || (G__21742.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__21764 = (i + (2));
i = G__21764;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj21744 = {};
return obj21744;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__21765 = (s + (2));
var G__21766 = d;
s = G__21765;
d = G__21766;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__21767 = (s + (2));
var G__21768 = (d + (2));
s = G__21767;
d = G__21768;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__21745 = cljs.core.aclone(self__.arr);
(G__21745[(idx + (1))] = v);

return G__21745;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21769 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21770 = cljs.core.next(es);
ret = G__21769;
es = G__21770;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__21771 = null;
var G__21771__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21771__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21771 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21771__2.call(this,self__,k);
case 3:
return G__21771__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21771.cljs$core$IFn$_invoke$arity$2 = G__21771__2;
G__21771.cljs$core$IFn$_invoke$arity$3 = G__21771__3;
return G__21771;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args21725){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21725)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__21772 = (i + (2));
var G__21773 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__21772;
ret = G__21773;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__21774_21782 = self__.arr;
G__21774_21782.pop();

G__21774_21782.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__21775 = self__.len;
var G__21776 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__21775,G__21776) : cljs.core.array__GT_transient_hash_map.call(null,G__21775,G__21776));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__21777 = o;
if(G__21777){
var bit__13290__auto__ = (G__21777.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13290__auto__) || (G__21777.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21777.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21777);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21777);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__21778 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21778) : cljs.core.key.call(null,G__21778));
})(),(function (){var G__21779 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21779) : cljs.core.val.call(null,G__21779));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21783 = cljs.core.next(es);
var G__21784 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__21780 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21780) : cljs.core.key.call(null,G__21780));
})(),(function (){var G__21781 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21781) : cljs.core.val.call(null,G__21781));
})());
es = G__21783;
tcoll__$2 = G__21784;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__21785 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__21786 = (i + (2));
out = G__21785;
i = G__21786;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__21789 = cljs.core.aclone(arr);
(G__21789[i] = a);

return G__21789;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__21790 = cljs.core.aclone(arr);
(G__21790[i] = a);

(G__21790[j] = b);

return G__21790;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__21795 = init__$1;
var G__21796 = k;
var G__21797 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21795,G__21796,G__21797) : f.call(null,G__21795,G__21796,G__21797));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21798 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21798) : cljs.core.deref.call(null,G__21798));
} else {
var G__21799 = (i + (2));
var G__21800 = init__$2;
i = G__21799;
init__$1 = G__21800;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21801 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21801) : cljs.core.create_inode_seq.call(null,G__21801));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21815 = (0);
var j_21816 = (0);
while(true){
if((i_21815 < (32))){
if((((self__.bitmap >>> i_21815) & (1)) === (0))){
var G__21817 = (i_21815 + (1));
var G__21818 = j_21816;
i_21815 = G__21817;
j_21816 = G__21818;
continue;
} else {
(nodes[i_21815] = ((!(((self__.arr[j_21816]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_21816])),(self__.arr[j_21816]),(self__.arr[(j_21816 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21816 + (1))])));

var G__21819 = (i_21815 + (1));
var G__21820 = (j_21816 + (2));
i_21815 = G__21819;
j_21816 = G__21820;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21802 = edit__$1;
var G__21803 = (shift + (5));
var G__21804 = key_or_nil;
var G__21805 = val_or_node;
var G__21806 = hash;
var G__21807 = key;
var G__21808 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__21802,G__21803,G__21804,G__21805,G__21806,G__21807,G__21808) : cljs.core.create_node.call(null,G__21802,G__21803,G__21804,G__21805,G__21806,G__21807,G__21808));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_21821 = (0);
var j_21822 = (0);
while(true){
if((i_21821 < (32))){
if((((self__.bitmap >>> i_21821) & (1)) === (0))){
var G__21823 = (i_21821 + (1));
var G__21824 = j_21822;
i_21821 = G__21823;
j_21822 = G__21824;
continue;
} else {
(nodes[i_21821] = ((!(((self__.arr[j_21822]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_21822])),(self__.arr[j_21822]),(self__.arr[(j_21822 + (1))]),added_leaf_QMARK_):(self__.arr[(j_21822 + (1))])));

var G__21825 = (i_21821 + (1));
var G__21826 = (j_21822 + (2));
i_21821 = G__21825;
j_21822 = G__21826;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__21809 = (shift + (5));
var G__21810 = key_or_nil;
var G__21811 = val_or_node;
var G__21812 = hash;
var G__21813 = key;
var G__21814 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__21809,G__21810,G__21811,G__21812,G__21813,G__21814) : cljs.core.create_node.call(null,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__21827 = (i + (1));
var G__21828 = (j + (2));
var G__21829 = (bitmap | ((1) << i));
i = G__21827;
j = G__21828;
bitmap = G__21829;
continue;
} else {
var G__21830 = (i + (1));
var G__21831 = j;
var G__21832 = bitmap;
i = G__21830;
j = G__21831;
bitmap = G__21832;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21833 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__21833) : cljs.core.create_array_node_seq.call(null,G__21833));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21834 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21834) : cljs.core.deref.call(null,G__21834));
} else {
var G__21835 = (i + (1));
var G__21836 = init__$2;
i = G__21835;
init__$1 = G__21836;
continue;
}
} else {
var G__21837 = (i + (1));
var G__21838 = init__$1;
i = G__21837;
init__$1 = G__21838;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__21839 = (i + (2));
i = G__21839;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__21840 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__21840) : cljs.core.create_inode_seq.call(null,G__21840));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__21841 = self__.nodes;
var G__21842 = (self__.i + (2));
var G__21843 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21841,G__21842,G__21843) : cljs.core.create_inode_seq.call(null,G__21841,G__21842,G__21843));
} else {
var G__21844 = self__.nodes;
var G__21845 = self__.i;
var G__21846 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__21844,G__21845,G__21846) : cljs.core.create_inode_seq.call(null,G__21844,G__21845,G__21846));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__21850 = (j + (2));
j = G__21850;
continue;
}
} else {
var G__21851 = (j + (2));
j = G__21851;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21852 = null;
var G__21853 = self__.nodes;
var G__21854 = self__.i;
var G__21855 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__21852,G__21853,G__21854,G__21855) : cljs.core.create_array_node_seq.call(null,G__21852,G__21853,G__21854,G__21855));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__21860 = (j + (1));
j = G__21860;
continue;
}
} else {
var G__21861 = (j + (1));
j = G__21861;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21863 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21863) : cljs.core.keys.call(null,G__21863));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21864 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21864) : cljs.core.vals.call(null,G__21864));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21865 = cljs.core.seq(coll);
var chunk__21866 = null;
var count__21867 = (0);
var i__21868 = (0);
while(true){
if((i__21868 < count__21867)){
var vec__21869 = chunk__21866.cljs$core$IIndexed$_nth$arity$2(null,i__21868);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21869,(1),null);
var G__21870_21881 = v;
var G__21871_21882 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21870_21881,G__21871_21882) : f.call(null,G__21870_21881,G__21871_21882));

var G__21883 = seq__21865;
var G__21884 = chunk__21866;
var G__21885 = count__21867;
var G__21886 = (i__21868 + (1));
seq__21865 = G__21883;
chunk__21866 = G__21884;
count__21867 = G__21885;
i__21868 = G__21886;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21865);
if(temp__4126__auto__){
var seq__21865__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21865__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__21865__$1);
var G__21887 = cljs.core.chunk_rest(seq__21865__$1);
var G__21888 = c__13396__auto__;
var G__21889 = cljs.core.count(c__13396__auto__);
var G__21890 = (0);
seq__21865 = G__21887;
chunk__21866 = G__21888;
count__21867 = G__21889;
i__21868 = G__21890;
continue;
} else {
var vec__21872 = cljs.core.first(seq__21865__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21872,(1),null);
var G__21873_21891 = v;
var G__21874_21892 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21873_21891,G__21874_21892) : f.call(null,G__21873_21891,G__21874_21892));

var G__21893 = cljs.core.next(seq__21865__$1);
var G__21894 = null;
var G__21895 = (0);
var G__21896 = (0);
seq__21865 = G__21893;
chunk__21866 = G__21894;
count__21867 = G__21895;
i__21868 = G__21896;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__21875 = init;
var G__21876 = null;
var G__21877 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21875,G__21876,G__21877) : f.call(null,G__21875,G__21876,G__21877));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21878 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21878) : cljs.core.deref.call(null,G__21878));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj21880 = {};
return obj21880;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__21897 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__21898 = cljs.core.next(es);
ret = G__21897;
es = G__21898;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__21899 = null;
var G__21899__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21899__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21899 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21899__2.call(this,self__,k);
case 3:
return G__21899__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21899.cljs$core$IFn$_invoke$arity$2 = G__21899__2;
G__21899.cljs$core$IFn$_invoke$arity$3 = G__21899__3;
return G__21899;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args21862){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21862)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__21900 = (i + (1));
var G__21901 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__21900;
out = G__21901;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__21902 = o;
if(G__21902){
var bit__13290__auto__ = (G__21902.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13290__auto__) || (G__21902.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__21902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__21902);
}
})()){
return tcoll.assoc_BANG_((function (){var G__21903 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21903) : cljs.core.key.call(null,G__21903));
})(),(function (){var G__21904 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21904) : cljs.core.val.call(null,G__21904));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__21907 = cljs.core.next(es);
var G__21908 = tcoll__$1.assoc_BANG_((function (){var G__21905 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21905) : cljs.core.key.call(null,G__21905));
})(),(function (){var G__21906 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21906) : cljs.core.val.call(null,G__21906));
})());
es = G__21907;
tcoll__$1 = G__21908;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__21909 = ((ascending_QMARK_)?t.left:t.right);
var G__21910 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__21909;
stack__$1 = G__21910;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__21923 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21923) : cljs.core.deref.call(null,G__21923));
} else {
var init__$2 = (function (){var G__21924 = init__$1;
var G__21925 = node.key;
var G__21926 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21924,G__21925,G__21926) : f.call(null,G__21924,G__21925,G__21926));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__21927 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21927) : cljs.core.deref.call(null,G__21927));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__21928 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21928) : cljs.core.deref.call(null,G__21928));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__21930 = null;
var G__21930__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21930__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21930 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21930__2.call(this,self__,k);
case 3:
return G__21930__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21930.cljs$core$IFn$_invoke$arity$2 = G__21930__2;
G__21930.cljs$core$IFn$_invoke$arity$3 = G__21930__3;
return G__21930;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args21929){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21929)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__21932 = null;
var G__21932__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__21932__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__21932 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__21932__2.call(this,self__,k);
case 3:
return G__21932__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21932.cljs$core$IFn$_invoke$arity$2 = G__21932__2;
G__21932.cljs$core$IFn$_invoke$arity$3 = G__21932__3;
return G__21932;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args21931){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21931)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__21945 = k;
var G__21946 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21945,G__21946) : comp.call(null,G__21945,G__21946));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__21965 = k;
var G__21966 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21965,G__21966) : comp.call(null,G__21965,G__21966));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__21977 = k;
var G__21978 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__21977,G__21978) : comp.call(null,G__21977,G__21978));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__21980 = cljs.core.seq(coll);
var chunk__21981 = null;
var count__21982 = (0);
var i__21983 = (0);
while(true){
if((i__21983 < count__21982)){
var vec__21984 = chunk__21981.cljs$core$IIndexed$_nth$arity$2(null,i__21983);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21984,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21984,(1),null);
var G__21985_21997 = v;
var G__21986_21998 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21985_21997,G__21986_21998) : f.call(null,G__21985_21997,G__21986_21998));

var G__21999 = seq__21980;
var G__22000 = chunk__21981;
var G__22001 = count__21982;
var G__22002 = (i__21983 + (1));
seq__21980 = G__21999;
chunk__21981 = G__22000;
count__21982 = G__22001;
i__21983 = G__22002;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21980);
if(temp__4126__auto__){
var seq__21980__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21980__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__21980__$1);
var G__22003 = cljs.core.chunk_rest(seq__21980__$1);
var G__22004 = c__13396__auto__;
var G__22005 = cljs.core.count(c__13396__auto__);
var G__22006 = (0);
seq__21980 = G__22003;
chunk__21981 = G__22004;
count__21982 = G__22005;
i__21983 = G__22006;
continue;
} else {
var vec__21987 = cljs.core.first(seq__21980__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21987,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21987,(1),null);
var G__21988_22007 = v;
var G__21989_22008 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21988_22007,G__21989_22008) : f.call(null,G__21988_22007,G__21989_22008));

var G__22009 = cljs.core.next(seq__21980__$1);
var G__22010 = null;
var G__22011 = (0);
var G__22012 = (0);
seq__21980 = G__22009;
chunk__21981 = G__22010;
count__21982 = G__22011;
i__21983 = G__22012;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21990 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__21990) : cljs.core.keys.call(null,G__21990));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__21991 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__21991) : cljs.core.vals.call(null,G__21991));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21992 = k;
var G__21993 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21992,G__21993) : self__.comp.call(null,G__21992,G__21993));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22013 = t.left;
t = G__22013;
continue;
} else {
var G__22014 = t.right;
t = G__22014;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22015 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22016 = cljs.core.next(es);
ret = G__22015;
es = G__22016;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22017 = null;
var G__22017__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22017__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22017 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22017__2.call(this,self__,k);
case 3:
return G__22017__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22017.cljs$core$IFn$_invoke$arity$2 = G__22017__2;
G__22017.cljs$core$IFn$_invoke$arity$3 = G__22017__3;
return G__22017;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args21979){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21979)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__21994 = k;
var G__21995 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__21994,G__21995) : self__.comp.call(null,G__21994,G__21995));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22018 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22019 = t.left;
stack = G__22018;
t = G__22019;
continue;
} else {
var G__22020 = stack;
var G__22021 = t.right;
stack = G__22020;
t = G__22021;
continue;
}
} else {
if((c > (0))){
var G__22022 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22023 = t.right;
stack = G__22022;
t = G__22023;
continue;
} else {
var G__22024 = stack;
var G__22025 = t.left;
stack = G__22024;
t = G__22025;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__21996 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21996) : cljs.core.key.call(null,G__21996));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22026 = cljs.core.nnext(in$);
var G__22027 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22026;
out = G__22027;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22028__i = 0, G__22028__a = new Array(arguments.length -  0);
while (G__22028__i < G__22028__a.length) {G__22028__a[G__22028__i] = arguments[G__22028__i + 0]; ++G__22028__i;}
  keyvals = new cljs.core.IndexedSeq(G__22028__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22029){
var keyvals = cljs.core.seq(arglist__22029);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22030__i = 0, G__22030__a = new Array(arguments.length -  0);
while (G__22030__i < G__22030__a.length) {G__22030__a[G__22030__i] = arguments[G__22030__i + 0]; ++G__22030__i;}
  keyvals = new cljs.core.IndexedSeq(G__22030__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22031){
var keyvals = cljs.core.seq(arglist__22031);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22035 = {};
return obj22035;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22036 = cljs.core.nnext(kvs);
kvs = G__22036;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22037__i = 0, G__22037__a = new Array(arguments.length -  0);
while (G__22037__i < G__22037__a.length) {G__22037__a[G__22037__i] = arguments[G__22037__i + 0]; ++G__22037__i;}
  keyvals = new cljs.core.IndexedSeq(G__22037__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22038){
var keyvals = cljs.core.seq(arglist__22038);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22039 = cljs.core.nnext(in$);
var G__22040 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22039;
out = G__22040;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22041__i = 0, G__22041__a = new Array(arguments.length -  0);
while (G__22041__i < G__22041__a.length) {G__22041__a[G__22041__i] = arguments[G__22041__i + 0]; ++G__22041__i;}
  keyvals = new cljs.core.IndexedSeq(G__22041__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22042){
var keyvals = cljs.core.seq(arglist__22042);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22043 = cljs.core.nnext(in$);
var G__22044 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22043;
out = G__22044;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22045__i = 0, G__22045__a = new Array(arguments.length -  1);
while (G__22045__i < G__22045__a.length) {G__22045__a[G__22045__i] = arguments[G__22045__i + 1]; ++G__22045__i;}
  keyvals = new cljs.core.IndexedSeq(G__22045__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22046){
var comparator = cljs.core.first(arglist__22046);
var keyvals = cljs.core.rest(arglist__22046);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22047 = self__.mseq;
if(G__22047){
var bit__13290__auto__ = (G__22047.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13290__auto__) || (G__22047.cljs$core$INext$)){
return true;
} else {
if((!G__22047.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22047);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22047);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22048 = self__.mseq;
if(G__22048){
var bit__13290__auto__ = (G__22048.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13290__auto__) || (G__22048.cljs$core$INext$)){
return true;
} else {
if((!G__22048.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22048);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22048);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22049 = self__.mseq;
if(G__22049){
var bit__13290__auto__ = (G__22049.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13290__auto__) || (G__22049.cljs$core$INext$)){
return true;
} else {
if((!G__22049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22049);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22050 = self__.mseq;
if(G__22050){
var bit__13290__auto__ = (G__22050.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13290__auto__) || (G__22050.cljs$core$INext$)){
return true;
} else {
if((!G__22050.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22050);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22050);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22051_SHARP_,p2__22052_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12607__auto__ = p1__22051_SHARP_;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22052_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22053__i = 0, G__22053__a = new Array(arguments.length -  0);
while (G__22053__i < G__22053__a.length) {G__22053__a[G__22053__i] = arguments[G__22053__i + 0]; ++G__22053__i;}
  maps = new cljs.core.IndexedSeq(G__22053__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22054){
var maps = cljs.core.seq(arglist__22054);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22058 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22057,G__22058) : f.call(null,G__22057,G__22058));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12607__auto__ = m1;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22059__i = 0, G__22059__a = new Array(arguments.length -  1);
while (G__22059__i < G__22059__a.length) {G__22059__a[G__22059__i] = arguments[G__22059__i + 1]; ++G__22059__i;}
  maps = new cljs.core.IndexedSeq(G__22059__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22060){
var f = cljs.core.first(arglist__22060);
var maps = cljs.core.rest(arglist__22060);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__22061 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22062 = cljs.core.next(keys);
ret = G__22061;
keys = G__22062;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22065 = cljs.core.seq(coll);
var chunk__22066 = null;
var count__22067 = (0);
var i__22068 = (0);
while(true){
if((i__22068 < count__22067)){
var vec__22069 = chunk__22066.cljs$core$IIndexed$_nth$arity$2(null,i__22068);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22069,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22069,(1),null);
var G__22070_22075 = v;
var G__22071_22076 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22070_22075,G__22071_22076) : f.call(null,G__22070_22075,G__22071_22076));

var G__22077 = seq__22065;
var G__22078 = chunk__22066;
var G__22079 = count__22067;
var G__22080 = (i__22068 + (1));
seq__22065 = G__22077;
chunk__22066 = G__22078;
count__22067 = G__22079;
i__22068 = G__22080;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22065);
if(temp__4126__auto__){
var seq__22065__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22065__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__22065__$1);
var G__22081 = cljs.core.chunk_rest(seq__22065__$1);
var G__22082 = c__13396__auto__;
var G__22083 = cljs.core.count(c__13396__auto__);
var G__22084 = (0);
seq__22065 = G__22081;
chunk__22066 = G__22082;
count__22067 = G__22083;
i__22068 = G__22084;
continue;
} else {
var vec__22072 = cljs.core.first(seq__22065__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22072,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22072,(1),null);
var G__22073_22085 = v;
var G__22074_22086 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22073_22085,G__22074_22086) : f.call(null,G__22073_22085,G__22074_22086));

var G__22087 = cljs.core.next(seq__22065__$1);
var G__22088 = null;
var G__22089 = (0);
var G__22090 = (0);
seq__22065 = G__22087;
chunk__22066 = G__22088;
count__22067 = G__22089;
i__22068 = G__22090;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22063_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22063_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__22091 = null;
var G__22091__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22091__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22091 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22091__2.call(this,self__,k);
case 3:
return G__22091__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22091.cljs$core$IFn$_invoke$arity$2 = G__22091__2;
G__22091.cljs$core$IFn$_invoke$arity$3 = G__22091__3;
return G__22091;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22064){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22064)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22092 = (i + (1));
var G__22093 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__22092;
out = G__22093;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__22094 = (i + (1));
var G__22095 = cljs.core._conj_BANG_(out,(items[i]));
i = G__22094;
out = G__22095;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__22097 = null;
var G__22097__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__22097__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__22097 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22097__2.call(this,self__,k);
case 3:
return G__22097__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22097.cljs$core$IFn$_invoke$arity$2 = G__22097__2;
G__22097.cljs$core$IFn$_invoke$arity$3 = G__22097__3;
return G__22097;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args22096){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22096)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22100 = cljs.core.seq(coll);
var chunk__22101 = null;
var count__22102 = (0);
var i__22103 = (0);
while(true){
if((i__22103 < count__22102)){
var vec__22104 = chunk__22101.cljs$core$IIndexed$_nth$arity$2(null,i__22103);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22104,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22104,(1),null);
var G__22105_22110 = v;
var G__22106_22111 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22105_22110,G__22106_22111) : f.call(null,G__22105_22110,G__22106_22111));

var G__22112 = seq__22100;
var G__22113 = chunk__22101;
var G__22114 = count__22102;
var G__22115 = (i__22103 + (1));
seq__22100 = G__22112;
chunk__22101 = G__22113;
count__22102 = G__22114;
i__22103 = G__22115;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22100);
if(temp__4126__auto__){
var seq__22100__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22100__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__22100__$1);
var G__22116 = cljs.core.chunk_rest(seq__22100__$1);
var G__22117 = c__13396__auto__;
var G__22118 = cljs.core.count(c__13396__auto__);
var G__22119 = (0);
seq__22100 = G__22116;
chunk__22101 = G__22117;
count__22102 = G__22118;
i__22103 = G__22119;
continue;
} else {
var vec__22107 = cljs.core.first(seq__22100__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22107,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22107,(1),null);
var G__22108_22120 = v;
var G__22109_22121 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22108_22120,G__22109_22121) : f.call(null,G__22108_22120,G__22109_22121));

var G__22122 = cljs.core.next(seq__22100__$1);
var G__22123 = null;
var G__22124 = (0);
var G__22125 = (0);
seq__22100 = G__22122;
chunk__22101 = G__22123;
count__22102 = G__22124;
i__22103 = G__22125;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22098_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22098_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22126 = null;
var G__22126__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22126__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22126 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22126__2.call(this,self__,k);
case 3:
return G__22126__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22126.cljs$core$IFn$_invoke$arity$2 = G__22126__2;
G__22126.cljs$core$IFn$_invoke$arity$3 = G__22126__3;
return G__22126;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args22099){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22099)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13490__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13490__auto__.length)){
var G__22127 = (i + (1));
var G__22128 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22127;
res = G__22128;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22129 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22130 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22129;
out = G__22130;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22131__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22131 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22132__i = 0, G__22132__a = new Array(arguments.length -  0);
while (G__22132__i < G__22132__a.length) {G__22132__a[G__22132__i] = arguments[G__22132__i + 0]; ++G__22132__i;}
  keys = new cljs.core.IndexedSeq(G__22132__a,0);
} 
return G__22131__delegate.call(this,keys);};
G__22131.cljs$lang$maxFixedArity = 0;
G__22131.cljs$lang$applyTo = (function (arglist__22133){
var keys = cljs.core.seq(arglist__22133);
return G__22131__delegate(keys);
});
G__22131.cljs$core$IFn$_invoke$arity$variadic = G__22131__delegate;
return G__22131;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22134 = null;
if (arguments.length > 0) {
var G__22135__i = 0, G__22135__a = new Array(arguments.length -  0);
while (G__22135__i < G__22135__a.length) {G__22135__a[G__22135__i] = arguments[G__22135__i + 0]; ++G__22135__i;}
G__22134 = new cljs.core.IndexedSeq(G__22135__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22136__i = 0, G__22136__a = new Array(arguments.length -  0);
while (G__22136__i < G__22136__a.length) {G__22136__a[G__22136__i] = arguments[G__22136__i + 0]; ++G__22136__i;}
  keys = new cljs.core.IndexedSeq(G__22136__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22137){
var keys = cljs.core.seq(arglist__22137);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22138__i = 0, G__22138__a = new Array(arguments.length -  1);
while (G__22138__i < G__22138__a.length) {G__22138__a[G__22138__i] = arguments[G__22138__i + 1]; ++G__22138__i;}
  keys = new cljs.core.IndexedSeq(G__22138__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22139){
var comparator = cljs.core.first(arglist__22139);
var keys = cljs.core.rest(arglist__22139);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22140_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22140_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22140_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22141_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22141_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22141_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22152,seen__$1){
while(true){
var vec__22153 = p__22152;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22153,(0),null);
var xs__$1 = vec__22153;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22154 = cljs.core.rest(s);
var G__22155 = seen__$1;
p__22152 = G__22154;
seen__$1 = G__22155;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22156 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22157 = cljs.core.next(s__$1);
ret = G__22156;
s__$1 = G__22157;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22159 = x;
if(G__22159){
var bit__13283__auto__ = (G__22159.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13283__auto__) || (G__22159.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22160 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22161 = cljs.core.next(ks);
var G__22162 = cljs.core.next(vs);
map = G__22160;
ks = G__22161;
vs = G__22162;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22173 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22173) : k.call(null,G__22173));
})() > (function (){var G__22174 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22174) : k.call(null,G__22174));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22175__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22163_SHARP_,p2__22164_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22163_SHARP_,p2__22164_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22175 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22176__i = 0, G__22176__a = new Array(arguments.length -  3);
while (G__22176__i < G__22176__a.length) {G__22176__a[G__22176__i] = arguments[G__22176__i + 3]; ++G__22176__i;}
  more = new cljs.core.IndexedSeq(G__22176__a,0);
} 
return G__22175__delegate.call(this,k,x,y,more);};
G__22175.cljs$lang$maxFixedArity = 3;
G__22175.cljs$lang$applyTo = (function (arglist__22177){
var k = cljs.core.first(arglist__22177);
arglist__22177 = cljs.core.next(arglist__22177);
var x = cljs.core.first(arglist__22177);
arglist__22177 = cljs.core.next(arglist__22177);
var y = cljs.core.first(arglist__22177);
var more = cljs.core.rest(arglist__22177);
return G__22175__delegate(k,x,y,more);
});
G__22175.cljs$core$IFn$_invoke$arity$variadic = G__22175__delegate;
return G__22175;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22178 = null;
if (arguments.length > 3) {
var G__22179__i = 0, G__22179__a = new Array(arguments.length -  3);
while (G__22179__i < G__22179__a.length) {G__22179__a[G__22179__i] = arguments[G__22179__i + 3]; ++G__22179__i;}
G__22178 = new cljs.core.IndexedSeq(G__22179__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22190 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22190) : k.call(null,G__22190));
})() < (function (){var G__22191 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22191) : k.call(null,G__22191));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22192__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22180_SHARP_,p2__22181_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22180_SHARP_,p2__22181_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22192 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22193__i = 0, G__22193__a = new Array(arguments.length -  3);
while (G__22193__i < G__22193__a.length) {G__22193__a[G__22193__i] = arguments[G__22193__i + 3]; ++G__22193__i;}
  more = new cljs.core.IndexedSeq(G__22193__a,0);
} 
return G__22192__delegate.call(this,k,x,y,more);};
G__22192.cljs$lang$maxFixedArity = 3;
G__22192.cljs$lang$applyTo = (function (arglist__22194){
var k = cljs.core.first(arglist__22194);
arglist__22194 = cljs.core.next(arglist__22194);
var x = cljs.core.first(arglist__22194);
arglist__22194 = cljs.core.next(arglist__22194);
var y = cljs.core.first(arglist__22194);
var more = cljs.core.rest(arglist__22194);
return G__22192__delegate(k,x,y,more);
});
G__22192.cljs$core$IFn$_invoke$arity$variadic = G__22192__delegate;
return G__22192;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22195 = null;
if (arguments.length > 3) {
var G__22196__i = 0, G__22196__a = new Array(arguments.length -  3);
while (G__22196__i < G__22196__a.length) {G__22196__a[G__22196__i] = arguments[G__22196__i + 3]; ++G__22196__i;}
G__22195 = new cljs.core.IndexedSeq(G__22196__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22213 = null;
var G__22213__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22213__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22208 = result;
var G__22209 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22208,G__22209) : rf.call(null,G__22208,G__22209));
})());
})());
var G__22210 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22210) : rf.call(null,G__22210));
});
var G__22213__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22211 = result;
var G__22212 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22211,G__22212) : rf.call(null,G__22211,G__22212));
} else {
return result;
}
});
G__22213 = function(result,input){
switch(arguments.length){
case 0:
return G__22213__0.call(this);
case 1:
return G__22213__1.call(this,result);
case 2:
return G__22213__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22213.cljs$core$IFn$_invoke$arity$0 = G__22213__0;
G__22213.cljs$core$IFn$_invoke$arity$1 = G__22213__1;
G__22213.cljs$core$IFn$_invoke$arity$2 = G__22213__2;
return G__22213;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22226 = null;
var G__22226__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22226__1 = (function (result){
var G__22221 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22221) : rf.call(null,G__22221));
});
var G__22226__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22222 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22222) : pred.call(null,G__22222));
})())){
var G__22223 = result;
var G__22224 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22223,G__22224) : rf.call(null,G__22223,G__22224));
} else {
return cljs.core.reduced(result);
}
});
G__22226 = function(result,input){
switch(arguments.length){
case 0:
return G__22226__0.call(this);
case 1:
return G__22226__1.call(this,result);
case 2:
return G__22226__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22226.cljs$core$IFn$_invoke$arity$0 = G__22226__0;
G__22226.cljs$core$IFn$_invoke$arity$1 = G__22226__1;
G__22226.cljs$core$IFn$_invoke$arity$2 = G__22226__2;
return G__22226;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22225 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22225) : pred.call(null,G__22225));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22231 = (function (){var G__22233 = cljs.core._entry_key(sc,e);
var G__22234 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22233,G__22234) : comp.call(null,G__22233,G__22234));
})();
var G__22232 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22231,G__22232) : test.call(null,G__22231,G__22232));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22238 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22238,(0),null);
var s = vec__22238;
if(cljs.core.truth_((function (){var G__22239 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22239) : include.call(null,G__22239));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22240 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22240,(0),null);
var s = vec__22240;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22244 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22244,(0),null);
var s = vec__22244;
if(cljs.core.truth_((function (){var G__22245 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22245) : include.call(null,G__22245));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22246 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22246,(0),null);
var s = vec__22246;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22247 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22247) : Math.ceil.call(null,G__22247));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13030__auto__ = self__.__hash;
if(!((h__13030__auto__ == null))){
return h__13030__auto__;
} else {
var h__13030__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13030__auto____$1;

return h__13030__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22248 = ret;
var G__22249 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22248,G__22249) : f.call(null,G__22248,G__22249));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22250 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22250) : cljs.core.deref.call(null,G__22250));
} else {
var G__22251 = (i + self__.step);
var G__22252 = ret__$1;
i = G__22251;
ret = G__22252;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22270 = null;
var G__22270__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22270__1 = (function (result){
var G__22267 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22267) : rf.call(null,G__22267));
});
var G__22270__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22268 = result;
var G__22269 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22268,G__22269) : rf.call(null,G__22268,G__22269));
} else {
return result;
}
});
G__22270 = function(result,input){
switch(arguments.length){
case 0:
return G__22270__0.call(this);
case 1:
return G__22270__1.call(this,result);
case 2:
return G__22270__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22270.cljs$core$IFn$_invoke$arity$0 = G__22270__0;
G__22270.cljs$core$IFn$_invoke$arity$1 = G__22270__1;
G__22270.cljs$core$IFn$_invoke$arity$2 = G__22270__2;
return G__22270;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__22292 = null;
var G__22292__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22292__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22283 = result;
var G__22284 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22283,G__22284) : rf.call(null,G__22283,G__22284));
})());
})());
var G__22285 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22285) : rf.call(null,G__22285));
});
var G__22292__2 = (function (result,input){
var pval = (function (){var G__22286 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22286) : cljs.core.deref.call(null,G__22286));
})();
var val = (function (){var G__22287 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22287) : f.call(null,G__22287));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22288 = result;
var G__22289 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22288,G__22289) : rf.call(null,G__22288,G__22289));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22292 = function(result,input){
switch(arguments.length){
case 0:
return G__22292__0.call(this);
case 1:
return G__22292__1.call(this,result);
case 2:
return G__22292__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22292.cljs$core$IFn$_invoke$arity$0 = G__22292__0;
G__22292.cljs$core$IFn$_invoke$arity$1 = G__22292__1;
G__22292.cljs$core$IFn$_invoke$arity$2 = G__22292__2;
return G__22292;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22290 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22290) : f.call(null,G__22290));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22271_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22291 = p1__22271_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22291) : f.call(null,G__22291));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22301 = init;
var G__22302 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22301,G__22302) : f.call(null,G__22301,G__22302));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22397 = null;
var G__22397__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22397__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22355 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22355) : f.call(null,G__22355));
})()],null));
});
var G__22397__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22356 = x;
var G__22357 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22356,G__22357) : f.call(null,G__22356,G__22357));
})()],null));
});
var G__22397__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22358 = x;
var G__22359 = y;
var G__22360 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22358,G__22359,G__22360) : f.call(null,G__22358,G__22359,G__22360));
})()],null));
});
var G__22397__4 = (function() { 
var G__22398__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22398 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22399__i = 0, G__22399__a = new Array(arguments.length -  3);
while (G__22399__i < G__22399__a.length) {G__22399__a[G__22399__i] = arguments[G__22399__i + 3]; ++G__22399__i;}
  args = new cljs.core.IndexedSeq(G__22399__a,0);
} 
return G__22398__delegate.call(this,x,y,z,args);};
G__22398.cljs$lang$maxFixedArity = 3;
G__22398.cljs$lang$applyTo = (function (arglist__22400){
var x = cljs.core.first(arglist__22400);
arglist__22400 = cljs.core.next(arglist__22400);
var y = cljs.core.first(arglist__22400);
arglist__22400 = cljs.core.next(arglist__22400);
var z = cljs.core.first(arglist__22400);
var args = cljs.core.rest(arglist__22400);
return G__22398__delegate(x,y,z,args);
});
G__22398.cljs$core$IFn$_invoke$arity$variadic = G__22398__delegate;
return G__22398;
})()
;
G__22397 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22397__0.call(this);
case 1:
return G__22397__1.call(this,x);
case 2:
return G__22397__2.call(this,x,y);
case 3:
return G__22397__3.call(this,x,y,z);
default:
var G__22401 = null;
if (arguments.length > 3) {
var G__22402__i = 0, G__22402__a = new Array(arguments.length -  3);
while (G__22402__i < G__22402__a.length) {G__22402__a[G__22402__i] = arguments[G__22402__i + 3]; ++G__22402__i;}
G__22401 = new cljs.core.IndexedSeq(G__22402__a,0);
}
return G__22397__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22397.cljs$lang$maxFixedArity = 3;
G__22397.cljs$lang$applyTo = G__22397__4.cljs$lang$applyTo;
G__22397.cljs$core$IFn$_invoke$arity$0 = G__22397__0;
G__22397.cljs$core$IFn$_invoke$arity$1 = G__22397__1;
G__22397.cljs$core$IFn$_invoke$arity$2 = G__22397__2;
G__22397.cljs$core$IFn$_invoke$arity$3 = G__22397__3;
G__22397.cljs$core$IFn$_invoke$arity$variadic = G__22397__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22397;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22403 = null;
var G__22403__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22403__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22361 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22361) : f.call(null,G__22361));
})(),(function (){var G__22362 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22362) : g.call(null,G__22362));
})()],null));
});
var G__22403__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22363 = x;
var G__22364 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22363,G__22364) : f.call(null,G__22363,G__22364));
})(),(function (){var G__22365 = x;
var G__22366 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22365,G__22366) : g.call(null,G__22365,G__22366));
})()],null));
});
var G__22403__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22367 = x;
var G__22368 = y;
var G__22369 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22367,G__22368,G__22369) : f.call(null,G__22367,G__22368,G__22369));
})(),(function (){var G__22370 = x;
var G__22371 = y;
var G__22372 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22370,G__22371,G__22372) : g.call(null,G__22370,G__22371,G__22372));
})()],null));
});
var G__22403__4 = (function() { 
var G__22404__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22404 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22405__i = 0, G__22405__a = new Array(arguments.length -  3);
while (G__22405__i < G__22405__a.length) {G__22405__a[G__22405__i] = arguments[G__22405__i + 3]; ++G__22405__i;}
  args = new cljs.core.IndexedSeq(G__22405__a,0);
} 
return G__22404__delegate.call(this,x,y,z,args);};
G__22404.cljs$lang$maxFixedArity = 3;
G__22404.cljs$lang$applyTo = (function (arglist__22406){
var x = cljs.core.first(arglist__22406);
arglist__22406 = cljs.core.next(arglist__22406);
var y = cljs.core.first(arglist__22406);
arglist__22406 = cljs.core.next(arglist__22406);
var z = cljs.core.first(arglist__22406);
var args = cljs.core.rest(arglist__22406);
return G__22404__delegate(x,y,z,args);
});
G__22404.cljs$core$IFn$_invoke$arity$variadic = G__22404__delegate;
return G__22404;
})()
;
G__22403 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22403__0.call(this);
case 1:
return G__22403__1.call(this,x);
case 2:
return G__22403__2.call(this,x,y);
case 3:
return G__22403__3.call(this,x,y,z);
default:
var G__22407 = null;
if (arguments.length > 3) {
var G__22408__i = 0, G__22408__a = new Array(arguments.length -  3);
while (G__22408__i < G__22408__a.length) {G__22408__a[G__22408__i] = arguments[G__22408__i + 3]; ++G__22408__i;}
G__22407 = new cljs.core.IndexedSeq(G__22408__a,0);
}
return G__22403__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22403.cljs$lang$maxFixedArity = 3;
G__22403.cljs$lang$applyTo = G__22403__4.cljs$lang$applyTo;
G__22403.cljs$core$IFn$_invoke$arity$0 = G__22403__0;
G__22403.cljs$core$IFn$_invoke$arity$1 = G__22403__1;
G__22403.cljs$core$IFn$_invoke$arity$2 = G__22403__2;
G__22403.cljs$core$IFn$_invoke$arity$3 = G__22403__3;
G__22403.cljs$core$IFn$_invoke$arity$variadic = G__22403__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22403;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22409 = null;
var G__22409__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22409__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22373 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22373) : f.call(null,G__22373));
})(),(function (){var G__22374 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22374) : g.call(null,G__22374));
})(),(function (){var G__22375 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22375) : h.call(null,G__22375));
})()],null));
});
var G__22409__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22376 = x;
var G__22377 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22376,G__22377) : f.call(null,G__22376,G__22377));
})(),(function (){var G__22378 = x;
var G__22379 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22378,G__22379) : g.call(null,G__22378,G__22379));
})(),(function (){var G__22380 = x;
var G__22381 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22380,G__22381) : h.call(null,G__22380,G__22381));
})()],null));
});
var G__22409__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22382 = x;
var G__22383 = y;
var G__22384 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22382,G__22383,G__22384) : f.call(null,G__22382,G__22383,G__22384));
})(),(function (){var G__22385 = x;
var G__22386 = y;
var G__22387 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22385,G__22386,G__22387) : g.call(null,G__22385,G__22386,G__22387));
})(),(function (){var G__22388 = x;
var G__22389 = y;
var G__22390 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22388,G__22389,G__22390) : h.call(null,G__22388,G__22389,G__22390));
})()],null));
});
var G__22409__4 = (function() { 
var G__22410__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22410 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22411__i = 0, G__22411__a = new Array(arguments.length -  3);
while (G__22411__i < G__22411__a.length) {G__22411__a[G__22411__i] = arguments[G__22411__i + 3]; ++G__22411__i;}
  args = new cljs.core.IndexedSeq(G__22411__a,0);
} 
return G__22410__delegate.call(this,x,y,z,args);};
G__22410.cljs$lang$maxFixedArity = 3;
G__22410.cljs$lang$applyTo = (function (arglist__22412){
var x = cljs.core.first(arglist__22412);
arglist__22412 = cljs.core.next(arglist__22412);
var y = cljs.core.first(arglist__22412);
arglist__22412 = cljs.core.next(arglist__22412);
var z = cljs.core.first(arglist__22412);
var args = cljs.core.rest(arglist__22412);
return G__22410__delegate(x,y,z,args);
});
G__22410.cljs$core$IFn$_invoke$arity$variadic = G__22410__delegate;
return G__22410;
})()
;
G__22409 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22409__0.call(this);
case 1:
return G__22409__1.call(this,x);
case 2:
return G__22409__2.call(this,x,y);
case 3:
return G__22409__3.call(this,x,y,z);
default:
var G__22413 = null;
if (arguments.length > 3) {
var G__22414__i = 0, G__22414__a = new Array(arguments.length -  3);
while (G__22414__i < G__22414__a.length) {G__22414__a[G__22414__i] = arguments[G__22414__i + 3]; ++G__22414__i;}
G__22413 = new cljs.core.IndexedSeq(G__22414__a,0);
}
return G__22409__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22413);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22409.cljs$lang$maxFixedArity = 3;
G__22409.cljs$lang$applyTo = G__22409__4.cljs$lang$applyTo;
G__22409.cljs$core$IFn$_invoke$arity$0 = G__22409__0;
G__22409.cljs$core$IFn$_invoke$arity$1 = G__22409__1;
G__22409.cljs$core$IFn$_invoke$arity$2 = G__22409__2;
G__22409.cljs$core$IFn$_invoke$arity$3 = G__22409__3;
G__22409.cljs$core$IFn$_invoke$arity$variadic = G__22409__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22409;
})()
});
var juxt__4 = (function() { 
var G__22415__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22416 = null;
var G__22416__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22303_SHARP_,p2__22304_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22303_SHARP_,(function (){return (p2__22304_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22304_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22304_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22416__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22305_SHARP_,p2__22306_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22305_SHARP_,(function (){var G__22391 = x;
return (p2__22306_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22306_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22391) : p2__22306_SHARP_.call(null,G__22391));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22416__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22307_SHARP_,p2__22308_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22307_SHARP_,(function (){var G__22392 = x;
var G__22393 = y;
return (p2__22308_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22308_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22392,G__22393) : p2__22308_SHARP_.call(null,G__22392,G__22393));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22416__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22309_SHARP_,p2__22310_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22309_SHARP_,(function (){var G__22394 = x;
var G__22395 = y;
var G__22396 = z;
return (p2__22310_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22310_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22394,G__22395,G__22396) : p2__22310_SHARP_.call(null,G__22394,G__22395,G__22396));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22416__4 = (function() { 
var G__22417__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22311_SHARP_,p2__22312_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22311_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22312_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22417 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22418__i = 0, G__22418__a = new Array(arguments.length -  3);
while (G__22418__i < G__22418__a.length) {G__22418__a[G__22418__i] = arguments[G__22418__i + 3]; ++G__22418__i;}
  args = new cljs.core.IndexedSeq(G__22418__a,0);
} 
return G__22417__delegate.call(this,x,y,z,args);};
G__22417.cljs$lang$maxFixedArity = 3;
G__22417.cljs$lang$applyTo = (function (arglist__22419){
var x = cljs.core.first(arglist__22419);
arglist__22419 = cljs.core.next(arglist__22419);
var y = cljs.core.first(arglist__22419);
arglist__22419 = cljs.core.next(arglist__22419);
var z = cljs.core.first(arglist__22419);
var args = cljs.core.rest(arglist__22419);
return G__22417__delegate(x,y,z,args);
});
G__22417.cljs$core$IFn$_invoke$arity$variadic = G__22417__delegate;
return G__22417;
})()
;
G__22416 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22416__0.call(this);
case 1:
return G__22416__1.call(this,x);
case 2:
return G__22416__2.call(this,x,y);
case 3:
return G__22416__3.call(this,x,y,z);
default:
var G__22420 = null;
if (arguments.length > 3) {
var G__22421__i = 0, G__22421__a = new Array(arguments.length -  3);
while (G__22421__i < G__22421__a.length) {G__22421__a[G__22421__i] = arguments[G__22421__i + 3]; ++G__22421__i;}
G__22420 = new cljs.core.IndexedSeq(G__22421__a,0);
}
return G__22416__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22416.cljs$lang$maxFixedArity = 3;
G__22416.cljs$lang$applyTo = G__22416__4.cljs$lang$applyTo;
G__22416.cljs$core$IFn$_invoke$arity$0 = G__22416__0;
G__22416.cljs$core$IFn$_invoke$arity$1 = G__22416__1;
G__22416.cljs$core$IFn$_invoke$arity$2 = G__22416__2;
G__22416.cljs$core$IFn$_invoke$arity$3 = G__22416__3;
G__22416.cljs$core$IFn$_invoke$arity$variadic = G__22416__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22416;
})()
;})(fs__$1))
};
var G__22415 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22422__i = 0, G__22422__a = new Array(arguments.length -  3);
while (G__22422__i < G__22422__a.length) {G__22422__a[G__22422__i] = arguments[G__22422__i + 3]; ++G__22422__i;}
  fs = new cljs.core.IndexedSeq(G__22422__a,0);
} 
return G__22415__delegate.call(this,f,g,h,fs);};
G__22415.cljs$lang$maxFixedArity = 3;
G__22415.cljs$lang$applyTo = (function (arglist__22423){
var f = cljs.core.first(arglist__22423);
arglist__22423 = cljs.core.next(arglist__22423);
var g = cljs.core.first(arglist__22423);
arglist__22423 = cljs.core.next(arglist__22423);
var h = cljs.core.first(arglist__22423);
var fs = cljs.core.rest(arglist__22423);
return G__22415__delegate(f,g,h,fs);
});
G__22415.cljs$core$IFn$_invoke$arity$variadic = G__22415__delegate;
return G__22415;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22424 = null;
if (arguments.length > 3) {
var G__22425__i = 0, G__22425__a = new Array(arguments.length -  3);
while (G__22425__i < G__22425__a.length) {G__22425__a[G__22425__i] = arguments[G__22425__i + 3]; ++G__22425__i;}
G__22424 = new cljs.core.IndexedSeq(G__22425__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22426 = cljs.core.next(coll);
coll = G__22426;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22427 = (n - (1));
var G__22428 = cljs.core.next(coll);
n = G__22427;
coll = G__22428;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22432 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22432,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22432,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22432,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22440 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__22441_22447 = cljs.core.first(coll);
var G__22442_22448 = writer;
var G__22443_22449 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22441_22447,G__22442_22448,G__22443_22449) : print_one.call(null,G__22441_22447,G__22442_22448,G__22443_22449));
} else {
}

var coll_22450__$1 = cljs.core.next(coll);
var n_22451 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22450__$1) && (((n_22451 == null)) || (!((n_22451 === (0)))))){
cljs.core._write(writer,sep);

var G__22444_22452 = cljs.core.first(coll_22450__$1);
var G__22445_22453 = writer;
var G__22446_22454 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22444_22452,G__22445_22453,G__22446_22454) : print_one.call(null,G__22444_22452,G__22445_22453,G__22446_22454));

var G__22455 = cljs.core.next(coll_22450__$1);
var G__22456 = (n_22451 - (1));
coll_22450__$1 = G__22455;
n_22451 = G__22456;
continue;
} else {
if((cljs.core.seq(coll_22450__$1)) && ((n_22451 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22440;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__22461 = cljs.core.seq(ss);
var chunk__22462 = null;
var count__22463 = (0);
var i__22464 = (0);
while(true){
if((i__22464 < count__22463)){
var s = chunk__22462.cljs$core$IIndexed$_nth$arity$2(null,i__22464);
cljs.core._write(writer,s);

var G__22465 = seq__22461;
var G__22466 = chunk__22462;
var G__22467 = count__22463;
var G__22468 = (i__22464 + (1));
seq__22461 = G__22465;
chunk__22462 = G__22466;
count__22463 = G__22467;
i__22464 = G__22468;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22461);
if(temp__4126__auto__){
var seq__22461__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22461__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__22461__$1);
var G__22469 = cljs.core.chunk_rest(seq__22461__$1);
var G__22470 = c__13396__auto__;
var G__22471 = cljs.core.count(c__13396__auto__);
var G__22472 = (0);
seq__22461 = G__22469;
chunk__22462 = G__22470;
count__22463 = G__22471;
i__22464 = G__22472;
continue;
} else {
var s = cljs.core.first(seq__22461__$1);
cljs.core._write(writer,s);

var G__22473 = cljs.core.next(seq__22461__$1);
var G__22474 = null;
var G__22475 = (0);
var G__22476 = (0);
seq__22461 = G__22473;
chunk__22462 = G__22474;
count__22463 = G__22475;
i__22464 = G__22476;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__22477__i = 0, G__22477__a = new Array(arguments.length -  1);
while (G__22477__i < G__22477__a.length) {G__22477__a[G__22477__i] = arguments[G__22477__i + 1]; ++G__22477__i;}
  ss = new cljs.core.IndexedSeq(G__22477__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__22478){
var writer = cljs.core.first(arglist__22478);
var ss = cljs.core.rest(arglist__22478);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj22480 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj22480;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__22483 = "[\\\\\"\b\f\n\r\t]";
var G__22484 = "g";
return RegExp(G__22483,G__22484);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12595__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12595__auto__)){
var and__12595__auto____$1 = (function (){var G__22498 = obj;
if(G__22498){
var bit__13290__auto__ = (G__22498.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13290__auto__) || (G__22498.cljs$core$IMeta$)){
return true;
} else {
if((!G__22498.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22498);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22498);
}
})();
if(and__12595__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__22499 = obj;
if(G__22499){
var bit__13283__auto__ = (G__22499.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13283__auto__) || (G__22499.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__22500 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__22501 = pr_writer;
var G__22502 = writer;
var G__22503 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__22500,G__22501,G__22502,G__22503) : cljs.core.print_map.call(null,G__22500,G__22501,G__22502,G__22503));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__22504 = obj;
return goog.isString(G__22504);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__22506 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__22506;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__22505 = obj;
if(G__22505){
var bit__13290__auto__ = (G__22505.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13290__auto__) || (G__22505.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__22505.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22505);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__22505);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__22511 = cljs.core.seq(cljs.core.next(objs));
var chunk__22512 = null;
var count__22513 = (0);
var i__22514 = (0);
while(true){
if((i__22514 < count__22513)){
var obj = chunk__22512.cljs$core$IIndexed$_nth$arity$2(null,i__22514);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22515 = seq__22511;
var G__22516 = chunk__22512;
var G__22517 = count__22513;
var G__22518 = (i__22514 + (1));
seq__22511 = G__22515;
chunk__22512 = G__22516;
count__22513 = G__22517;
i__22514 = G__22518;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22511);
if(temp__4126__auto__){
var seq__22511__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22511__$1)){
var c__13396__auto__ = cljs.core.chunk_first(seq__22511__$1);
var G__22519 = cljs.core.chunk_rest(seq__22511__$1);
var G__22520 = c__13396__auto__;
var G__22521 = cljs.core.count(c__13396__auto__);
var G__22522 = (0);
seq__22511 = G__22519;
chunk__22512 = G__22520;
count__22513 = G__22521;
i__22514 = G__22522;
continue;
} else {
var obj = cljs.core.first(seq__22511__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__22523 = cljs.core.next(seq__22511__$1);
var G__22524 = null;
var G__22525 = (0);
var G__22526 = (0);
seq__22511 = G__22523;
chunk__22512 = G__22524;
count__22513 = G__22525;
i__22514 = G__22526;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22527__i = 0, G__22527__a = new Array(arguments.length -  0);
while (G__22527__i < G__22527__a.length) {G__22527__a[G__22527__i] = arguments[G__22527__i + 0]; ++G__22527__i;}
  objs = new cljs.core.IndexedSeq(G__22527__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__22528){
var objs = cljs.core.seq(arglist__22528);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22529__i = 0, G__22529__a = new Array(arguments.length -  0);
while (G__22529__i < G__22529__a.length) {G__22529__a[G__22529__i] = arguments[G__22529__i + 0]; ++G__22529__i;}
  objs = new cljs.core.IndexedSeq(G__22529__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__22530){
var objs = cljs.core.seq(arglist__22530);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22531__i = 0, G__22531__a = new Array(arguments.length -  0);
while (G__22531__i < G__22531__a.length) {G__22531__a[G__22531__i] = arguments[G__22531__i + 0]; ++G__22531__i;}
  objs = new cljs.core.IndexedSeq(G__22531__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__22532){
var objs = cljs.core.seq(arglist__22532);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22533__i = 0, G__22533__a = new Array(arguments.length -  0);
while (G__22533__i < G__22533__a.length) {G__22533__a[G__22533__i] = arguments[G__22533__i + 0]; ++G__22533__i;}
  objs = new cljs.core.IndexedSeq(G__22533__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__22534){
var objs = cljs.core.seq(arglist__22534);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22535__i = 0, G__22535__a = new Array(arguments.length -  0);
while (G__22535__i < G__22535__a.length) {G__22535__a[G__22535__i] = arguments[G__22535__i + 0]; ++G__22535__i;}
  objs = new cljs.core.IndexedSeq(G__22535__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__22536){
var objs = cljs.core.seq(arglist__22536);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22537__i = 0, G__22537__a = new Array(arguments.length -  0);
while (G__22537__i < G__22537__a.length) {G__22537__a[G__22537__i] = arguments[G__22537__i + 0]; ++G__22537__i;}
  objs = new cljs.core.IndexedSeq(G__22537__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__22538){
var objs = cljs.core.seq(arglist__22538);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22539__i = 0, G__22539__a = new Array(arguments.length -  0);
while (G__22539__i < G__22539__a.length) {G__22539__a[G__22539__i] = arguments[G__22539__i + 0]; ++G__22539__i;}
  objs = new cljs.core.IndexedSeq(G__22539__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__22540){
var objs = cljs.core.seq(arglist__22540);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__22541__i = 0, G__22541__a = new Array(arguments.length -  0);
while (G__22541__i < G__22541__a.length) {G__22541__a[G__22541__i] = arguments[G__22541__i + 0]; ++G__22541__i;}
  objs = new cljs.core.IndexedSeq(G__22541__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__22542){
var objs = cljs.core.seq(arglist__22542);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__22549_22555 = cljs.core.key(e);
var G__22550_22556 = w;
var G__22551_22557 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22549_22555,G__22550_22556,G__22551_22557) : print_one.call(null,G__22549_22555,G__22550_22556,G__22551_22557));

cljs.core._write(w," ");

var G__22552 = cljs.core.val(e);
var G__22553 = w;
var G__22554 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22552,G__22553,G__22554) : print_one.call(null,G__22552,G__22553,G__22554));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__22558__i = 0, G__22558__a = new Array(arguments.length -  2);
while (G__22558__i < G__22558__a.length) {G__22558__a[G__22558__i] = arguments[G__22558__i + 2]; ++G__22558__i;}
  args = new cljs.core.IndexedSeq(G__22558__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__22559){
var iref = cljs.core.first(arglist__22559);
arglist__22559 = cljs.core.next(arglist__22559);
var f = cljs.core.first(arglist__22559);
var args = cljs.core.rest(arglist__22559);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__22562 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22562) : cljs.core.atom.call(null,G__22562));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__22564 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22564) : cljs.core.deref.call(null,G__22564));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__22565_SHARP_,p2__22566_SHARP_){
var ret = (function (){var G__22569 = p1__22565_SHARP_;
var G__22570 = p2__22566_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22569,G__22570) : rf.call(null,G__22569,G__22570));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__22573 = null;
var G__22573__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22573__1 = (function (result){
var G__22572 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22572) : rf.call(null,G__22572));
});
var G__22573__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__22573 = function(result,input){
switch(arguments.length){
case 0:
return G__22573__0.call(this);
case 1:
return G__22573__1.call(this,result);
case 2:
return G__22573__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22573.cljs$core$IFn$_invoke$arity$0 = G__22573__0;
G__22573.cljs$core$IFn$_invoke$arity$1 = G__22573__1;
G__22573.cljs$core$IFn$_invoke$arity$2 = G__22573__2;
return G__22573;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__22582 = null;
var G__22582__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22582__1 = (function (result){
var G__22578 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22578) : rf.call(null,G__22578));
});
var G__22582__2 = (function (result,input){
var prior = (function (){var G__22579 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22579) : cljs.core.deref.call(null,G__22579));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__22580 = result;
var G__22581 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22580,G__22581) : rf.call(null,G__22580,G__22581));
}
});
G__22582 = function(result,input){
switch(arguments.length){
case 0:
return G__22582__0.call(this);
case 1:
return G__22582__1.call(this,result);
case 2:
return G__22582__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22582.cljs$core$IFn$_invoke$arity$0 = G__22582__0;
G__22582.cljs$core$IFn$_invoke$arity$1 = G__22582__1;
G__22582.cljs$core$IFn$_invoke$arity$2 = G__22582__2;
return G__22582;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13587__auto__ = this;
return cljs.core.es6_iterator(this__13587__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22584_SHARP_,p2__22583_SHARP_){
var G__22586 = p2__22583_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__22586) : proc.call(null,G__22586));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj22588 = {};
return obj22588;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._clj__GT_js[(function (){var G__22592 = x__13253__auto__;
return goog.typeOf(G__22592);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._key__GT_js[(function (){var G__22596 = x__13253__auto__;
return goog.typeOf(G__22596);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__22599 = k;
if(G__22599){
var bit__13290__auto__ = null;
if(cljs.core.truth_((function (){var or__12607__auto__ = bit__13290__auto__;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return G__22599.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22599.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22599);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22599);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__22600 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__22600) : cljs.core.clj__GT_js.call(null,G__22600));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__22616 = x;
if(G__22616){
var bit__13290__auto__ = null;
if(cljs.core.truth_((function (){var or__12607__auto__ = bit__13290__auto__;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return G__22616.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__22616.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22616);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__22616);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj22618 = {};
return obj22618;
})();
var seq__22619_22629 = cljs.core.seq(x);
var chunk__22620_22630 = null;
var count__22621_22631 = (0);
var i__22622_22632 = (0);
while(true){
if((i__22622_22632 < count__22621_22631)){
var vec__22623_22633 = chunk__22620_22630.cljs$core$IIndexed$_nth$arity$2(null,i__22622_22632);
var k_22634 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22623_22633,(0),null);
var v_22635 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22623_22633,(1),null);
(m[cljs.core.key__GT_js(k_22634)] = clj__GT_js(v_22635));

var G__22636 = seq__22619_22629;
var G__22637 = chunk__22620_22630;
var G__22638 = count__22621_22631;
var G__22639 = (i__22622_22632 + (1));
seq__22619_22629 = G__22636;
chunk__22620_22630 = G__22637;
count__22621_22631 = G__22638;
i__22622_22632 = G__22639;
continue;
} else {
var temp__4126__auto___22640 = cljs.core.seq(seq__22619_22629);
if(temp__4126__auto___22640){
var seq__22619_22641__$1 = temp__4126__auto___22640;
if(cljs.core.chunked_seq_QMARK_(seq__22619_22641__$1)){
var c__13396__auto___22642 = cljs.core.chunk_first(seq__22619_22641__$1);
var G__22643 = cljs.core.chunk_rest(seq__22619_22641__$1);
var G__22644 = c__13396__auto___22642;
var G__22645 = cljs.core.count(c__13396__auto___22642);
var G__22646 = (0);
seq__22619_22629 = G__22643;
chunk__22620_22630 = G__22644;
count__22621_22631 = G__22645;
i__22622_22632 = G__22646;
continue;
} else {
var vec__22624_22647 = cljs.core.first(seq__22619_22641__$1);
var k_22648 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22624_22647,(0),null);
var v_22649 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22624_22647,(1),null);
(m[cljs.core.key__GT_js(k_22648)] = clj__GT_js(v_22649));

var G__22650 = cljs.core.next(seq__22619_22641__$1);
var G__22651 = null;
var G__22652 = (0);
var G__22653 = (0);
seq__22619_22629 = G__22650;
chunk__22620_22630 = G__22651;
count__22621_22631 = G__22652;
i__22622_22632 = G__22653;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__22625_22654 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__22626_22655 = null;
var count__22627_22656 = (0);
var i__22628_22657 = (0);
while(true){
if((i__22628_22657 < count__22627_22656)){
var x_22658__$1 = chunk__22626_22655.cljs$core$IIndexed$_nth$arity$2(null,i__22628_22657);
arr.push(x_22658__$1);

var G__22659 = seq__22625_22654;
var G__22660 = chunk__22626_22655;
var G__22661 = count__22627_22656;
var G__22662 = (i__22628_22657 + (1));
seq__22625_22654 = G__22659;
chunk__22626_22655 = G__22660;
count__22627_22656 = G__22661;
i__22628_22657 = G__22662;
continue;
} else {
var temp__4126__auto___22663 = cljs.core.seq(seq__22625_22654);
if(temp__4126__auto___22663){
var seq__22625_22664__$1 = temp__4126__auto___22663;
if(cljs.core.chunked_seq_QMARK_(seq__22625_22664__$1)){
var c__13396__auto___22665 = cljs.core.chunk_first(seq__22625_22664__$1);
var G__22666 = cljs.core.chunk_rest(seq__22625_22664__$1);
var G__22667 = c__13396__auto___22665;
var G__22668 = cljs.core.count(c__13396__auto___22665);
var G__22669 = (0);
seq__22625_22654 = G__22666;
chunk__22626_22655 = G__22667;
count__22627_22656 = G__22668;
i__22628_22657 = G__22669;
continue;
} else {
var x_22670__$1 = cljs.core.first(seq__22625_22664__$1);
arr.push(x_22670__$1);

var G__22671 = cljs.core.next(seq__22625_22664__$1);
var G__22672 = null;
var G__22673 = (0);
var G__22674 = (0);
seq__22625_22654 = G__22671;
chunk__22626_22655 = G__22672;
count__22627_22656 = G__22673;
i__22628_22657 = G__22674;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj22676 = {};
return obj22676;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12595__auto__ = x;
if(and__12595__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12595__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13253__auto__ = (((x == null))?null:x);
return (function (){var or__12607__auto__ = (cljs.core._js__GT_clj[(function (){var G__22680 = x__13253__auto__;
return goog.typeOf(G__22680);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__22737__delegate = function (x,opts){
var map__22710 = opts;
var map__22710__$1 = ((cljs.core.seq_QMARK_(map__22710))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22710):map__22710);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22710__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__22710,map__22710__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__22726 = x__$1;
if(G__22726){
var bit__13290__auto__ = null;
if(cljs.core.truth_((function (){var or__12607__auto__ = bit__13290__auto__;
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return G__22726.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__22726.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22726);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__22726);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13365__auto__ = ((function (map__22710,map__22710__$1,keywordize_keys,keyfn){
return (function iter__22727(s__22728){
return (new cljs.core.LazySeq(null,((function (map__22710,map__22710__$1,keywordize_keys,keyfn){
return (function (){
var s__22728__$1 = s__22728;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__22728__$1);
if(temp__4126__auto__){
var s__22728__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__22728__$2)){
var c__13363__auto__ = cljs.core.chunk_first(s__22728__$2);
var size__13364__auto__ = cljs.core.count(c__13363__auto__);
var b__22730 = cljs.core.chunk_buffer(size__13364__auto__);
if((function (){var i__22729 = (0);
while(true){
if((i__22729 < size__13364__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13363__auto__,i__22729);
cljs.core.chunk_append(b__22730,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22735 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22735) : keyfn.call(null,G__22735));
})(),thisfn((x__$1[k]))], null));

var G__22738 = (i__22729 + (1));
i__22729 = G__22738;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__22730),iter__22727(cljs.core.chunk_rest(s__22728__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__22730),null);
}
} else {
var k = cljs.core.first(s__22728__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__22736 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22736) : keyfn.call(null,G__22736));
})(),thisfn((x__$1[k]))], null),iter__22727(cljs.core.rest(s__22728__$2)));
}
} else {
return null;
}
break;
}
});})(map__22710,map__22710__$1,keywordize_keys,keyfn))
,null,null));
});})(map__22710,map__22710__$1,keywordize_keys,keyfn))
;
return iter__13365__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__22710,map__22710__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__22737 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__22739__i = 0, G__22739__a = new Array(arguments.length -  1);
while (G__22739__i < G__22739__a.length) {G__22739__a[G__22739__i] = arguments[G__22739__i + 1]; ++G__22739__i;}
  opts = new cljs.core.IndexedSeq(G__22739__a,0);
} 
return G__22737__delegate.call(this,x,opts);};
G__22737.cljs$lang$maxFixedArity = 1;
G__22737.cljs$lang$applyTo = (function (arglist__22740){
var x = cljs.core.first(arglist__22740);
var opts = cljs.core.rest(arglist__22740);
return G__22737__delegate(x,opts);
});
G__22737.cljs$core$IFn$_invoke$arity$variadic = G__22737__delegate;
return G__22737;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__22741 = null;
if (arguments.length > 1) {
var G__22742__i = 0, G__22742__a = new Array(arguments.length -  1);
while (G__22742__i < G__22742__a.length) {G__22742__a[G__22742__i] = arguments[G__22742__i + 1]; ++G__22742__i;}
G__22741 = new cljs.core.IndexedSeq(G__22742__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__22745 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22745) : cljs.core.atom.call(null,G__22745));
})();
return ((function (mem){
return (function() { 
var G__22747__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__22746 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22746) : cljs.core.deref.call(null,G__22746));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__22747 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22748__i = 0, G__22748__a = new Array(arguments.length -  0);
while (G__22748__i < G__22748__a.length) {G__22748__a[G__22748__i] = arguments[G__22748__i + 0]; ++G__22748__i;}
  args = new cljs.core.IndexedSeq(G__22748__a,0);
} 
return G__22747__delegate.call(this,args);};
G__22747.cljs$lang$maxFixedArity = 0;
G__22747.cljs$lang$applyTo = (function (arglist__22749){
var args = cljs.core.seq(arglist__22749);
return G__22747__delegate(args);
});
G__22747.cljs$core$IFn$_invoke$arity$variadic = G__22747__delegate;
return G__22747;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__22751 = ret;
f = G__22751;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__22752__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__22752 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22753__i = 0, G__22753__a = new Array(arguments.length -  1);
while (G__22753__i < G__22753__a.length) {G__22753__a[G__22753__i] = arguments[G__22753__i + 1]; ++G__22753__i;}
  args = new cljs.core.IndexedSeq(G__22753__a,0);
} 
return G__22752__delegate.call(this,f,args);};
G__22752.cljs$lang$maxFixedArity = 1;
G__22752.cljs$lang$applyTo = (function (arglist__22754){
var f = cljs.core.first(arglist__22754);
var args = cljs.core.rest(arglist__22754);
return G__22752__delegate(f,args);
});
G__22752.cljs$core$IFn$_invoke$arity$variadic = G__22752__delegate;
return G__22752;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__22755 = null;
if (arguments.length > 1) {
var G__22756__i = 0, G__22756__a = new Array(arguments.length -  1);
while (G__22756__i < G__22756__a.length) {G__22756__a[G__22756__i] = arguments[G__22756__i + 1]; ++G__22756__i;}
G__22755 = new cljs.core.IndexedSeq(G__22756__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__22759 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22759) : Math.floor.call(null,G__22759));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__22761 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22761) : f.call(null,G__22761));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__22763 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__22763) : cljs.core.atom.call(null,G__22763));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__22764__i = 0, G__22764__a = new Array(arguments.length -  1);
while (G__22764__i < G__22764__a.length) {G__22764__a[G__22764__i] = arguments[G__22764__i + 1]; ++G__22764__i;}
  args = new cljs.core.IndexedSeq(G__22764__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__22765){
var f = cljs.core.first(arglist__22765);
var args = cljs.core.rest(arglist__22765);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22830 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22830) : cljs.core.deref.call(null,G__22830));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12607__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
var and__12595__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12595__auto__){
var and__12595__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12595__auto____$1){
var and__12595__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12595__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__22855 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__22853 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__22853) : child.call(null,G__22853));
})(),(function (){var G__22854 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__22854) : parent.call(null,G__22854));
})());
var G__22856 = (i + (1));
ret = G__22855;
i = G__22856;
continue;
}
break;
}
} else {
return and__12595__auto____$2;
}
} else {
return and__12595__auto____$1;
}
} else {
return and__12595__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__22860 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22860) : cljs.core.deref.call(null,G__22860));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__22864 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22864) : cljs.core.deref.call(null,G__22864));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__22868 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22868) : cljs.core.deref.call(null,G__22868));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__22877 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__22877) : targets.call(null,G__22877));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__22878 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__22878) : sources.call(null,G__22878));
})()));
});})(tp,td,ta))
;
var or__12607__auto__ = ((cljs.core.contains_QMARK_((function (){var G__22882 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__22882) : tp.call(null,G__22882));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__22883 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22883) : ta.call(null,G__22883));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__22884 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__22884) : ta.call(null,G__22884));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__22891 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22891) : parentMap.call(null,G__22891));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__22892 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22892) : parentMap.call(null,G__22892));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__22885_SHARP_){
return cljs.core.cons(cljs.core.first(p1__22885_SHARP_),cljs.core.interpose(cljs.core.first(p1__22885_SHARP_),cljs.core.second(p1__22885_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__22893 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__22893) : parentMap.call(null,G__22893));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__22886_SHARP_,p2__22887_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__22886_SHARP_,p2__22887_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__22896 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22896) : cljs.core.deref.call(null,G__22896));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__22897 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22897) : cljs.core.deref.call(null,G__22897));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__22913 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22913) : cljs.core.deref.call(null,G__22913));
})().call(null,x);
var or__12607__auto__ = (cljs.core.truth_((function (){var and__12595__auto__ = xprefs;
if(cljs.core.truth_(and__12595__auto__)){
var G__22915 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__22915) : xprefs.call(null,G__22915));
} else {
return and__12595__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__22916 = cljs.core.rest(ps);
ps = G__22916;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12607__auto____$1)){
return or__12607__auto____$1;
} else {
var or__12607__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__22917 = cljs.core.rest(ps);
ps = G__22917;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12607__auto____$2)){
return or__12607__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12607__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12607__auto__)){
return or__12607__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__22931){
var vec__22932 = p__22931;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22932,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22932,(1),null);
var e = vec__22932;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__22933 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22933) : cljs.core.deref.call(null,G__22933));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12607__auto__ = (be == null);
if(or__12607__auto__){
return or__12607__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__22934 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22934) : cljs.core.deref.call(null,G__22934));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22935 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22935) : cljs.core.deref.call(null,G__22935));
})(),(function (){var G__22936 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22936) : cljs.core.deref.call(null,G__22936));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj22938 = {};
return obj22938;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._reset[(function (){var G__22942 = x__13253__auto__;
return goog.typeOf(G__22942);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._reset["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._add_method[(function (){var G__22946 = x__13253__auto__;
return goog.typeOf(G__22946);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._add_method["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._remove_method[(function (){var G__22950 = x__13253__auto__;
return goog.typeOf(G__22950);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._prefer_method[(function (){var G__22954 = x__13253__auto__;
return goog.typeOf(G__22954);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._get_method[(function (){var G__22958 = x__13253__auto__;
return goog.typeOf(G__22958);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._get_method["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._methods[(function (){var G__22962 = x__13253__auto__;
return goog.typeOf(G__22962);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._methods["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12595__auto__ = mf;
if(and__12595__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12595__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13253__auto__ = (((mf == null))?null:mf);
return (function (){var or__12607__auto__ = (cljs.core._prefers[(function (){var G__22966 = x__13253__auto__;
return goog.typeOf(G__22966);
})()]);
if(or__12607__auto__){
return or__12607__auto__;
} else {
var or__12607__auto____$1 = (cljs.core._prefers["_"]);
if(or__12607__auto____$1){
return or__12607__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22968 = this$__$1;
return goog.getUid(G__22968);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__22969 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22969) : cljs.core.deref.call(null,G__22969));
})(),(function (){var G__22970 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22970) : cljs.core.deref.call(null,G__22970));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__22971 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22971) : cljs.core.deref.call(null,G__22971));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__22972 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22972) : cljs.core.deref.call(null,G__22972));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22973 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22973) : cljs.core.deref.call(null,G__22973));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__22974 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22974) : cljs.core.deref.call(null,G__22974));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__23815 = null;
var G__23815__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__23815__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22975 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__22975) : self__.dispatch_fn.call(null,G__22975));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22976 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__22976) : target_fn.call(null,G__22976));
});
var G__23815__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22977 = a;
var G__22978 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__22977,G__22978) : self__.dispatch_fn.call(null,G__22977,G__22978));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22979 = a;
var G__22980 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__22979,G__22980) : target_fn.call(null,G__22979,G__22980));
});
var G__23815__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22981 = a;
var G__22982 = b;
var G__22983 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__22981,G__22982,G__22983) : self__.dispatch_fn.call(null,G__22981,G__22982,G__22983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22984 = a;
var G__22985 = b;
var G__22986 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__22984,G__22985,G__22986) : target_fn.call(null,G__22984,G__22985,G__22986));
});
var G__23815__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22987 = a;
var G__22988 = b;
var G__22989 = c;
var G__22990 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__22987,G__22988,G__22989,G__22990) : self__.dispatch_fn.call(null,G__22987,G__22988,G__22989,G__22990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__22991 = a;
var G__22992 = b;
var G__22993 = c;
var G__22994 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__22991,G__22992,G__22993,G__22994) : target_fn.call(null,G__22991,G__22992,G__22993,G__22994));
});
var G__23815__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__22995 = a;
var G__22996 = b;
var G__22997 = c;
var G__22998 = d;
var G__22999 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__22995,G__22996,G__22997,G__22998,G__22999) : self__.dispatch_fn.call(null,G__22995,G__22996,G__22997,G__22998,G__22999));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23000 = a;
var G__23001 = b;
var G__23002 = c;
var G__23003 = d;
var G__23004 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23000,G__23001,G__23002,G__23003,G__23004) : target_fn.call(null,G__23000,G__23001,G__23002,G__23003,G__23004));
});
var G__23815__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23005 = a;
var G__23006 = b;
var G__23007 = c;
var G__23008 = d;
var G__23009 = e;
var G__23010 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23005,G__23006,G__23007,G__23008,G__23009,G__23010) : self__.dispatch_fn.call(null,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23011 = a;
var G__23012 = b;
var G__23013 = c;
var G__23014 = d;
var G__23015 = e;
var G__23016 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23011,G__23012,G__23013,G__23014,G__23015,G__23016) : target_fn.call(null,G__23011,G__23012,G__23013,G__23014,G__23015,G__23016));
});
var G__23815__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23017 = a;
var G__23018 = b;
var G__23019 = c;
var G__23020 = d;
var G__23021 = e;
var G__23022 = f;
var G__23023 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023) : self__.dispatch_fn.call(null,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23024 = a;
var G__23025 = b;
var G__23026 = c;
var G__23027 = d;
var G__23028 = e;
var G__23029 = f;
var G__23030 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030) : target_fn.call(null,G__23024,G__23025,G__23026,G__23027,G__23028,G__23029,G__23030));
});
var G__23815__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23031 = a;
var G__23032 = b;
var G__23033 = c;
var G__23034 = d;
var G__23035 = e;
var G__23036 = f;
var G__23037 = g;
var G__23038 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038) : self__.dispatch_fn.call(null,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23039 = a;
var G__23040 = b;
var G__23041 = c;
var G__23042 = d;
var G__23043 = e;
var G__23044 = f;
var G__23045 = g;
var G__23046 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046) : target_fn.call(null,G__23039,G__23040,G__23041,G__23042,G__23043,G__23044,G__23045,G__23046));
});
var G__23815__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23047 = a;
var G__23048 = b;
var G__23049 = c;
var G__23050 = d;
var G__23051 = e;
var G__23052 = f;
var G__23053 = g;
var G__23054 = h;
var G__23055 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055) : self__.dispatch_fn.call(null,G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23056 = a;
var G__23057 = b;
var G__23058 = c;
var G__23059 = d;
var G__23060 = e;
var G__23061 = f;
var G__23062 = g;
var G__23063 = h;
var G__23064 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064) : target_fn.call(null,G__23056,G__23057,G__23058,G__23059,G__23060,G__23061,G__23062,G__23063,G__23064));
});
var G__23815__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23065 = a;
var G__23066 = b;
var G__23067 = c;
var G__23068 = d;
var G__23069 = e;
var G__23070 = f;
var G__23071 = g;
var G__23072 = h;
var G__23073 = i;
var G__23074 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074) : self__.dispatch_fn.call(null,G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23075 = a;
var G__23076 = b;
var G__23077 = c;
var G__23078 = d;
var G__23079 = e;
var G__23080 = f;
var G__23081 = g;
var G__23082 = h;
var G__23083 = i;
var G__23084 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084) : target_fn.call(null,G__23075,G__23076,G__23077,G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084));
});
var G__23815__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23085 = a;
var G__23086 = b;
var G__23087 = c;
var G__23088 = d;
var G__23089 = e;
var G__23090 = f;
var G__23091 = g;
var G__23092 = h;
var G__23093 = i;
var G__23094 = j;
var G__23095 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095) : self__.dispatch_fn.call(null,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23096 = a;
var G__23097 = b;
var G__23098 = c;
var G__23099 = d;
var G__23100 = e;
var G__23101 = f;
var G__23102 = g;
var G__23103 = h;
var G__23104 = i;
var G__23105 = j;
var G__23106 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23096,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106) : target_fn.call(null,G__23096,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106));
});
var G__23815__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23107 = a;
var G__23108 = b;
var G__23109 = c;
var G__23110 = d;
var G__23111 = e;
var G__23112 = f;
var G__23113 = g;
var G__23114 = h;
var G__23115 = i;
var G__23116 = j;
var G__23117 = k;
var G__23118 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118) : self__.dispatch_fn.call(null,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116,G__23117,G__23118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23119 = a;
var G__23120 = b;
var G__23121 = c;
var G__23122 = d;
var G__23123 = e;
var G__23124 = f;
var G__23125 = g;
var G__23126 = h;
var G__23127 = i;
var G__23128 = j;
var G__23129 = k;
var G__23130 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130) : target_fn.call(null,G__23119,G__23120,G__23121,G__23122,G__23123,G__23124,G__23125,G__23126,G__23127,G__23128,G__23129,G__23130));
});
var G__23815__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23131 = a;
var G__23132 = b;
var G__23133 = c;
var G__23134 = d;
var G__23135 = e;
var G__23136 = f;
var G__23137 = g;
var G__23138 = h;
var G__23139 = i;
var G__23140 = j;
var G__23141 = k;
var G__23142 = l;
var G__23143 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143) : self__.dispatch_fn.call(null,G__23131,G__23132,G__23133,G__23134,G__23135,G__23136,G__23137,G__23138,G__23139,G__23140,G__23141,G__23142,G__23143));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23144 = a;
var G__23145 = b;
var G__23146 = c;
var G__23147 = d;
var G__23148 = e;
var G__23149 = f;
var G__23150 = g;
var G__23151 = h;
var G__23152 = i;
var G__23153 = j;
var G__23154 = k;
var G__23155 = l;
var G__23156 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156) : target_fn.call(null,G__23144,G__23145,G__23146,G__23147,G__23148,G__23149,G__23150,G__23151,G__23152,G__23153,G__23154,G__23155,G__23156));
});
var G__23815__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23157 = a;
var G__23158 = b;
var G__23159 = c;
var G__23160 = d;
var G__23161 = e;
var G__23162 = f;
var G__23163 = g;
var G__23164 = h;
var G__23165 = i;
var G__23166 = j;
var G__23167 = k;
var G__23168 = l;
var G__23169 = m;
var G__23170 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170) : self__.dispatch_fn.call(null,G__23157,G__23158,G__23159,G__23160,G__23161,G__23162,G__23163,G__23164,G__23165,G__23166,G__23167,G__23168,G__23169,G__23170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23171 = a;
var G__23172 = b;
var G__23173 = c;
var G__23174 = d;
var G__23175 = e;
var G__23176 = f;
var G__23177 = g;
var G__23178 = h;
var G__23179 = i;
var G__23180 = j;
var G__23181 = k;
var G__23182 = l;
var G__23183 = m;
var G__23184 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184) : target_fn.call(null,G__23171,G__23172,G__23173,G__23174,G__23175,G__23176,G__23177,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183,G__23184));
});
var G__23815__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23185 = a;
var G__23186 = b;
var G__23187 = c;
var G__23188 = d;
var G__23189 = e;
var G__23190 = f;
var G__23191 = g;
var G__23192 = h;
var G__23193 = i;
var G__23194 = j;
var G__23195 = k;
var G__23196 = l;
var G__23197 = m;
var G__23198 = n;
var G__23199 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199) : self__.dispatch_fn.call(null,G__23185,G__23186,G__23187,G__23188,G__23189,G__23190,G__23191,G__23192,G__23193,G__23194,G__23195,G__23196,G__23197,G__23198,G__23199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23200 = a;
var G__23201 = b;
var G__23202 = c;
var G__23203 = d;
var G__23204 = e;
var G__23205 = f;
var G__23206 = g;
var G__23207 = h;
var G__23208 = i;
var G__23209 = j;
var G__23210 = k;
var G__23211 = l;
var G__23212 = m;
var G__23213 = n;
var G__23214 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214) : target_fn.call(null,G__23200,G__23201,G__23202,G__23203,G__23204,G__23205,G__23206,G__23207,G__23208,G__23209,G__23210,G__23211,G__23212,G__23213,G__23214));
});
var G__23815__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23215 = a;
var G__23216 = b;
var G__23217 = c;
var G__23218 = d;
var G__23219 = e;
var G__23220 = f;
var G__23221 = g;
var G__23222 = h;
var G__23223 = i;
var G__23224 = j;
var G__23225 = k;
var G__23226 = l;
var G__23227 = m;
var G__23228 = n;
var G__23229 = o;
var G__23230 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230) : self__.dispatch_fn.call(null,G__23215,G__23216,G__23217,G__23218,G__23219,G__23220,G__23221,G__23222,G__23223,G__23224,G__23225,G__23226,G__23227,G__23228,G__23229,G__23230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23231 = a;
var G__23232 = b;
var G__23233 = c;
var G__23234 = d;
var G__23235 = e;
var G__23236 = f;
var G__23237 = g;
var G__23238 = h;
var G__23239 = i;
var G__23240 = j;
var G__23241 = k;
var G__23242 = l;
var G__23243 = m;
var G__23244 = n;
var G__23245 = o;
var G__23246 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246) : target_fn.call(null,G__23231,G__23232,G__23233,G__23234,G__23235,G__23236,G__23237,G__23238,G__23239,G__23240,G__23241,G__23242,G__23243,G__23244,G__23245,G__23246));
});
var G__23815__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23247 = a;
var G__23248 = b;
var G__23249 = c;
var G__23250 = d;
var G__23251 = e;
var G__23252 = f;
var G__23253 = g;
var G__23254 = h;
var G__23255 = i;
var G__23256 = j;
var G__23257 = k;
var G__23258 = l;
var G__23259 = m;
var G__23260 = n;
var G__23261 = o;
var G__23262 = p;
var G__23263 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23247,G__23248,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263) : self__.dispatch_fn.call(null,G__23247,G__23248,G__23249,G__23250,G__23251,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257,G__23258,G__23259,G__23260,G__23261,G__23262,G__23263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23264 = a;
var G__23265 = b;
var G__23266 = c;
var G__23267 = d;
var G__23268 = e;
var G__23269 = f;
var G__23270 = g;
var G__23271 = h;
var G__23272 = i;
var G__23273 = j;
var G__23274 = k;
var G__23275 = l;
var G__23276 = m;
var G__23277 = n;
var G__23278 = o;
var G__23279 = p;
var G__23280 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280) : target_fn.call(null,G__23264,G__23265,G__23266,G__23267,G__23268,G__23269,G__23270,G__23271,G__23272,G__23273,G__23274,G__23275,G__23276,G__23277,G__23278,G__23279,G__23280));
});
var G__23815__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23281 = a;
var G__23282 = b;
var G__23283 = c;
var G__23284 = d;
var G__23285 = e;
var G__23286 = f;
var G__23287 = g;
var G__23288 = h;
var G__23289 = i;
var G__23290 = j;
var G__23291 = k;
var G__23292 = l;
var G__23293 = m;
var G__23294 = n;
var G__23295 = o;
var G__23296 = p;
var G__23297 = q;
var G__23298 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296,G__23297,G__23298) : self__.dispatch_fn.call(null,G__23281,G__23282,G__23283,G__23284,G__23285,G__23286,G__23287,G__23288,G__23289,G__23290,G__23291,G__23292,G__23293,G__23294,G__23295,G__23296,G__23297,G__23298));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23299 = a;
var G__23300 = b;
var G__23301 = c;
var G__23302 = d;
var G__23303 = e;
var G__23304 = f;
var G__23305 = g;
var G__23306 = h;
var G__23307 = i;
var G__23308 = j;
var G__23309 = k;
var G__23310 = l;
var G__23311 = m;
var G__23312 = n;
var G__23313 = o;
var G__23314 = p;
var G__23315 = q;
var G__23316 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315,G__23316) : target_fn.call(null,G__23299,G__23300,G__23301,G__23302,G__23303,G__23304,G__23305,G__23306,G__23307,G__23308,G__23309,G__23310,G__23311,G__23312,G__23313,G__23314,G__23315,G__23316));
});
var G__23815__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23317 = a;
var G__23318 = b;
var G__23319 = c;
var G__23320 = d;
var G__23321 = e;
var G__23322 = f;
var G__23323 = g;
var G__23324 = h;
var G__23325 = i;
var G__23326 = j;
var G__23327 = k;
var G__23328 = l;
var G__23329 = m;
var G__23330 = n;
var G__23331 = o;
var G__23332 = p;
var G__23333 = q;
var G__23334 = r;
var G__23335 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335) : self__.dispatch_fn.call(null,G__23317,G__23318,G__23319,G__23320,G__23321,G__23322,G__23323,G__23324,G__23325,G__23326,G__23327,G__23328,G__23329,G__23330,G__23331,G__23332,G__23333,G__23334,G__23335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23336 = a;
var G__23337 = b;
var G__23338 = c;
var G__23339 = d;
var G__23340 = e;
var G__23341 = f;
var G__23342 = g;
var G__23343 = h;
var G__23344 = i;
var G__23345 = j;
var G__23346 = k;
var G__23347 = l;
var G__23348 = m;
var G__23349 = n;
var G__23350 = o;
var G__23351 = p;
var G__23352 = q;
var G__23353 = r;
var G__23354 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354) : target_fn.call(null,G__23336,G__23337,G__23338,G__23339,G__23340,G__23341,G__23342,G__23343,G__23344,G__23345,G__23346,G__23347,G__23348,G__23349,G__23350,G__23351,G__23352,G__23353,G__23354));
});
var G__23815__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23355 = a;
var G__23356 = b;
var G__23357 = c;
var G__23358 = d;
var G__23359 = e;
var G__23360 = f;
var G__23361 = g;
var G__23362 = h;
var G__23363 = i;
var G__23364 = j;
var G__23365 = k;
var G__23366 = l;
var G__23367 = m;
var G__23368 = n;
var G__23369 = o;
var G__23370 = p;
var G__23371 = q;
var G__23372 = r;
var G__23373 = s;
var G__23374 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23355,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374) : self__.dispatch_fn.call(null,G__23355,G__23356,G__23357,G__23358,G__23359,G__23360,G__23361,G__23362,G__23363,G__23364,G__23365,G__23366,G__23367,G__23368,G__23369,G__23370,G__23371,G__23372,G__23373,G__23374));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23375 = a;
var G__23376 = b;
var G__23377 = c;
var G__23378 = d;
var G__23379 = e;
var G__23380 = f;
var G__23381 = g;
var G__23382 = h;
var G__23383 = i;
var G__23384 = j;
var G__23385 = k;
var G__23386 = l;
var G__23387 = m;
var G__23388 = n;
var G__23389 = o;
var G__23390 = p;
var G__23391 = q;
var G__23392 = r;
var G__23393 = s;
var G__23394 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394) : target_fn.call(null,G__23375,G__23376,G__23377,G__23378,G__23379,G__23380,G__23381,G__23382,G__23383,G__23384,G__23385,G__23386,G__23387,G__23388,G__23389,G__23390,G__23391,G__23392,G__23393,G__23394));
});
var G__23815__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__23815 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__23815__1.call(this,self__);
case 2:
return G__23815__2.call(this,self__,a);
case 3:
return G__23815__3.call(this,self__,a,b);
case 4:
return G__23815__4.call(this,self__,a,b,c);
case 5:
return G__23815__5.call(this,self__,a,b,c,d);
case 6:
return G__23815__6.call(this,self__,a,b,c,d,e);
case 7:
return G__23815__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__23815__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__23815__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__23815__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__23815__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__23815__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__23815__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__23815__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__23815__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__23815__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__23815__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__23815__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__23815__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__23815__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__23815__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__23815__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23815.cljs$core$IFn$_invoke$arity$1 = G__23815__1;
G__23815.cljs$core$IFn$_invoke$arity$2 = G__23815__2;
G__23815.cljs$core$IFn$_invoke$arity$3 = G__23815__3;
G__23815.cljs$core$IFn$_invoke$arity$4 = G__23815__4;
G__23815.cljs$core$IFn$_invoke$arity$5 = G__23815__5;
G__23815.cljs$core$IFn$_invoke$arity$6 = G__23815__6;
G__23815.cljs$core$IFn$_invoke$arity$7 = G__23815__7;
G__23815.cljs$core$IFn$_invoke$arity$8 = G__23815__8;
G__23815.cljs$core$IFn$_invoke$arity$9 = G__23815__9;
G__23815.cljs$core$IFn$_invoke$arity$10 = G__23815__10;
G__23815.cljs$core$IFn$_invoke$arity$11 = G__23815__11;
G__23815.cljs$core$IFn$_invoke$arity$12 = G__23815__12;
G__23815.cljs$core$IFn$_invoke$arity$13 = G__23815__13;
G__23815.cljs$core$IFn$_invoke$arity$14 = G__23815__14;
G__23815.cljs$core$IFn$_invoke$arity$15 = G__23815__15;
G__23815.cljs$core$IFn$_invoke$arity$16 = G__23815__16;
G__23815.cljs$core$IFn$_invoke$arity$17 = G__23815__17;
G__23815.cljs$core$IFn$_invoke$arity$18 = G__23815__18;
G__23815.cljs$core$IFn$_invoke$arity$19 = G__23815__19;
G__23815.cljs$core$IFn$_invoke$arity$20 = G__23815__20;
G__23815.cljs$core$IFn$_invoke$arity$21 = G__23815__21;
G__23815.cljs$core$IFn$_invoke$arity$22 = G__23815__22;
return G__23815;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args22967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22967)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23395 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23395) : self__.dispatch_fn.call(null,G__23395));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23396 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23396) : target_fn.call(null,G__23396));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23397 = a;
var G__23398 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23397,G__23398) : self__.dispatch_fn.call(null,G__23397,G__23398));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23399 = a;
var G__23400 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23399,G__23400) : target_fn.call(null,G__23399,G__23400));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23401 = a;
var G__23402 = b;
var G__23403 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23401,G__23402,G__23403) : self__.dispatch_fn.call(null,G__23401,G__23402,G__23403));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23404 = a;
var G__23405 = b;
var G__23406 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23404,G__23405,G__23406) : target_fn.call(null,G__23404,G__23405,G__23406));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23407 = a;
var G__23408 = b;
var G__23409 = c;
var G__23410 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23407,G__23408,G__23409,G__23410) : self__.dispatch_fn.call(null,G__23407,G__23408,G__23409,G__23410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23411 = a;
var G__23412 = b;
var G__23413 = c;
var G__23414 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23411,G__23412,G__23413,G__23414) : target_fn.call(null,G__23411,G__23412,G__23413,G__23414));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23415 = a;
var G__23416 = b;
var G__23417 = c;
var G__23418 = d;
var G__23419 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23415,G__23416,G__23417,G__23418,G__23419) : self__.dispatch_fn.call(null,G__23415,G__23416,G__23417,G__23418,G__23419));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23420 = a;
var G__23421 = b;
var G__23422 = c;
var G__23423 = d;
var G__23424 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23420,G__23421,G__23422,G__23423,G__23424) : target_fn.call(null,G__23420,G__23421,G__23422,G__23423,G__23424));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23425 = a;
var G__23426 = b;
var G__23427 = c;
var G__23428 = d;
var G__23429 = e;
var G__23430 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23425,G__23426,G__23427,G__23428,G__23429,G__23430) : self__.dispatch_fn.call(null,G__23425,G__23426,G__23427,G__23428,G__23429,G__23430));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23431 = a;
var G__23432 = b;
var G__23433 = c;
var G__23434 = d;
var G__23435 = e;
var G__23436 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23431,G__23432,G__23433,G__23434,G__23435,G__23436) : target_fn.call(null,G__23431,G__23432,G__23433,G__23434,G__23435,G__23436));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23437 = a;
var G__23438 = b;
var G__23439 = c;
var G__23440 = d;
var G__23441 = e;
var G__23442 = f;
var G__23443 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443) : self__.dispatch_fn.call(null,G__23437,G__23438,G__23439,G__23440,G__23441,G__23442,G__23443));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23444 = a;
var G__23445 = b;
var G__23446 = c;
var G__23447 = d;
var G__23448 = e;
var G__23449 = f;
var G__23450 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23444,G__23445,G__23446,G__23447,G__23448,G__23449,G__23450) : target_fn.call(null,G__23444,G__23445,G__23446,G__23447,G__23448,G__23449,G__23450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23451 = a;
var G__23452 = b;
var G__23453 = c;
var G__23454 = d;
var G__23455 = e;
var G__23456 = f;
var G__23457 = g;
var G__23458 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457,G__23458) : self__.dispatch_fn.call(null,G__23451,G__23452,G__23453,G__23454,G__23455,G__23456,G__23457,G__23458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23459 = a;
var G__23460 = b;
var G__23461 = c;
var G__23462 = d;
var G__23463 = e;
var G__23464 = f;
var G__23465 = g;
var G__23466 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466) : target_fn.call(null,G__23459,G__23460,G__23461,G__23462,G__23463,G__23464,G__23465,G__23466));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23467 = a;
var G__23468 = b;
var G__23469 = c;
var G__23470 = d;
var G__23471 = e;
var G__23472 = f;
var G__23473 = g;
var G__23474 = h;
var G__23475 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23467,G__23468,G__23469,G__23470,G__23471,G__23472,G__23473,G__23474,G__23475) : self__.dispatch_fn.call(null,G__23467,G__23468,G__23469,G__23470,G__23471,G__23472,G__23473,G__23474,G__23475));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23476 = a;
var G__23477 = b;
var G__23478 = c;
var G__23479 = d;
var G__23480 = e;
var G__23481 = f;
var G__23482 = g;
var G__23483 = h;
var G__23484 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484) : target_fn.call(null,G__23476,G__23477,G__23478,G__23479,G__23480,G__23481,G__23482,G__23483,G__23484));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23485 = a;
var G__23486 = b;
var G__23487 = c;
var G__23488 = d;
var G__23489 = e;
var G__23490 = f;
var G__23491 = g;
var G__23492 = h;
var G__23493 = i;
var G__23494 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23485,G__23486,G__23487,G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494) : self__.dispatch_fn.call(null,G__23485,G__23486,G__23487,G__23488,G__23489,G__23490,G__23491,G__23492,G__23493,G__23494));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23495 = a;
var G__23496 = b;
var G__23497 = c;
var G__23498 = d;
var G__23499 = e;
var G__23500 = f;
var G__23501 = g;
var G__23502 = h;
var G__23503 = i;
var G__23504 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23495,G__23496,G__23497,G__23498,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504) : target_fn.call(null,G__23495,G__23496,G__23497,G__23498,G__23499,G__23500,G__23501,G__23502,G__23503,G__23504));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23505 = a;
var G__23506 = b;
var G__23507 = c;
var G__23508 = d;
var G__23509 = e;
var G__23510 = f;
var G__23511 = g;
var G__23512 = h;
var G__23513 = i;
var G__23514 = j;
var G__23515 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515) : self__.dispatch_fn.call(null,G__23505,G__23506,G__23507,G__23508,G__23509,G__23510,G__23511,G__23512,G__23513,G__23514,G__23515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23516 = a;
var G__23517 = b;
var G__23518 = c;
var G__23519 = d;
var G__23520 = e;
var G__23521 = f;
var G__23522 = g;
var G__23523 = h;
var G__23524 = i;
var G__23525 = j;
var G__23526 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23516,G__23517,G__23518,G__23519,G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526) : target_fn.call(null,G__23516,G__23517,G__23518,G__23519,G__23520,G__23521,G__23522,G__23523,G__23524,G__23525,G__23526));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23527 = a;
var G__23528 = b;
var G__23529 = c;
var G__23530 = d;
var G__23531 = e;
var G__23532 = f;
var G__23533 = g;
var G__23534 = h;
var G__23535 = i;
var G__23536 = j;
var G__23537 = k;
var G__23538 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23527,G__23528,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538) : self__.dispatch_fn.call(null,G__23527,G__23528,G__23529,G__23530,G__23531,G__23532,G__23533,G__23534,G__23535,G__23536,G__23537,G__23538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23539 = a;
var G__23540 = b;
var G__23541 = c;
var G__23542 = d;
var G__23543 = e;
var G__23544 = f;
var G__23545 = g;
var G__23546 = h;
var G__23547 = i;
var G__23548 = j;
var G__23549 = k;
var G__23550 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23539,G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550) : target_fn.call(null,G__23539,G__23540,G__23541,G__23542,G__23543,G__23544,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23551 = a;
var G__23552 = b;
var G__23553 = c;
var G__23554 = d;
var G__23555 = e;
var G__23556 = f;
var G__23557 = g;
var G__23558 = h;
var G__23559 = i;
var G__23560 = j;
var G__23561 = k;
var G__23562 = l;
var G__23563 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563) : self__.dispatch_fn.call(null,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23564 = a;
var G__23565 = b;
var G__23566 = c;
var G__23567 = d;
var G__23568 = e;
var G__23569 = f;
var G__23570 = g;
var G__23571 = h;
var G__23572 = i;
var G__23573 = j;
var G__23574 = k;
var G__23575 = l;
var G__23576 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576) : target_fn.call(null,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23577 = a;
var G__23578 = b;
var G__23579 = c;
var G__23580 = d;
var G__23581 = e;
var G__23582 = f;
var G__23583 = g;
var G__23584 = h;
var G__23585 = i;
var G__23586 = j;
var G__23587 = k;
var G__23588 = l;
var G__23589 = m;
var G__23590 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590) : self__.dispatch_fn.call(null,G__23577,G__23578,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586,G__23587,G__23588,G__23589,G__23590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23591 = a;
var G__23592 = b;
var G__23593 = c;
var G__23594 = d;
var G__23595 = e;
var G__23596 = f;
var G__23597 = g;
var G__23598 = h;
var G__23599 = i;
var G__23600 = j;
var G__23601 = k;
var G__23602 = l;
var G__23603 = m;
var G__23604 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604) : target_fn.call(null,G__23591,G__23592,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23605 = a;
var G__23606 = b;
var G__23607 = c;
var G__23608 = d;
var G__23609 = e;
var G__23610 = f;
var G__23611 = g;
var G__23612 = h;
var G__23613 = i;
var G__23614 = j;
var G__23615 = k;
var G__23616 = l;
var G__23617 = m;
var G__23618 = n;
var G__23619 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619) : self__.dispatch_fn.call(null,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614,G__23615,G__23616,G__23617,G__23618,G__23619));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23620 = a;
var G__23621 = b;
var G__23622 = c;
var G__23623 = d;
var G__23624 = e;
var G__23625 = f;
var G__23626 = g;
var G__23627 = h;
var G__23628 = i;
var G__23629 = j;
var G__23630 = k;
var G__23631 = l;
var G__23632 = m;
var G__23633 = n;
var G__23634 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634) : target_fn.call(null,G__23620,G__23621,G__23622,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23635 = a;
var G__23636 = b;
var G__23637 = c;
var G__23638 = d;
var G__23639 = e;
var G__23640 = f;
var G__23641 = g;
var G__23642 = h;
var G__23643 = i;
var G__23644 = j;
var G__23645 = k;
var G__23646 = l;
var G__23647 = m;
var G__23648 = n;
var G__23649 = o;
var G__23650 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650) : self__.dispatch_fn.call(null,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23651 = a;
var G__23652 = b;
var G__23653 = c;
var G__23654 = d;
var G__23655 = e;
var G__23656 = f;
var G__23657 = g;
var G__23658 = h;
var G__23659 = i;
var G__23660 = j;
var G__23661 = k;
var G__23662 = l;
var G__23663 = m;
var G__23664 = n;
var G__23665 = o;
var G__23666 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666) : target_fn.call(null,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23667 = a;
var G__23668 = b;
var G__23669 = c;
var G__23670 = d;
var G__23671 = e;
var G__23672 = f;
var G__23673 = g;
var G__23674 = h;
var G__23675 = i;
var G__23676 = j;
var G__23677 = k;
var G__23678 = l;
var G__23679 = m;
var G__23680 = n;
var G__23681 = o;
var G__23682 = p;
var G__23683 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23667,G__23668,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683) : self__.dispatch_fn.call(null,G__23667,G__23668,G__23669,G__23670,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23684 = a;
var G__23685 = b;
var G__23686 = c;
var G__23687 = d;
var G__23688 = e;
var G__23689 = f;
var G__23690 = g;
var G__23691 = h;
var G__23692 = i;
var G__23693 = j;
var G__23694 = k;
var G__23695 = l;
var G__23696 = m;
var G__23697 = n;
var G__23698 = o;
var G__23699 = p;
var G__23700 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700) : target_fn.call(null,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23701 = a;
var G__23702 = b;
var G__23703 = c;
var G__23704 = d;
var G__23705 = e;
var G__23706 = f;
var G__23707 = g;
var G__23708 = h;
var G__23709 = i;
var G__23710 = j;
var G__23711 = k;
var G__23712 = l;
var G__23713 = m;
var G__23714 = n;
var G__23715 = o;
var G__23716 = p;
var G__23717 = q;
var G__23718 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718) : self__.dispatch_fn.call(null,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23719 = a;
var G__23720 = b;
var G__23721 = c;
var G__23722 = d;
var G__23723 = e;
var G__23724 = f;
var G__23725 = g;
var G__23726 = h;
var G__23727 = i;
var G__23728 = j;
var G__23729 = k;
var G__23730 = l;
var G__23731 = m;
var G__23732 = n;
var G__23733 = o;
var G__23734 = p;
var G__23735 = q;
var G__23736 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736) : target_fn.call(null,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23737 = a;
var G__23738 = b;
var G__23739 = c;
var G__23740 = d;
var G__23741 = e;
var G__23742 = f;
var G__23743 = g;
var G__23744 = h;
var G__23745 = i;
var G__23746 = j;
var G__23747 = k;
var G__23748 = l;
var G__23749 = m;
var G__23750 = n;
var G__23751 = o;
var G__23752 = p;
var G__23753 = q;
var G__23754 = r;
var G__23755 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755) : self__.dispatch_fn.call(null,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23756 = a;
var G__23757 = b;
var G__23758 = c;
var G__23759 = d;
var G__23760 = e;
var G__23761 = f;
var G__23762 = g;
var G__23763 = h;
var G__23764 = i;
var G__23765 = j;
var G__23766 = k;
var G__23767 = l;
var G__23768 = m;
var G__23769 = n;
var G__23770 = o;
var G__23771 = p;
var G__23772 = q;
var G__23773 = r;
var G__23774 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774) : target_fn.call(null,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23775 = a;
var G__23776 = b;
var G__23777 = c;
var G__23778 = d;
var G__23779 = e;
var G__23780 = f;
var G__23781 = g;
var G__23782 = h;
var G__23783 = i;
var G__23784 = j;
var G__23785 = k;
var G__23786 = l;
var G__23787 = m;
var G__23788 = n;
var G__23789 = o;
var G__23790 = p;
var G__23791 = q;
var G__23792 = r;
var G__23793 = s;
var G__23794 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794) : self__.dispatch_fn.call(null,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23795 = a;
var G__23796 = b;
var G__23797 = c;
var G__23798 = d;
var G__23799 = e;
var G__23800 = f;
var G__23801 = g;
var G__23802 = h;
var G__23803 = i;
var G__23804 = j;
var G__23805 = k;
var G__23806 = l;
var G__23807 = m;
var G__23808 = n;
var G__23809 = o;
var G__23810 = p;
var G__23811 = q;
var G__23812 = r;
var G__23813 = s;
var G__23814 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814) : target_fn.call(null,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23816 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__23816);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13196__auto__,writer__13197__auto__,opt__13198__auto__){
return cljs.core._write(writer__13197__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__23821 = x;
var G__23822 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23821,G__23822) : pred.call(null,G__23821,G__23822));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__23823 = y;
var G__23824 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__23823,G__23824) : pred.call(null,G__23823,G__23824));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
