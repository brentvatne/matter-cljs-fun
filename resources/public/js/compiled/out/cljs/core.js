// Compiled by ClojureScript 0.0-2665 {:static-fns true}
if(!goog.isProvided_('cljs.core')) {
goog.provide('cljs.core');
}
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__18358__delegate = function (args){
return console.log.apply(console,(function (){var G__18357 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__18357) : cljs.core.into_array.call(null,G__18357));
})());
};
var G__18358 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18359__i = 0, G__18359__a = new Array(arguments.length -  0);
while (G__18359__i < G__18359__a.length) {G__18359__a[G__18359__i] = arguments[G__18359__i + 0]; ++G__18359__i;}
  args = new cljs.core.IndexedSeq(G__18359__a,0);
} 
return G__18358__delegate.call(this,args);};
G__18358.cljs$lang$maxFixedArity = 0;
G__18358.cljs$lang$applyTo = (function (arglist__18360){
var args = cljs.core.seq(arglist__18360);
return G__18358__delegate(args);
});
G__18358.cljs$core$IFn$_invoke$arity$variadic = G__18358__delegate;
return G__18358;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__18362 = x;
return goog.isString(G__18362);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__18364 = x__$1;
return goog.typeOf(G__18364);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12175__auto__ = ty;
if(cljs.core.truth_(and__12175__auto__)){
return ty.cljs$lang$type;
} else {
return and__12175__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__18366 = obj;
return goog.typeOf(G__18366);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__18368 = Symbol;
return goog.typeOf(G__18368);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13074__auto___18370 = len;
var i_18371 = (0);
while(true){
if((i_18371 < n__13074__auto___18370)){
(new_arr[i_18371] = (arr[i_18371]));

var G__18372 = (i_18371 + (1));
i_18371 = G__18372;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__18373 = (i + (1));
i = G__18373;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__18382__delegate = function (array,i,idxs){
var G__18379 = aget;
var G__18380 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__18381 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18379,G__18380,G__18381) : cljs.core.apply.call(null,G__18379,G__18380,G__18381));
};
var G__18382 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__18383__i = 0, G__18383__a = new Array(arguments.length -  2);
while (G__18383__i < G__18383__a.length) {G__18383__a[G__18383__i] = arguments[G__18383__i + 2]; ++G__18383__i;}
  idxs = new cljs.core.IndexedSeq(G__18383__a,0);
} 
return G__18382__delegate.call(this,array,i,idxs);};
G__18382.cljs$lang$maxFixedArity = 2;
G__18382.cljs$lang$applyTo = (function (arglist__18384){
var array = cljs.core.first(arglist__18384);
arglist__18384 = cljs.core.next(arglist__18384);
var i = cljs.core.first(arglist__18384);
var idxs = cljs.core.rest(arglist__18384);
return G__18382__delegate(array,i,idxs);
});
G__18382.cljs$core$IFn$_invoke$arity$variadic = G__18382__delegate;
return G__18382;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__18385 = null;
if (arguments.length > 2) {
var G__18386__i = 0, G__18386__a = new Array(arguments.length -  2);
while (G__18386__i < G__18386__a.length) {G__18386__a[G__18386__i] = arguments[G__18386__i + 2]; ++G__18386__i;}
G__18385 = new cljs.core.IndexedSeq(G__18386__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__18385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__18395__delegate = function (array,idx,idx2,idxv){
var G__18391 = aset;
var G__18392 = (array[idx]);
var G__18393 = idx2;
var G__18394 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18391,G__18392,G__18393,G__18394) : cljs.core.apply.call(null,G__18391,G__18392,G__18393,G__18394));
};
var G__18395 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__18396__i = 0, G__18396__a = new Array(arguments.length -  3);
while (G__18396__i < G__18396__a.length) {G__18396__a[G__18396__i] = arguments[G__18396__i + 3]; ++G__18396__i;}
  idxv = new cljs.core.IndexedSeq(G__18396__a,0);
} 
return G__18395__delegate.call(this,array,idx,idx2,idxv);};
G__18395.cljs$lang$maxFixedArity = 3;
G__18395.cljs$lang$applyTo = (function (arglist__18397){
var array = cljs.core.first(arglist__18397);
arglist__18397 = cljs.core.next(arglist__18397);
var idx = cljs.core.first(arglist__18397);
arglist__18397 = cljs.core.next(arglist__18397);
var idx2 = cljs.core.first(arglist__18397);
var idxv = cljs.core.rest(arglist__18397);
return G__18395__delegate(array,idx,idx2,idxv);
});
G__18395.cljs$core$IFn$_invoke$arity$variadic = G__18395__delegate;
return G__18395;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__18398 = null;
if (arguments.length > 3) {
var G__18399__i = 0, G__18399__a = new Array(arguments.length -  3);
while (G__18399__i < G__18399__a.length) {G__18399__a[G__18399__i] = arguments[G__18399__i + 3]; ++G__18399__i;}
G__18398 = new cljs.core.IndexedSeq(G__18399__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__18398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__18405 = (function (a,x){
a.push(x);

return a;
});
var G__18406 = [];
var G__18407 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18405,G__18406,G__18407) : cljs.core.reduce.call(null,G__18405,G__18406,G__18407));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__18408__i = 0, G__18408__a = new Array(arguments.length -  2);
while (G__18408__i < G__18408__a.length) {G__18408__a[G__18408__i] = arguments[G__18408__i + 2]; ++G__18408__i;}
  args = new cljs.core.IndexedSeq(G__18408__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__18409){
var obj = cljs.core.first(arglist__18409);
arglist__18409 = cljs.core.next(arglist__18409);
var s = cljs.core.first(arglist__18409);
var args = cljs.core.rest(arglist__18409);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj18411 = {};
return obj18411;
})();


cljs.core.IFn = (function (){var obj18413 = {};
return obj18413;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18459 = x__12831__auto__;
return goog.typeOf(G__18459);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18461 = x__12831__auto__;
return goog.typeOf(G__18461);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18463 = x__12831__auto__;
return goog.typeOf(G__18463);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18465 = x__12831__auto__;
return goog.typeOf(G__18465);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18467 = x__12831__auto__;
return goog.typeOf(G__18467);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18469 = x__12831__auto__;
return goog.typeOf(G__18469);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18471 = x__12831__auto__;
return goog.typeOf(G__18471);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18473 = x__12831__auto__;
return goog.typeOf(G__18473);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18475 = x__12831__auto__;
return goog.typeOf(G__18475);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18477 = x__12831__auto__;
return goog.typeOf(G__18477);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18479 = x__12831__auto__;
return goog.typeOf(G__18479);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18481 = x__12831__auto__;
return goog.typeOf(G__18481);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18483 = x__12831__auto__;
return goog.typeOf(G__18483);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18485 = x__12831__auto__;
return goog.typeOf(G__18485);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18487 = x__12831__auto__;
return goog.typeOf(G__18487);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18489 = x__12831__auto__;
return goog.typeOf(G__18489);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18491 = x__12831__auto__;
return goog.typeOf(G__18491);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18493 = x__12831__auto__;
return goog.typeOf(G__18493);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18495 = x__12831__auto__;
return goog.typeOf(G__18495);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18497 = x__12831__auto__;
return goog.typeOf(G__18497);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18499 = x__12831__auto__;
return goog.typeOf(G__18499);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._invoke[(function (){var G__18501 = x__12831__auto__;
return goog.typeOf(G__18501);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._invoke["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj18503 = {};
return obj18503;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12175__auto__ = value;
if(and__12175__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12175__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__12831__auto__ = (((value == null))?null:value);
return (function (){var or__12187__auto__ = (cljs.core._clone[(function (){var G__18507 = x__12831__auto__;
return goog.typeOf(G__18507);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._clone["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj18509 = {};
return obj18509;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._count[(function (){var G__18513 = x__12831__auto__;
return goog.typeOf(G__18513);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._count["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj18515 = {};
return obj18515;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._empty[(function (){var G__18519 = x__12831__auto__;
return goog.typeOf(G__18519);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._empty["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj18521 = {};
return obj18521;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._conj[(function (){var G__18525 = x__12831__auto__;
return goog.typeOf(G__18525);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._conj["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj18527 = {};
return obj18527;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._nth[(function (){var G__18533 = x__12831__auto__;
return goog.typeOf(G__18533);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._nth["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._nth[(function (){var G__18535 = x__12831__auto__;
return goog.typeOf(G__18535);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._nth["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj18537 = {};
return obj18537;
})();


cljs.core.ISeq = (function (){var obj18539 = {};
return obj18539;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._first[(function (){var G__18543 = x__12831__auto__;
return goog.typeOf(G__18543);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._first["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._rest[(function (){var G__18547 = x__12831__auto__;
return goog.typeOf(G__18547);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._rest["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj18549 = {};
return obj18549;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._next[(function (){var G__18553 = x__12831__auto__;
return goog.typeOf(G__18553);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._next["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18555 = {};
return obj18555;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._lookup[(function (){var G__18561 = x__12831__auto__;
return goog.typeOf(G__18561);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._lookup["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._lookup[(function (){var G__18563 = x__12831__auto__;
return goog.typeOf(G__18563);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._lookup["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18565 = {};
return obj18565;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18569 = x__12831__auto__;
return goog.typeOf(G__18569);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._assoc[(function (){var G__18573 = x__12831__auto__;
return goog.typeOf(G__18573);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._assoc["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18575 = {};
return obj18575;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._dissoc[(function (){var G__18579 = x__12831__auto__;
return goog.typeOf(G__18579);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18581 = {};
return obj18581;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._key[(function (){var G__18585 = x__12831__auto__;
return goog.typeOf(G__18585);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._key["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._val[(function (){var G__18589 = x__12831__auto__;
return goog.typeOf(G__18589);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._val["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18591 = {};
return obj18591;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._disjoin[(function (){var G__18595 = x__12831__auto__;
return goog.typeOf(G__18595);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18597 = {};
return obj18597;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._peek[(function (){var G__18601 = x__12831__auto__;
return goog.typeOf(G__18601);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._peek["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._pop[(function (){var G__18605 = x__12831__auto__;
return goog.typeOf(G__18605);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._pop["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj18607 = {};
return obj18607;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._assoc_n[(function (){var G__18611 = x__12831__auto__;
return goog.typeOf(G__18611);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj18613 = {};
return obj18613;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._deref[(function (){var G__18617 = x__12831__auto__;
return goog.typeOf(G__18617);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._deref["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj18619 = {};
return obj18619;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._deref_with_timeout[(function (){var G__18623 = x__12831__auto__;
return goog.typeOf(G__18623);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj18625 = {};
return obj18625;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._meta[(function (){var G__18629 = x__12831__auto__;
return goog.typeOf(G__18629);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._meta["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj18631 = {};
return obj18631;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._with_meta[(function (){var G__18635 = x__12831__auto__;
return goog.typeOf(G__18635);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj18637 = {};
return obj18637;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._reduce[(function (){var G__18643 = x__12831__auto__;
return goog.typeOf(G__18643);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._reduce["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._reduce[(function (){var G__18645 = x__12831__auto__;
return goog.typeOf(G__18645);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._reduce["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj18647 = {};
return obj18647;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._kv_reduce[(function (){var G__18651 = x__12831__auto__;
return goog.typeOf(G__18651);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj18653 = {};
return obj18653;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._equiv[(function (){var G__18657 = x__12831__auto__;
return goog.typeOf(G__18657);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._equiv["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj18659 = {};
return obj18659;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._hash[(function (){var G__18663 = x__12831__auto__;
return goog.typeOf(G__18663);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._hash["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj18665 = {};
return obj18665;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._seq[(function (){var G__18669 = x__12831__auto__;
return goog.typeOf(G__18669);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._seq["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj18671 = {};
return obj18671;
})();


cljs.core.IList = (function (){var obj18673 = {};
return obj18673;
})();


cljs.core.IRecord = (function (){var obj18675 = {};
return obj18675;
})();


cljs.core.IReversible = (function (){var obj18677 = {};
return obj18677;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._rseq[(function (){var G__18681 = x__12831__auto__;
return goog.typeOf(G__18681);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._rseq["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj18683 = {};
return obj18683;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._sorted_seq[(function (){var G__18687 = x__12831__auto__;
return goog.typeOf(G__18687);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._sorted_seq_from[(function (){var G__18691 = x__12831__auto__;
return goog.typeOf(G__18691);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._entry_key[(function (){var G__18695 = x__12831__auto__;
return goog.typeOf(G__18695);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._comparator[(function (){var G__18699 = x__12831__auto__;
return goog.typeOf(G__18699);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._comparator["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj18701 = {};
return obj18701;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12175__auto__ = writer;
if(and__12175__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12175__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__12831__auto__ = (((writer == null))?null:writer);
return (function (){var or__12187__auto__ = (cljs.core._write[(function (){var G__18705 = x__12831__auto__;
return goog.typeOf(G__18705);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._write["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12175__auto__ = writer;
if(and__12175__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12175__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__12831__auto__ = (((writer == null))?null:writer);
return (function (){var or__12187__auto__ = (cljs.core._flush[(function (){var G__18709 = x__12831__auto__;
return goog.typeOf(G__18709);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._flush["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj18711 = {};
return obj18711;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._pr_writer[(function (){var G__18715 = x__12831__auto__;
return goog.typeOf(G__18715);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj18717 = {};
return obj18717;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12175__auto__ = d;
if(and__12175__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12175__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__12831__auto__ = (((d == null))?null:d);
return (function (){var or__12187__auto__ = (cljs.core._realized_QMARK_[(function (){var G__18721 = x__12831__auto__;
return goog.typeOf(G__18721);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj18723 = {};
return obj18723;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._notify_watches[(function (){var G__18727 = x__12831__auto__;
return goog.typeOf(G__18727);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._add_watch[(function (){var G__18731 = x__12831__auto__;
return goog.typeOf(G__18731);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12175__auto__ = this$;
if(and__12175__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12175__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__12831__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12187__auto__ = (cljs.core._remove_watch[(function (){var G__18735 = x__12831__auto__;
return goog.typeOf(G__18735);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj18737 = {};
return obj18737;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._as_transient[(function (){var G__18741 = x__12831__auto__;
return goog.typeOf(G__18741);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj18743 = {};
return obj18743;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._conj_BANG_[(function (){var G__18747 = x__12831__auto__;
return goog.typeOf(G__18747);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18751 = x__12831__auto__;
return goog.typeOf(G__18751);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18753 = {};
return obj18753;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18757 = x__12831__auto__;
return goog.typeOf(G__18757);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18759 = {};
return obj18759;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18763 = x__12831__auto__;
return goog.typeOf(G__18763);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18765 = {};
return obj18765;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18769 = x__12831__auto__;
return goog.typeOf(G__18769);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._pop_BANG_[(function (){var G__18773 = x__12831__auto__;
return goog.typeOf(G__18773);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18775 = {};
return obj18775;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12175__auto__ = tcoll;
if(and__12175__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__12831__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12187__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18779 = x__12831__auto__;
return goog.typeOf(G__18779);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18781 = {};
return obj18781;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._compare[(function (){var G__18785 = x__12831__auto__;
return goog.typeOf(G__18785);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._compare["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18787 = {};
return obj18787;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._drop_first[(function (){var G__18791 = x__12831__auto__;
return goog.typeOf(G__18791);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18793 = {};
return obj18793;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._chunked_first[(function (){var G__18797 = x__12831__auto__;
return goog.typeOf(G__18797);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._chunked_rest[(function (){var G__18801 = x__12831__auto__;
return goog.typeOf(G__18801);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18803 = {};
return obj18803;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._chunked_next[(function (){var G__18807 = x__12831__auto__;
return goog.typeOf(G__18807);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18809 = {};
return obj18809;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._name[(function (){var G__18813 = x__12831__auto__;
return goog.typeOf(G__18813);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._name["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._namespace[(function (){var G__18817 = x__12831__auto__;
return goog.typeOf(G__18817);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._namespace["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18819 = {};
return obj18819;
})();


cljs.core.IReset = (function (){var obj18821 = {};
return obj18821;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._reset_BANG_[(function (){var G__18825 = x__12831__auto__;
return goog.typeOf(G__18825);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18827 = {};
return obj18827;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._swap_BANG_[(function (){var G__18837 = x__12831__auto__;
return goog.typeOf(G__18837);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._swap_BANG_[(function (){var G__18839 = x__12831__auto__;
return goog.typeOf(G__18839);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._swap_BANG_[(function (){var G__18841 = x__12831__auto__;
return goog.typeOf(G__18841);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._swap_BANG_[(function (){var G__18843 = x__12831__auto__;
return goog.typeOf(G__18843);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18845 = {};
return obj18845;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12175__auto__ = o;
if(and__12175__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12175__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__12831__auto__ = (((o == null))?null:o);
return (function (){var or__12187__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18849 = x__12831__auto__;
return goog.typeOf(G__18849);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18851 = {};
return obj18851;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12175__auto__ = coll;
if(and__12175__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12175__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__12831__auto__ = (((coll == null))?null:coll);
return (function (){var or__12187__auto__ = (cljs.core._iterator[(function (){var G__18855 = x__12831__auto__;
return goog.typeOf(G__18855);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._iterator["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18858 = (4294967295);
var G__18859 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18858,G__18859) : Math.imul.call(null,G__18858,G__18859));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18862 = a;
var G__18863 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18862,G__18863) : Math.imul.call(null,G__18862,G__18863));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18864 = (i + (2));
var G__18865 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18864;
h1 = G__18865;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18867 = {};
return obj18867;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18868 = (i + (1));
var G__18869 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18868;
hash = G__18869;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18873 = {};
return obj18873;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18876 = o;
if(G__18876){
var bit__12861__auto__ = (G__18876.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__12861__auto__) || (G__18876.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18877 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18877) : Math.floor.call(null,G__18877));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12175__auto__ = cljs.core.not(a.ns);
if(and__12175__auto__){
return b.ns;
} else {
return and__12175__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18884 = a.ns;
var G__18885 = b.ns;
return goog.array.defaultCompare(G__18884,G__18885);
})();
if(((0) === nsc)){
var G__18886 = a.name;
var G__18887 = b.name;
return goog.array.defaultCompare(G__18886,G__18887);
} else {
return nsc;
}
}
} else {
var G__18888 = a.name;
var G__18889 = b.name;
return goog.array.defaultCompare(G__18888,G__18889);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__12608__auto__ = self__._hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18891 = null;
var G__18891__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18891__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18891 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18891__2.call(this,self__,coll);
case 3:
return G__18891__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18891.cljs$core$IFn$_invoke$arity$2 = G__18891__2;
G__18891.cljs$core$IFn$_invoke$arity$3 = G__18891__3;
return G__18891;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18890){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18890)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18895 = x;
if(G__18895){
var bit__12868__auto__ = null;
if(cljs.core.truth_((function (){var or__12187__auto__ = bit__12868__auto__;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return G__18895.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18895.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18895);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18895);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18897 = value;
if(G__18897){
var bit__12868__auto__ = (G__18897.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__12868__auto__) || (G__18897.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18897.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18897);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18899 = coll;
if(G__18899){
var bit__12861__auto__ = (G__18899.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12861__auto__) || (G__18899.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18901 = coll;
if(G__18901){
var bit__12861__auto__ = (G__18901.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12861__auto__) || (G__18901.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18903 = coll;
if(G__18903){
var bit__12861__auto__ = (G__18903.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12861__auto__) || (G__18903.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18905 = coll;
if(G__18905){
var bit__12861__auto__ = (G__18905.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12861__auto__) || (G__18905.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18910__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18911 = y;
var G__18912 = cljs.core.first(more);
var G__18913 = cljs.core.next(more);
x = G__18911;
y = G__18912;
more = G__18913;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18910 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18914__i = 0, G__18914__a = new Array(arguments.length -  2);
while (G__18914__i < G__18914__a.length) {G__18914__a[G__18914__i] = arguments[G__18914__i + 2]; ++G__18914__i;}
  more = new cljs.core.IndexedSeq(G__18914__a,0);
} 
return G__18910__delegate.call(this,x,y,more);};
G__18910.cljs$lang$maxFixedArity = 2;
G__18910.cljs$lang$applyTo = (function (arglist__18915){
var x = cljs.core.first(arglist__18915);
arglist__18915 = cljs.core.next(arglist__18915);
var y = cljs.core.first(arglist__18915);
var more = cljs.core.rest(arglist__18915);
return G__18910__delegate(x,y,more);
});
G__18910.cljs$core$IFn$_invoke$arity$variadic = G__18910__delegate;
return G__18910;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18916 = null;
if (arguments.length > 2) {
var G__18917__i = 0, G__18917__a = new Array(arguments.length -  2);
while (G__18917__i < G__18917__a.length) {G__18917__a[G__18917__i] = arguments[G__18917__i + 2]; ++G__18917__i;}
G__18916 = new cljs.core.IndexedSeq(G__18917__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18916);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18918 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18918) : cljs.core.es6_iterator_seq.call(null,G__18918));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18919 = (n + (1));
var G__18920 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18921 = cljs.core.next(coll__$1);
n = G__18919;
hash_code = G__18920;
coll__$1 = G__18921;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18922 = (n + (1));
var G__18923 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18924 = cljs.core.next(coll__$1);
n = G__18922;
hash_code = G__18923;
coll__$1 = G__18924;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18925 = o;
return goog.getUid(G__18925);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18927 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18927) : cljs.core.deref.call(null,G__18927));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18934 = val;
var G__18935 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18934,G__18935) : f.call(null,G__18934,G__18935));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18940 = nval;
var G__18941 = (n + (1));
val = G__18940;
n = G__18941;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18936 = val__$1;
var G__18937 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18936,G__18937) : f.call(null,G__18936,G__18937));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18942 = nval;
var G__18943 = (n + (1));
val__$1 = G__18942;
n = G__18943;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18938 = val__$1;
var G__18939 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18938,G__18939) : f.call(null,G__18938,G__18939));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18944 = nval;
var G__18945 = (n + (1));
val__$1 = G__18944;
n = G__18945;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18952 = val;
var G__18953 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18952,G__18953) : f.call(null,G__18952,G__18953));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18958 = nval;
var G__18959 = (n + (1));
val = G__18958;
n = G__18959;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18954 = val__$1;
var G__18955 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18954,G__18955) : f.call(null,G__18954,G__18955));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18960 = nval;
var G__18961 = (n + (1));
val__$1 = G__18960;
n = G__18961;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18956 = val__$1;
var G__18957 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18956,G__18957) : f.call(null,G__18956,G__18957));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18962 = nval;
var G__18963 = (n + (1));
val__$1 = G__18962;
n = G__18963;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18965 = x;
if(G__18965){
var bit__12868__auto__ = (G__18965.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12868__auto__) || (G__18965.cljs$core$ICounted$)){
return true;
} else {
if((!G__18965.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18965);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18965);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18967 = x;
if(G__18967){
var bit__12868__auto__ = (G__18967.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12868__auto__) || (G__18967.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18967.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18967);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18967);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18968 = coll__$1;
var G__18969 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18968,G__18969) : cljs.core.equiv_sequential.call(null,G__18968,G__18969));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18970 = o;
var G__18971 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18970,G__18971) : cljs.core.cons.call(null,G__18970,G__18971));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18974 = coll__$1;
var G__18975 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18974,G__18975) : cljs.core.equiv_sequential.call(null,G__18974,G__18975));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18976 = cljs.core.List.EMPTY;
var G__18977 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18976,G__18977) : cljs.core.with_meta.call(null,G__18976,G__18977));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18978 = f;
var G__18979 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18978,G__18979) : cljs.core.seq_reduce.call(null,G__18978,G__18979));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18980 = f;
var G__18981 = start;
var G__18982 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18980,G__18981,G__18982) : cljs.core.seq_reduce.call(null,G__18980,G__18981,G__18982));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18983 = o;
var G__18984 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18983,G__18984) : cljs.core.cons.call(null,G__18983,G__18984));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18985 = sn;
s = G__18985;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18990__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18991 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18992 = cljs.core.first(xs);
var G__18993 = cljs.core.next(xs);
coll = G__18991;
x = G__18992;
xs = G__18993;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18990 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18994__i = 0, G__18994__a = new Array(arguments.length -  2);
while (G__18994__i < G__18994__a.length) {G__18994__a[G__18994__i] = arguments[G__18994__i + 2]; ++G__18994__i;}
  xs = new cljs.core.IndexedSeq(G__18994__a,0);
} 
return G__18990__delegate.call(this,coll,x,xs);};
G__18990.cljs$lang$maxFixedArity = 2;
G__18990.cljs$lang$applyTo = (function (arglist__18995){
var coll = cljs.core.first(arglist__18995);
arglist__18995 = cljs.core.next(arglist__18995);
var x = cljs.core.first(arglist__18995);
var xs = cljs.core.rest(arglist__18995);
return G__18990__delegate(coll,x,xs);
});
G__18990.cljs$core$IFn$_invoke$arity$variadic = G__18990__delegate;
return G__18990;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18996 = null;
if (arguments.length > 2) {
var G__18997__i = 0, G__18997__a = new Array(arguments.length -  2);
while (G__18997__i < G__18997__a.length) {G__18997__a[G__18997__i] = arguments[G__18997__i + 2]; ++G__18997__i;}
G__18996 = new cljs.core.IndexedSeq(G__18997__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18998 = cljs.core.next(s);
var G__18999 = (acc + (1));
s = G__18998;
acc = G__18999;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__19001 = coll;
if(G__19001){
var bit__12861__auto__ = (G__19001.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__12861__auto__) || (G__19001.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__19002 = cljs.core.next(coll);
var G__19003 = (n - (1));
coll = G__19002;
n = G__19003;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__19004 = cljs.core.next(coll);
var G__19005 = (n - (1));
var G__19006 = not_found;
coll = G__19004;
n = G__19005;
not_found = G__19006;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__19011 = coll;
if(G__19011){
var bit__12861__auto__ = (G__19011.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12861__auto__) || (G__19011.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19012 = coll;
if(G__19012){
var bit__12868__auto__ = (G__19012.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12868__auto__) || (G__19012.cljs$core$ISeq$)){
return true;
} else {
if((!G__19012.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19012);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19012);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__19013 = coll;
if(G__19013){
var bit__12861__auto__ = (G__19013.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__12861__auto__) || (G__19013.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19014 = coll;
if(G__19014){
var bit__12868__auto__ = (G__19014.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12868__auto__) || (G__19014.cljs$core$ISeq$)){
return true;
} else {
if((!G__19014.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19014);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19014);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__19015 = (n__$1 - (1));
var G__19016 = cljs.core.rest(xs);
n__$1 = G__19015;
xs = G__19016;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__19019 = o;
if(G__19019){
var bit__12861__auto__ = (G__19019.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12861__auto__) || (G__19019.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__19020 = o;
if(G__19020){
var bit__12861__auto__ = (G__19020.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12861__auto__) || (G__19020.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19024__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19025 = ret;
var G__19026 = cljs.core.first(kvs);
var G__19027 = cljs.core.second(kvs);
var G__19028 = cljs.core.nnext(kvs);
coll = G__19025;
k = G__19026;
v = G__19027;
kvs = G__19028;
continue;
} else {
return ret;
}
break;
}
};
var G__19024 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19029__i = 0, G__19029__a = new Array(arguments.length -  3);
while (G__19029__i < G__19029__a.length) {G__19029__a[G__19029__i] = arguments[G__19029__i + 3]; ++G__19029__i;}
  kvs = new cljs.core.IndexedSeq(G__19029__a,0);
} 
return G__19024__delegate.call(this,coll,k,v,kvs);};
G__19024.cljs$lang$maxFixedArity = 3;
G__19024.cljs$lang$applyTo = (function (arglist__19030){
var coll = cljs.core.first(arglist__19030);
arglist__19030 = cljs.core.next(arglist__19030);
var k = cljs.core.first(arglist__19030);
arglist__19030 = cljs.core.next(arglist__19030);
var v = cljs.core.first(arglist__19030);
var kvs = cljs.core.rest(arglist__19030);
return G__19024__delegate(coll,k,v,kvs);
});
G__19024.cljs$core$IFn$_invoke$arity$variadic = G__19024__delegate;
return G__19024;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19031 = null;
if (arguments.length > 3) {
var G__19032__i = 0, G__19032__a = new Array(arguments.length -  3);
while (G__19032__i < G__19032__a.length) {G__19032__a[G__19032__i] = arguments[G__19032__i + 3]; ++G__19032__i;}
G__19031 = new cljs.core.IndexedSeq(G__19032__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19031);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19035__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19036 = ret;
var G__19037 = cljs.core.first(ks);
var G__19038 = cljs.core.next(ks);
coll = G__19036;
k = G__19037;
ks = G__19038;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19035 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19039__i = 0, G__19039__a = new Array(arguments.length -  2);
while (G__19039__i < G__19039__a.length) {G__19039__a[G__19039__i] = arguments[G__19039__i + 2]; ++G__19039__i;}
  ks = new cljs.core.IndexedSeq(G__19039__a,0);
} 
return G__19035__delegate.call(this,coll,k,ks);};
G__19035.cljs$lang$maxFixedArity = 2;
G__19035.cljs$lang$applyTo = (function (arglist__19040){
var coll = cljs.core.first(arglist__19040);
arglist__19040 = cljs.core.next(arglist__19040);
var k = cljs.core.first(arglist__19040);
var ks = cljs.core.rest(arglist__19040);
return G__19035__delegate(coll,k,ks);
});
G__19035.cljs$core$IFn$_invoke$arity$variadic = G__19035__delegate;
return G__19035;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19041 = null;
if (arguments.length > 2) {
var G__19042__i = 0, G__19042__a = new Array(arguments.length -  2);
while (G__19042__i < G__19042__a.length) {G__19042__a[G__19042__i] = arguments[G__19042__i + 2]; ++G__19042__i;}
G__19041 = new cljs.core.IndexedSeq(G__19042__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19041);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12187__auto__ = (function (){var G__19047 = f;
return goog.isFunction(G__19047);
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var G__19048 = f;
if(G__19048){
var bit__12868__auto__ = null;
if(cljs.core.truth_((function (){var or__12187__auto____$1 = bit__12868__auto__;
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
return G__19048.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19048.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19048);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19048);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__19514 = null;
var G__19514__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__19514__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19050 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19050) : self__.afn.call(null,G__19050));
});
var G__19514__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19051 = a;
var G__19052 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19051,G__19052) : self__.afn.call(null,G__19051,G__19052));
});
var G__19514__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19053 = a;
var G__19054 = b;
var G__19055 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19053,G__19054,G__19055) : self__.afn.call(null,G__19053,G__19054,G__19055));
});
var G__19514__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19056 = a;
var G__19057 = b;
var G__19058 = c;
var G__19059 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19056,G__19057,G__19058,G__19059) : self__.afn.call(null,G__19056,G__19057,G__19058,G__19059));
});
var G__19514__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19060 = a;
var G__19061 = b;
var G__19062 = c;
var G__19063 = d;
var G__19064 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19060,G__19061,G__19062,G__19063,G__19064) : self__.afn.call(null,G__19060,G__19061,G__19062,G__19063,G__19064));
});
var G__19514__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19065 = a;
var G__19066 = b;
var G__19067 = c;
var G__19068 = d;
var G__19069 = e;
var G__19070 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19065,G__19066,G__19067,G__19068,G__19069,G__19070) : self__.afn.call(null,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070));
});
var G__19514__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19071 = a;
var G__19072 = b;
var G__19073 = c;
var G__19074 = d;
var G__19075 = e;
var G__19076 = f;
var G__19077 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077) : self__.afn.call(null,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077));
});
var G__19514__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19078 = a;
var G__19079 = b;
var G__19080 = c;
var G__19081 = d;
var G__19082 = e;
var G__19083 = f;
var G__19084 = g;
var G__19085 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19078,G__19079,G__19080,G__19081,G__19082,G__19083,G__19084,G__19085) : self__.afn.call(null,G__19078,G__19079,G__19080,G__19081,G__19082,G__19083,G__19084,G__19085));
});
var G__19514__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19086 = a;
var G__19087 = b;
var G__19088 = c;
var G__19089 = d;
var G__19090 = e;
var G__19091 = f;
var G__19092 = g;
var G__19093 = h;
var G__19094 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094) : self__.afn.call(null,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094));
});
var G__19514__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19095 = a;
var G__19096 = b;
var G__19097 = c;
var G__19098 = d;
var G__19099 = e;
var G__19100 = f;
var G__19101 = g;
var G__19102 = h;
var G__19103 = i;
var G__19104 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104) : self__.afn.call(null,G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104));
});
var G__19514__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19105 = a;
var G__19106 = b;
var G__19107 = c;
var G__19108 = d;
var G__19109 = e;
var G__19110 = f;
var G__19111 = g;
var G__19112 = h;
var G__19113 = i;
var G__19114 = j;
var G__19115 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115) : self__.afn.call(null,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115));
});
var G__19514__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19116 = a;
var G__19117 = b;
var G__19118 = c;
var G__19119 = d;
var G__19120 = e;
var G__19121 = f;
var G__19122 = g;
var G__19123 = h;
var G__19124 = i;
var G__19125 = j;
var G__19126 = k;
var G__19127 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19116,G__19117,G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127) : self__.afn.call(null,G__19116,G__19117,G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127));
});
var G__19514__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19128 = a;
var G__19129 = b;
var G__19130 = c;
var G__19131 = d;
var G__19132 = e;
var G__19133 = f;
var G__19134 = g;
var G__19135 = h;
var G__19136 = i;
var G__19137 = j;
var G__19138 = k;
var G__19139 = l;
var G__19140 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140) : self__.afn.call(null,G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140));
});
var G__19514__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19141 = a;
var G__19142 = b;
var G__19143 = c;
var G__19144 = d;
var G__19145 = e;
var G__19146 = f;
var G__19147 = g;
var G__19148 = h;
var G__19149 = i;
var G__19150 = j;
var G__19151 = k;
var G__19152 = l;
var G__19153 = m;
var G__19154 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19141,G__19142,G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154) : self__.afn.call(null,G__19141,G__19142,G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154));
});
var G__19514__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19155 = a;
var G__19156 = b;
var G__19157 = c;
var G__19158 = d;
var G__19159 = e;
var G__19160 = f;
var G__19161 = g;
var G__19162 = h;
var G__19163 = i;
var G__19164 = j;
var G__19165 = k;
var G__19166 = l;
var G__19167 = m;
var G__19168 = n;
var G__19169 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19155,G__19156,G__19157,G__19158,G__19159,G__19160,G__19161,G__19162,G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169) : self__.afn.call(null,G__19155,G__19156,G__19157,G__19158,G__19159,G__19160,G__19161,G__19162,G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169));
});
var G__19514__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19170 = a;
var G__19171 = b;
var G__19172 = c;
var G__19173 = d;
var G__19174 = e;
var G__19175 = f;
var G__19176 = g;
var G__19177 = h;
var G__19178 = i;
var G__19179 = j;
var G__19180 = k;
var G__19181 = l;
var G__19182 = m;
var G__19183 = n;
var G__19184 = o;
var G__19185 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176,G__19177,G__19178,G__19179,G__19180,G__19181,G__19182,G__19183,G__19184,G__19185) : self__.afn.call(null,G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176,G__19177,G__19178,G__19179,G__19180,G__19181,G__19182,G__19183,G__19184,G__19185));
});
var G__19514__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19186 = a;
var G__19187 = b;
var G__19188 = c;
var G__19189 = d;
var G__19190 = e;
var G__19191 = f;
var G__19192 = g;
var G__19193 = h;
var G__19194 = i;
var G__19195 = j;
var G__19196 = k;
var G__19197 = l;
var G__19198 = m;
var G__19199 = n;
var G__19200 = o;
var G__19201 = p;
var G__19202 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194,G__19195,G__19196,G__19197,G__19198,G__19199,G__19200,G__19201,G__19202) : self__.afn.call(null,G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194,G__19195,G__19196,G__19197,G__19198,G__19199,G__19200,G__19201,G__19202));
});
var G__19514__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19203 = a;
var G__19204 = b;
var G__19205 = c;
var G__19206 = d;
var G__19207 = e;
var G__19208 = f;
var G__19209 = g;
var G__19210 = h;
var G__19211 = i;
var G__19212 = j;
var G__19213 = k;
var G__19214 = l;
var G__19215 = m;
var G__19216 = n;
var G__19217 = o;
var G__19218 = p;
var G__19219 = q;
var G__19220 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216,G__19217,G__19218,G__19219,G__19220) : self__.afn.call(null,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216,G__19217,G__19218,G__19219,G__19220));
});
var G__19514__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19221 = a;
var G__19222 = b;
var G__19223 = c;
var G__19224 = d;
var G__19225 = e;
var G__19226 = f;
var G__19227 = g;
var G__19228 = h;
var G__19229 = i;
var G__19230 = j;
var G__19231 = k;
var G__19232 = l;
var G__19233 = m;
var G__19234 = n;
var G__19235 = o;
var G__19236 = p;
var G__19237 = q;
var G__19238 = r;
var G__19239 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238,G__19239) : self__.afn.call(null,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238,G__19239));
});
var G__19514__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19240 = a;
var G__19241 = b;
var G__19242 = c;
var G__19243 = d;
var G__19244 = e;
var G__19245 = f;
var G__19246 = g;
var G__19247 = h;
var G__19248 = i;
var G__19249 = j;
var G__19250 = k;
var G__19251 = l;
var G__19252 = m;
var G__19253 = n;
var G__19254 = o;
var G__19255 = p;
var G__19256 = q;
var G__19257 = r;
var G__19258 = s;
var G__19259 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259) : self__.afn.call(null,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259));
});
var G__19514__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19260 = self__.afn;
var G__19261 = a;
var G__19262 = b;
var G__19263 = c;
var G__19264 = d;
var G__19265 = e;
var G__19266 = f;
var G__19267 = g;
var G__19268 = h;
var G__19269 = i;
var G__19270 = j;
var G__19271 = k;
var G__19272 = l;
var G__19273 = m;
var G__19274 = n;
var G__19275 = o;
var G__19276 = p;
var G__19277 = q;
var G__19278 = r;
var G__19279 = s;
var G__19280 = t;
var G__19281 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19260,G__19261,G__19262,G__19263,G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270,G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277,G__19278,G__19279,G__19280,G__19281) : cljs.core.apply.call(null,G__19260,G__19261,G__19262,G__19263,G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270,G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277,G__19278,G__19279,G__19280,G__19281));
});
G__19514 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19514__1.call(this,self__);
case 2:
return G__19514__2.call(this,self__,a);
case 3:
return G__19514__3.call(this,self__,a,b);
case 4:
return G__19514__4.call(this,self__,a,b,c);
case 5:
return G__19514__5.call(this,self__,a,b,c,d);
case 6:
return G__19514__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19514__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19514__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19514__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19514__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19514__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19514__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19514__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19514__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19514__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19514__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19514__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19514__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19514__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19514__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19514__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19514__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19514.cljs$core$IFn$_invoke$arity$1 = G__19514__1;
G__19514.cljs$core$IFn$_invoke$arity$2 = G__19514__2;
G__19514.cljs$core$IFn$_invoke$arity$3 = G__19514__3;
G__19514.cljs$core$IFn$_invoke$arity$4 = G__19514__4;
G__19514.cljs$core$IFn$_invoke$arity$5 = G__19514__5;
G__19514.cljs$core$IFn$_invoke$arity$6 = G__19514__6;
G__19514.cljs$core$IFn$_invoke$arity$7 = G__19514__7;
G__19514.cljs$core$IFn$_invoke$arity$8 = G__19514__8;
G__19514.cljs$core$IFn$_invoke$arity$9 = G__19514__9;
G__19514.cljs$core$IFn$_invoke$arity$10 = G__19514__10;
G__19514.cljs$core$IFn$_invoke$arity$11 = G__19514__11;
G__19514.cljs$core$IFn$_invoke$arity$12 = G__19514__12;
G__19514.cljs$core$IFn$_invoke$arity$13 = G__19514__13;
G__19514.cljs$core$IFn$_invoke$arity$14 = G__19514__14;
G__19514.cljs$core$IFn$_invoke$arity$15 = G__19514__15;
G__19514.cljs$core$IFn$_invoke$arity$16 = G__19514__16;
G__19514.cljs$core$IFn$_invoke$arity$17 = G__19514__17;
G__19514.cljs$core$IFn$_invoke$arity$18 = G__19514__18;
G__19514.cljs$core$IFn$_invoke$arity$19 = G__19514__19;
G__19514.cljs$core$IFn$_invoke$arity$20 = G__19514__20;
G__19514.cljs$core$IFn$_invoke$arity$21 = G__19514__21;
G__19514.cljs$core$IFn$_invoke$arity$22 = G__19514__22;
return G__19514;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19049){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19049)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__19282 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19282) : self__.afn.call(null,G__19282));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__19283 = a;
var G__19284 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19283,G__19284) : self__.afn.call(null,G__19283,G__19284));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__19285 = a;
var G__19286 = b;
var G__19287 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19285,G__19286,G__19287) : self__.afn.call(null,G__19285,G__19286,G__19287));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__19288 = a;
var G__19289 = b;
var G__19290 = c;
var G__19291 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19288,G__19289,G__19290,G__19291) : self__.afn.call(null,G__19288,G__19289,G__19290,G__19291));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__19292 = a;
var G__19293 = b;
var G__19294 = c;
var G__19295 = d;
var G__19296 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19292,G__19293,G__19294,G__19295,G__19296) : self__.afn.call(null,G__19292,G__19293,G__19294,G__19295,G__19296));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__19297 = a;
var G__19298 = b;
var G__19299 = c;
var G__19300 = d;
var G__19301 = e;
var G__19302 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19297,G__19298,G__19299,G__19300,G__19301,G__19302) : self__.afn.call(null,G__19297,G__19298,G__19299,G__19300,G__19301,G__19302));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__19303 = a;
var G__19304 = b;
var G__19305 = c;
var G__19306 = d;
var G__19307 = e;
var G__19308 = f;
var G__19309 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19303,G__19304,G__19305,G__19306,G__19307,G__19308,G__19309) : self__.afn.call(null,G__19303,G__19304,G__19305,G__19306,G__19307,G__19308,G__19309));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__19310 = a;
var G__19311 = b;
var G__19312 = c;
var G__19313 = d;
var G__19314 = e;
var G__19315 = f;
var G__19316 = g;
var G__19317 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19310,G__19311,G__19312,G__19313,G__19314,G__19315,G__19316,G__19317) : self__.afn.call(null,G__19310,G__19311,G__19312,G__19313,G__19314,G__19315,G__19316,G__19317));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__19318 = a;
var G__19319 = b;
var G__19320 = c;
var G__19321 = d;
var G__19322 = e;
var G__19323 = f;
var G__19324 = g;
var G__19325 = h;
var G__19326 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325,G__19326) : self__.afn.call(null,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325,G__19326));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__19327 = a;
var G__19328 = b;
var G__19329 = c;
var G__19330 = d;
var G__19331 = e;
var G__19332 = f;
var G__19333 = g;
var G__19334 = h;
var G__19335 = i;
var G__19336 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336) : self__.afn.call(null,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__19337 = a;
var G__19338 = b;
var G__19339 = c;
var G__19340 = d;
var G__19341 = e;
var G__19342 = f;
var G__19343 = g;
var G__19344 = h;
var G__19345 = i;
var G__19346 = j;
var G__19347 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344,G__19345,G__19346,G__19347) : self__.afn.call(null,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344,G__19345,G__19346,G__19347));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__19348 = a;
var G__19349 = b;
var G__19350 = c;
var G__19351 = d;
var G__19352 = e;
var G__19353 = f;
var G__19354 = g;
var G__19355 = h;
var G__19356 = i;
var G__19357 = j;
var G__19358 = k;
var G__19359 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359) : self__.afn.call(null,G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__19360 = a;
var G__19361 = b;
var G__19362 = c;
var G__19363 = d;
var G__19364 = e;
var G__19365 = f;
var G__19366 = g;
var G__19367 = h;
var G__19368 = i;
var G__19369 = j;
var G__19370 = k;
var G__19371 = l;
var G__19372 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19360,G__19361,G__19362,G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372) : self__.afn.call(null,G__19360,G__19361,G__19362,G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__19373 = a;
var G__19374 = b;
var G__19375 = c;
var G__19376 = d;
var G__19377 = e;
var G__19378 = f;
var G__19379 = g;
var G__19380 = h;
var G__19381 = i;
var G__19382 = j;
var G__19383 = k;
var G__19384 = l;
var G__19385 = m;
var G__19386 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382,G__19383,G__19384,G__19385,G__19386) : self__.afn.call(null,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382,G__19383,G__19384,G__19385,G__19386));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__19387 = a;
var G__19388 = b;
var G__19389 = c;
var G__19390 = d;
var G__19391 = e;
var G__19392 = f;
var G__19393 = g;
var G__19394 = h;
var G__19395 = i;
var G__19396 = j;
var G__19397 = k;
var G__19398 = l;
var G__19399 = m;
var G__19400 = n;
var G__19401 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401) : self__.afn.call(null,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__19402 = a;
var G__19403 = b;
var G__19404 = c;
var G__19405 = d;
var G__19406 = e;
var G__19407 = f;
var G__19408 = g;
var G__19409 = h;
var G__19410 = i;
var G__19411 = j;
var G__19412 = k;
var G__19413 = l;
var G__19414 = m;
var G__19415 = n;
var G__19416 = o;
var G__19417 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414,G__19415,G__19416,G__19417) : self__.afn.call(null,G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411,G__19412,G__19413,G__19414,G__19415,G__19416,G__19417));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__19418 = a;
var G__19419 = b;
var G__19420 = c;
var G__19421 = d;
var G__19422 = e;
var G__19423 = f;
var G__19424 = g;
var G__19425 = h;
var G__19426 = i;
var G__19427 = j;
var G__19428 = k;
var G__19429 = l;
var G__19430 = m;
var G__19431 = n;
var G__19432 = o;
var G__19433 = p;
var G__19434 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429,G__19430,G__19431,G__19432,G__19433,G__19434) : self__.afn.call(null,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429,G__19430,G__19431,G__19432,G__19433,G__19434));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__19435 = a;
var G__19436 = b;
var G__19437 = c;
var G__19438 = d;
var G__19439 = e;
var G__19440 = f;
var G__19441 = g;
var G__19442 = h;
var G__19443 = i;
var G__19444 = j;
var G__19445 = k;
var G__19446 = l;
var G__19447 = m;
var G__19448 = n;
var G__19449 = o;
var G__19450 = p;
var G__19451 = q;
var G__19452 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449,G__19450,G__19451,G__19452) : self__.afn.call(null,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449,G__19450,G__19451,G__19452));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__19453 = a;
var G__19454 = b;
var G__19455 = c;
var G__19456 = d;
var G__19457 = e;
var G__19458 = f;
var G__19459 = g;
var G__19460 = h;
var G__19461 = i;
var G__19462 = j;
var G__19463 = k;
var G__19464 = l;
var G__19465 = m;
var G__19466 = n;
var G__19467 = o;
var G__19468 = p;
var G__19469 = q;
var G__19470 = r;
var G__19471 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468,G__19469,G__19470,G__19471) : self__.afn.call(null,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468,G__19469,G__19470,G__19471));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__19472 = a;
var G__19473 = b;
var G__19474 = c;
var G__19475 = d;
var G__19476 = e;
var G__19477 = f;
var G__19478 = g;
var G__19479 = h;
var G__19480 = i;
var G__19481 = j;
var G__19482 = k;
var G__19483 = l;
var G__19484 = m;
var G__19485 = n;
var G__19486 = o;
var G__19487 = p;
var G__19488 = q;
var G__19489 = r;
var G__19490 = s;
var G__19491 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491) : self__.afn.call(null,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19492 = self__.afn;
var G__19493 = a;
var G__19494 = b;
var G__19495 = c;
var G__19496 = d;
var G__19497 = e;
var G__19498 = f;
var G__19499 = g;
var G__19500 = h;
var G__19501 = i;
var G__19502 = j;
var G__19503 = k;
var G__19504 = l;
var G__19505 = m;
var G__19506 = n;
var G__19507 = o;
var G__19508 = p;
var G__19509 = q;
var G__19510 = r;
var G__19511 = s;
var G__19512 = t;
var G__19513 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19492,G__19493,G__19494,G__19495,G__19496,G__19497,G__19498,G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509,G__19510,G__19511,G__19512,G__19513) : cljs.core.apply.call(null,G__19492,G__19493,G__19494,G__19495,G__19496,G__19497,G__19498,G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509,G__19510,G__19511,G__19512,G__19513));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__19518 = o;
if(G__19518){
var bit__12868__auto__ = (G__19518.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__12868__auto__) || (G__19518.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__19518.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19518);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19518);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12175__auto__ = !((o == null));
if(and__12175__auto__){
var G__19522 = o;
if(G__19522){
var bit__12868__auto__ = (G__19522.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12868__auto__) || (G__19522.cljs$core$IMeta$)){
return true;
} else {
if((!G__19522.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19522);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19522);
}
} else {
return and__12175__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__19525__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19526 = ret;
var G__19527 = cljs.core.first(ks);
var G__19528 = cljs.core.next(ks);
coll = G__19526;
k = G__19527;
ks = G__19528;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19525 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19529__i = 0, G__19529__a = new Array(arguments.length -  2);
while (G__19529__i < G__19529__a.length) {G__19529__a[G__19529__i] = arguments[G__19529__i + 2]; ++G__19529__i;}
  ks = new cljs.core.IndexedSeq(G__19529__a,0);
} 
return G__19525__delegate.call(this,coll,k,ks);};
G__19525.cljs$lang$maxFixedArity = 2;
G__19525.cljs$lang$applyTo = (function (arglist__19530){
var coll = cljs.core.first(arglist__19530);
arglist__19530 = cljs.core.next(arglist__19530);
var k = cljs.core.first(arglist__19530);
var ks = cljs.core.rest(arglist__19530);
return G__19525__delegate(coll,k,ks);
});
G__19525.cljs$core$IFn$_invoke$arity$variadic = G__19525__delegate;
return G__19525;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__19531 = null;
if (arguments.length > 2) {
var G__19532__i = 0, G__19532__a = new Array(arguments.length -  2);
while (G__19532__i < G__19532__a.length) {G__19532__a[G__19532__i] = arguments[G__19532__i + 2]; ++G__19532__i;}
G__19531 = new cljs.core.IndexedSeq(G__19532__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19534 = x;
if(G__19534){
var bit__12868__auto__ = (G__19534.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__12868__auto__) || (G__19534.cljs$core$ICollection$)){
return true;
} else {
if((!G__19534.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19534);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19534);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19536 = x;
if(G__19536){
var bit__12868__auto__ = (G__19536.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__12868__auto__) || (G__19536.cljs$core$ISet$)){
return true;
} else {
if((!G__19536.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19536);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19536);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__19538 = x;
if(G__19538){
var bit__12868__auto__ = (G__19538.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__12868__auto__) || (G__19538.cljs$core$IAssociative$)){
return true;
} else {
if((!G__19538.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19538);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19538);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19540 = x;
if(G__19540){
var bit__12868__auto__ = (G__19540.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__12868__auto__) || (G__19540.cljs$core$ISequential$)){
return true;
} else {
if((!G__19540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19540);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19542 = x;
if(G__19542){
var bit__12868__auto__ = (G__19542.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__12868__auto__) || (G__19542.cljs$core$ISorted$)){
return true;
} else {
if((!G__19542.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19542);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19542);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19544 = x;
if(G__19544){
var bit__12868__auto__ = (G__19544.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12868__auto__) || (G__19544.cljs$core$IReduce$)){
return true;
} else {
if((!G__19544.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19544);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19544);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19546 = x;
if(G__19546){
var bit__12868__auto__ = (G__19546.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12868__auto__) || (G__19546.cljs$core$IMap$)){
return true;
} else {
if((!G__19546.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19546);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19548 = x;
if(G__19548){
var bit__12868__auto__ = (G__19548.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__12868__auto__) || (G__19548.cljs$core$IVector$)){
return true;
} else {
if((!G__19548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19548);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19550 = x;
if(G__19550){
var bit__12861__auto__ = (G__19550.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__12861__auto__) || (G__19550.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19556 = {};
return obj19556;
});
var js_obj__1 = (function() { 
var G__19559__delegate = function (keyvals){
var G__19557 = goog.object.create;
var G__19558 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19557,G__19558) : cljs.core.apply.call(null,G__19557,G__19558));
};
var G__19559 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19560__i = 0, G__19560__a = new Array(arguments.length -  0);
while (G__19560__i < G__19560__a.length) {G__19560__a[G__19560__i] = arguments[G__19560__i + 0]; ++G__19560__i;}
  keyvals = new cljs.core.IndexedSeq(G__19560__a,0);
} 
return G__19559__delegate.call(this,keyvals);};
G__19559.cljs$lang$maxFixedArity = 0;
G__19559.cljs$lang$applyTo = (function (arglist__19561){
var keyvals = cljs.core.seq(arglist__19561);
return G__19559__delegate(keyvals);
});
G__19559.cljs$core$IFn$_invoke$arity$variadic = G__19559__delegate;
return G__19559;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19562 = null;
if (arguments.length > 0) {
var G__19563__i = 0, G__19563__a = new Array(arguments.length -  0);
while (G__19563__i < G__19563__a.length) {G__19563__a[G__19563__i] = arguments[G__19563__i + 0]; ++G__19563__i;}
G__19562 = new cljs.core.IndexedSeq(G__19563__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19566_19568 = obj;
var G__19567_19569 = ((function (G__19566_19568,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19566_19568,keys))
;
goog.object.forEach(G__19566_19568,G__19567_19569);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19570 = (i__$1 + (1));
var G__19571 = (j__$1 + (1));
var G__19572 = (len__$1 - (1));
i__$1 = G__19570;
j__$1 = G__19571;
len__$1 = G__19572;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19573 = (i__$1 - (1));
var G__19574 = (j__$1 - (1));
var G__19575 = (len__$1 - (1));
i__$1 = G__19573;
j__$1 = G__19574;
len__$1 = G__19575;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19577 = {};
return obj19577;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19579 = s;
if(G__19579){
var bit__12868__auto__ = (G__19579.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12868__auto__) || (G__19579.cljs$core$ISeq$)){
return true;
} else {
if((!G__19579.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19579);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19579);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19581 = s;
if(G__19581){
var bit__12868__auto__ = (G__19581.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__12868__auto__) || (G__19581.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19581.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19581);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12187__auto__ = cljs.core.fn_QMARK_(f);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var G__19585 = f;
if(G__19585){
var bit__12868__auto__ = (G__19585.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__12868__auto__) || (G__19585.cljs$core$IFn$)){
return true;
} else {
if((!G__19585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19585);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19598 = n;
return isNaN(G__19598);
})())) && (!((n === Infinity))) && (((function (){var G__19599 = n;
return parseFloat(G__19599);
})() === (function (){var G__19600 = n;
var G__19601 = (10);
return parseInt(G__19600,G__19601);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19602__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19603 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19604 = etc;
s = G__19603;
xs = G__19604;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19602 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19605__i = 0, G__19605__a = new Array(arguments.length -  2);
while (G__19605__i < G__19605__a.length) {G__19605__a[G__19605__i] = arguments[G__19605__i + 2]; ++G__19605__i;}
  more = new cljs.core.IndexedSeq(G__19605__a,0);
} 
return G__19602__delegate.call(this,x,y,more);};
G__19602.cljs$lang$maxFixedArity = 2;
G__19602.cljs$lang$applyTo = (function (arglist__19606){
var x = cljs.core.first(arglist__19606);
arglist__19606 = cljs.core.next(arglist__19606);
var y = cljs.core.first(arglist__19606);
var more = cljs.core.rest(arglist__19606);
return G__19602__delegate(x,y,more);
});
G__19602.cljs$core$IFn$_invoke$arity$variadic = G__19602__delegate;
return G__19602;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__19607 = null;
if (arguments.length > 2) {
var G__19608__i = 0, G__19608__a = new Array(arguments.length -  2);
while (G__19608__i < G__19608__a.length) {G__19608__a[G__19608__i] = arguments[G__19608__i + 2]; ++G__19608__i;}
G__19607 = new cljs.core.IndexedSeq(G__19608__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__19612 = x;
if(G__19612){
var bit__12861__auto__ = (G__19612.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__12861__auto__) || (G__19612.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__19613 = x;
var G__19614 = y;
return goog.array.defaultCompare(G__19613,G__19614);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__19619 = xs;
var G__19620 = ys;
var G__19621 = len;
var G__19622 = (n + (1));
xs = G__19619;
ys = G__19620;
len = G__19621;
n = G__19622;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__19627 = x;
var G__19628 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19627,G__19628) : f.call(null,G__19627,G__19628));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19629 = y;
var G__19630 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19629,G__19630) : f.call(null,G__19629,G__19630));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__19636 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19636) : cljs.core.to_array.call(null,G__19636));
})();
var G__19637_19639 = a;
var G__19638_19640 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__19637_19639,G__19638_19640);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__19646 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19646) : keyfn.call(null,G__19646));
})(),(function (){var G__19647 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19647) : keyfn.call(null,G__19647));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__19653 = f;
var G__19654 = cljs.core.first(s);
var G__19655 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19653,G__19654,G__19655) : cljs.core.reduce.call(null,G__19653,G__19654,G__19655));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__19656 = val__$1;
var G__19657 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19656,G__19657) : f.call(null,G__19656,G__19657));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19658 = nval;
var G__19659 = cljs.core.next(coll__$1);
val__$1 = G__19658;
coll__$1 = G__19659;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__19663 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19663) : cljs.core.to_array.call(null,G__19663));
})();
var G__19664_19666 = a;
goog.array.shuffle(G__19664_19666);

var G__19665 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__19665) : cljs.core.vec.call(null,G__19665));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__19669 = coll;
if(G__19669){
var bit__12861__auto__ = (G__19669.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12861__auto__) || (G__19669.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__19670 = coll;
if(G__19670){
var bit__12861__auto__ = (G__19670.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__12861__auto__) || (G__19670.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__19679 = null;
var G__19679__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__19679__1 = (function (x){
var G__19676 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__19676) : cf.call(null,G__19676));
});
var G__19679__2 = (function (x,y){
var G__19677 = x;
var G__19678 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19677,G__19678) : f.call(null,G__19677,G__19678));
});
G__19679 = function(x,y){
switch(arguments.length){
case 0:
return G__19679__0.call(this);
case 1:
return G__19679__1.call(this,x);
case 2:
return G__19679__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19679.cljs$core$IFn$_invoke$arity$0 = G__19679__0;
G__19679.cljs$core$IFn$_invoke$arity$1 = G__19679__1;
G__19679.cljs$core$IFn$_invoke$arity$2 = G__19679__2;
return G__19679;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__19686 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19686) : xform.call(null,G__19686));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__19687 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__19687) : f__$1.call(null,G__19687));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__19688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__19688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19689__i = 0, G__19689__a = new Array(arguments.length -  2);
while (G__19689__i < G__19689__a.length) {G__19689__a[G__19689__i] = arguments[G__19689__i + 2]; ++G__19689__i;}
  more = new cljs.core.IndexedSeq(G__19689__a,0);
} 
return G__19688__delegate.call(this,x,y,more);};
G__19688.cljs$lang$maxFixedArity = 2;
G__19688.cljs$lang$applyTo = (function (arglist__19690){
var x = cljs.core.first(arglist__19690);
arglist__19690 = cljs.core.next(arglist__19690);
var y = cljs.core.first(arglist__19690);
var more = cljs.core.rest(arglist__19690);
return G__19688__delegate(x,y,more);
});
G__19688.cljs$core$IFn$_invoke$arity$variadic = G__19688__delegate;
return G__19688;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__19691 = null;
if (arguments.length > 2) {
var G__19692__i = 0, G__19692__a = new Array(arguments.length -  2);
while (G__19692__i < G__19692__a.length) {G__19692__a[G__19692__i] = arguments[G__19692__i + 2]; ++G__19692__i;}
G__19691 = new cljs.core.IndexedSeq(G__19692__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__19693__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__19693 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19694__i = 0, G__19694__a = new Array(arguments.length -  2);
while (G__19694__i < G__19694__a.length) {G__19694__a[G__19694__i] = arguments[G__19694__i + 2]; ++G__19694__i;}
  more = new cljs.core.IndexedSeq(G__19694__a,0);
} 
return G__19693__delegate.call(this,x,y,more);};
G__19693.cljs$lang$maxFixedArity = 2;
G__19693.cljs$lang$applyTo = (function (arglist__19695){
var x = cljs.core.first(arglist__19695);
arglist__19695 = cljs.core.next(arglist__19695);
var y = cljs.core.first(arglist__19695);
var more = cljs.core.rest(arglist__19695);
return G__19693__delegate(x,y,more);
});
G__19693.cljs$core$IFn$_invoke$arity$variadic = G__19693__delegate;
return G__19693;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__19696 = null;
if (arguments.length > 2) {
var G__19697__i = 0, G__19697__a = new Array(arguments.length -  2);
while (G__19697__i < G__19697__a.length) {G__19697__a[G__19697__i] = arguments[G__19697__i + 2]; ++G__19697__i;}
G__19696 = new cljs.core.IndexedSeq(G__19697__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__19698__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__19698 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19699__i = 0, G__19699__a = new Array(arguments.length -  2);
while (G__19699__i < G__19699__a.length) {G__19699__a[G__19699__i] = arguments[G__19699__i + 2]; ++G__19699__i;}
  more = new cljs.core.IndexedSeq(G__19699__a,0);
} 
return G__19698__delegate.call(this,x,y,more);};
G__19698.cljs$lang$maxFixedArity = 2;
G__19698.cljs$lang$applyTo = (function (arglist__19700){
var x = cljs.core.first(arglist__19700);
arglist__19700 = cljs.core.next(arglist__19700);
var y = cljs.core.first(arglist__19700);
var more = cljs.core.rest(arglist__19700);
return G__19698__delegate(x,y,more);
});
G__19698.cljs$core$IFn$_invoke$arity$variadic = G__19698__delegate;
return G__19698;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19701 = null;
if (arguments.length > 2) {
var G__19702__i = 0, G__19702__a = new Array(arguments.length -  2);
while (G__19702__i < G__19702__a.length) {G__19702__a[G__19702__i] = arguments[G__19702__i + 2]; ++G__19702__i;}
G__19701 = new cljs.core.IndexedSeq(G__19702__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19707__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19708__i = 0, G__19708__a = new Array(arguments.length -  2);
while (G__19708__i < G__19708__a.length) {G__19708__a[G__19708__i] = arguments[G__19708__i + 2]; ++G__19708__i;}
  more = new cljs.core.IndexedSeq(G__19708__a,0);
} 
return G__19707__delegate.call(this,x,y,more);};
G__19707.cljs$lang$maxFixedArity = 2;
G__19707.cljs$lang$applyTo = (function (arglist__19709){
var x = cljs.core.first(arglist__19709);
arglist__19709 = cljs.core.next(arglist__19709);
var y = cljs.core.first(arglist__19709);
var more = cljs.core.rest(arglist__19709);
return G__19707__delegate(x,y,more);
});
G__19707.cljs$core$IFn$_invoke$arity$variadic = G__19707__delegate;
return G__19707;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19710 = null;
if (arguments.length > 2) {
var G__19711__i = 0, G__19711__a = new Array(arguments.length -  2);
while (G__19711__i < G__19711__a.length) {G__19711__a[G__19711__i] = arguments[G__19711__i + 2]; ++G__19711__i;}
G__19710 = new cljs.core.IndexedSeq(G__19711__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19712__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19713 = y;
var G__19714 = cljs.core.first(more);
var G__19715 = cljs.core.next(more);
x = G__19713;
y = G__19714;
more = G__19715;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19712 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19716__i = 0, G__19716__a = new Array(arguments.length -  2);
while (G__19716__i < G__19716__a.length) {G__19716__a[G__19716__i] = arguments[G__19716__i + 2]; ++G__19716__i;}
  more = new cljs.core.IndexedSeq(G__19716__a,0);
} 
return G__19712__delegate.call(this,x,y,more);};
G__19712.cljs$lang$maxFixedArity = 2;
G__19712.cljs$lang$applyTo = (function (arglist__19717){
var x = cljs.core.first(arglist__19717);
arglist__19717 = cljs.core.next(arglist__19717);
var y = cljs.core.first(arglist__19717);
var more = cljs.core.rest(arglist__19717);
return G__19712__delegate(x,y,more);
});
G__19712.cljs$core$IFn$_invoke$arity$variadic = G__19712__delegate;
return G__19712;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19718 = null;
if (arguments.length > 2) {
var G__19719__i = 0, G__19719__a = new Array(arguments.length -  2);
while (G__19719__i < G__19719__a.length) {G__19719__a[G__19719__i] = arguments[G__19719__i + 2]; ++G__19719__i;}
G__19718 = new cljs.core.IndexedSeq(G__19719__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19720__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19721 = y;
var G__19722 = cljs.core.first(more);
var G__19723 = cljs.core.next(more);
x = G__19721;
y = G__19722;
more = G__19723;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19720 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19724__i = 0, G__19724__a = new Array(arguments.length -  2);
while (G__19724__i < G__19724__a.length) {G__19724__a[G__19724__i] = arguments[G__19724__i + 2]; ++G__19724__i;}
  more = new cljs.core.IndexedSeq(G__19724__a,0);
} 
return G__19720__delegate.call(this,x,y,more);};
G__19720.cljs$lang$maxFixedArity = 2;
G__19720.cljs$lang$applyTo = (function (arglist__19725){
var x = cljs.core.first(arglist__19725);
arglist__19725 = cljs.core.next(arglist__19725);
var y = cljs.core.first(arglist__19725);
var more = cljs.core.rest(arglist__19725);
return G__19720__delegate(x,y,more);
});
G__19720.cljs$core$IFn$_invoke$arity$variadic = G__19720__delegate;
return G__19720;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19726 = null;
if (arguments.length > 2) {
var G__19727__i = 0, G__19727__a = new Array(arguments.length -  2);
while (G__19727__i < G__19727__a.length) {G__19727__a[G__19727__i] = arguments[G__19727__i + 2]; ++G__19727__i;}
G__19726 = new cljs.core.IndexedSeq(G__19727__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19728__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19729 = y;
var G__19730 = cljs.core.first(more);
var G__19731 = cljs.core.next(more);
x = G__19729;
y = G__19730;
more = G__19731;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19728 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19732__i = 0, G__19732__a = new Array(arguments.length -  2);
while (G__19732__i < G__19732__a.length) {G__19732__a[G__19732__i] = arguments[G__19732__i + 2]; ++G__19732__i;}
  more = new cljs.core.IndexedSeq(G__19732__a,0);
} 
return G__19728__delegate.call(this,x,y,more);};
G__19728.cljs$lang$maxFixedArity = 2;
G__19728.cljs$lang$applyTo = (function (arglist__19733){
var x = cljs.core.first(arglist__19733);
arglist__19733 = cljs.core.next(arglist__19733);
var y = cljs.core.first(arglist__19733);
var more = cljs.core.rest(arglist__19733);
return G__19728__delegate(x,y,more);
});
G__19728.cljs$core$IFn$_invoke$arity$variadic = G__19728__delegate;
return G__19728;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19734 = null;
if (arguments.length > 2) {
var G__19735__i = 0, G__19735__a = new Array(arguments.length -  2);
while (G__19735__i < G__19735__a.length) {G__19735__a[G__19735__i] = arguments[G__19735__i + 2]; ++G__19735__i;}
G__19734 = new cljs.core.IndexedSeq(G__19735__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19736__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19737 = y;
var G__19738 = cljs.core.first(more);
var G__19739 = cljs.core.next(more);
x = G__19737;
y = G__19738;
more = G__19739;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19736 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19740__i = 0, G__19740__a = new Array(arguments.length -  2);
while (G__19740__i < G__19740__a.length) {G__19740__a[G__19740__i] = arguments[G__19740__i + 2]; ++G__19740__i;}
  more = new cljs.core.IndexedSeq(G__19740__a,0);
} 
return G__19736__delegate.call(this,x,y,more);};
G__19736.cljs$lang$maxFixedArity = 2;
G__19736.cljs$lang$applyTo = (function (arglist__19741){
var x = cljs.core.first(arglist__19741);
arglist__19741 = cljs.core.next(arglist__19741);
var y = cljs.core.first(arglist__19741);
var more = cljs.core.rest(arglist__19741);
return G__19736__delegate(x,y,more);
});
G__19736.cljs$core$IFn$_invoke$arity$variadic = G__19736__delegate;
return G__19736;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19742 = null;
if (arguments.length > 2) {
var G__19743__i = 0, G__19743__a = new Array(arguments.length -  2);
while (G__19743__i < G__19743__a.length) {G__19743__a[G__19743__i] = arguments[G__19743__i + 2]; ++G__19743__i;}
G__19742 = new cljs.core.IndexedSeq(G__19743__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12504__auto__ = x;
var y__12505__auto__ = y;
return ((x__12504__auto__ > y__12505__auto__) ? x__12504__auto__ : y__12505__auto__);
});
var max__3 = (function() { 
var G__19744__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12504__auto__ = x;
var y__12505__auto__ = y;
return ((x__12504__auto__ > y__12505__auto__) ? x__12504__auto__ : y__12505__auto__);
})(),more);
};
var G__19744 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19745__i = 0, G__19745__a = new Array(arguments.length -  2);
while (G__19745__i < G__19745__a.length) {G__19745__a[G__19745__i] = arguments[G__19745__i + 2]; ++G__19745__i;}
  more = new cljs.core.IndexedSeq(G__19745__a,0);
} 
return G__19744__delegate.call(this,x,y,more);};
G__19744.cljs$lang$maxFixedArity = 2;
G__19744.cljs$lang$applyTo = (function (arglist__19746){
var x = cljs.core.first(arglist__19746);
arglist__19746 = cljs.core.next(arglist__19746);
var y = cljs.core.first(arglist__19746);
var more = cljs.core.rest(arglist__19746);
return G__19744__delegate(x,y,more);
});
G__19744.cljs$core$IFn$_invoke$arity$variadic = G__19744__delegate;
return G__19744;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19747 = null;
if (arguments.length > 2) {
var G__19748__i = 0, G__19748__a = new Array(arguments.length -  2);
while (G__19748__i < G__19748__a.length) {G__19748__a[G__19748__i] = arguments[G__19748__i + 2]; ++G__19748__i;}
G__19747 = new cljs.core.IndexedSeq(G__19748__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12511__auto__ = x;
var y__12512__auto__ = y;
return ((x__12511__auto__ < y__12512__auto__) ? x__12511__auto__ : y__12512__auto__);
});
var min__3 = (function() { 
var G__19749__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12511__auto__ = x;
var y__12512__auto__ = y;
return ((x__12511__auto__ < y__12512__auto__) ? x__12511__auto__ : y__12512__auto__);
})(),more);
};
var G__19749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19750__i = 0, G__19750__a = new Array(arguments.length -  2);
while (G__19750__i < G__19750__a.length) {G__19750__a[G__19750__i] = arguments[G__19750__i + 2]; ++G__19750__i;}
  more = new cljs.core.IndexedSeq(G__19750__a,0);
} 
return G__19749__delegate.call(this,x,y,more);};
G__19749.cljs$lang$maxFixedArity = 2;
G__19749.cljs$lang$applyTo = (function (arglist__19751){
var x = cljs.core.first(arglist__19751);
arglist__19751 = cljs.core.next(arglist__19751);
var y = cljs.core.first(arglist__19751);
var more = cljs.core.rest(arglist__19751);
return G__19749__delegate(x,y,more);
});
G__19749.cljs$core$IFn$_invoke$arity$variadic = G__19749__delegate;
return G__19749;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19752 = null;
if (arguments.length > 2) {
var G__19753__i = 0, G__19753__a = new Array(arguments.length -  2);
while (G__19753__i < G__19753__a.length) {G__19753__a[G__19753__i] = arguments[G__19753__i + 2]; ++G__19753__i;}
G__19752 = new cljs.core.IndexedSeq(G__19753__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19754__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19754 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19755__i = 0, G__19755__a = new Array(arguments.length -  2);
while (G__19755__i < G__19755__a.length) {G__19755__a[G__19755__i] = arguments[G__19755__i + 2]; ++G__19755__i;}
  more = new cljs.core.IndexedSeq(G__19755__a,0);
} 
return G__19754__delegate.call(this,x,y,more);};
G__19754.cljs$lang$maxFixedArity = 2;
G__19754.cljs$lang$applyTo = (function (arglist__19756){
var x = cljs.core.first(arglist__19756);
arglist__19756 = cljs.core.next(arglist__19756);
var y = cljs.core.first(arglist__19756);
var more = cljs.core.rest(arglist__19756);
return G__19754__delegate(x,y,more);
});
G__19754.cljs$core$IFn$_invoke$arity$variadic = G__19754__delegate;
return G__19754;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19757 = null;
if (arguments.length > 2) {
var G__19758__i = 0, G__19758__a = new Array(arguments.length -  2);
while (G__19758__i < G__19758__a.length) {G__19758__a[G__19758__i] = arguments[G__19758__i + 2]; ++G__19758__i;}
G__19757 = new cljs.core.IndexedSeq(G__19758__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19759__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19759 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19760__i = 0, G__19760__a = new Array(arguments.length -  2);
while (G__19760__i < G__19760__a.length) {G__19760__a[G__19760__i] = arguments[G__19760__i + 2]; ++G__19760__i;}
  more = new cljs.core.IndexedSeq(G__19760__a,0);
} 
return G__19759__delegate.call(this,x,y,more);};
G__19759.cljs$lang$maxFixedArity = 2;
G__19759.cljs$lang$applyTo = (function (arglist__19761){
var x = cljs.core.first(arglist__19761);
arglist__19761 = cljs.core.next(arglist__19761);
var y = cljs.core.first(arglist__19761);
var more = cljs.core.rest(arglist__19761);
return G__19759__delegate(x,y,more);
});
G__19759.cljs$core$IFn$_invoke$arity$variadic = G__19759__delegate;
return G__19759;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19762 = null;
if (arguments.length > 2) {
var G__19763__i = 0, G__19763__a = new Array(arguments.length -  2);
while (G__19763__i < G__19763__a.length) {G__19763__a[G__19763__i] = arguments[G__19763__i + 2]; ++G__19763__i;}
G__19762 = new cljs.core.IndexedSeq(G__19763__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19768__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19768 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19769__i = 0, G__19769__a = new Array(arguments.length -  2);
while (G__19769__i < G__19769__a.length) {G__19769__a[G__19769__i] = arguments[G__19769__i + 2]; ++G__19769__i;}
  more = new cljs.core.IndexedSeq(G__19769__a,0);
} 
return G__19768__delegate.call(this,x,y,more);};
G__19768.cljs$lang$maxFixedArity = 2;
G__19768.cljs$lang$applyTo = (function (arglist__19770){
var x = cljs.core.first(arglist__19770);
arglist__19770 = cljs.core.next(arglist__19770);
var y = cljs.core.first(arglist__19770);
var more = cljs.core.rest(arglist__19770);
return G__19768__delegate(x,y,more);
});
G__19768.cljs$core$IFn$_invoke$arity$variadic = G__19768__delegate;
return G__19768;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19771 = null;
if (arguments.length > 2) {
var G__19772__i = 0, G__19772__a = new Array(arguments.length -  2);
while (G__19772__i < G__19772__a.length) {G__19772__a[G__19772__i] = arguments[G__19772__i + 2]; ++G__19772__i;}
G__19771 = new cljs.core.IndexedSeq(G__19772__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19773__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19773 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19774__i = 0, G__19774__a = new Array(arguments.length -  2);
while (G__19774__i < G__19774__a.length) {G__19774__a[G__19774__i] = arguments[G__19774__i + 2]; ++G__19774__i;}
  more = new cljs.core.IndexedSeq(G__19774__a,0);
} 
return G__19773__delegate.call(this,x,y,more);};
G__19773.cljs$lang$maxFixedArity = 2;
G__19773.cljs$lang$applyTo = (function (arglist__19775){
var x = cljs.core.first(arglist__19775);
arglist__19775 = cljs.core.next(arglist__19775);
var y = cljs.core.first(arglist__19775);
var more = cljs.core.rest(arglist__19775);
return G__19773__delegate(x,y,more);
});
G__19773.cljs$core$IFn$_invoke$arity$variadic = G__19773__delegate;
return G__19773;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19776 = null;
if (arguments.length > 2) {
var G__19777__i = 0, G__19777__a = new Array(arguments.length -  2);
while (G__19777__i < G__19777__a.length) {G__19777__a[G__19777__i] = arguments[G__19777__i + 2]; ++G__19777__i;}
G__19776 = new cljs.core.IndexedSeq(G__19777__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19778__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19778 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19779__i = 0, G__19779__a = new Array(arguments.length -  2);
while (G__19779__i < G__19779__a.length) {G__19779__a[G__19779__i] = arguments[G__19779__i + 2]; ++G__19779__i;}
  more = new cljs.core.IndexedSeq(G__19779__a,0);
} 
return G__19778__delegate.call(this,x,y,more);};
G__19778.cljs$lang$maxFixedArity = 2;
G__19778.cljs$lang$applyTo = (function (arglist__19780){
var x = cljs.core.first(arglist__19780);
arglist__19780 = cljs.core.next(arglist__19780);
var y = cljs.core.first(arglist__19780);
var more = cljs.core.rest(arglist__19780);
return G__19778__delegate(x,y,more);
});
G__19778.cljs$core$IFn$_invoke$arity$variadic = G__19778__delegate;
return G__19778;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19781 = null;
if (arguments.length > 2) {
var G__19782__i = 0, G__19782__a = new Array(arguments.length -  2);
while (G__19782__i < G__19782__a.length) {G__19782__a[G__19782__i] = arguments[G__19782__i + 2]; ++G__19782__i;}
G__19781 = new cljs.core.IndexedSeq(G__19782__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19785 = x;
var G__19786 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19785,G__19786) : cljs.core.mod.call(null,G__19785,G__19786));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19787__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19787 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19788__i = 0, G__19788__a = new Array(arguments.length -  2);
while (G__19788__i < G__19788__a.length) {G__19788__a[G__19788__i] = arguments[G__19788__i + 2]; ++G__19788__i;}
  more = new cljs.core.IndexedSeq(G__19788__a,0);
} 
return G__19787__delegate.call(this,x,y,more);};
G__19787.cljs$lang$maxFixedArity = 2;
G__19787.cljs$lang$applyTo = (function (arglist__19789){
var x = cljs.core.first(arglist__19789);
arglist__19789 = cljs.core.next(arglist__19789);
var y = cljs.core.first(arglist__19789);
var more = cljs.core.rest(arglist__19789);
return G__19787__delegate(x,y,more);
});
G__19787.cljs$core$IFn$_invoke$arity$variadic = G__19787__delegate;
return G__19787;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19790 = null;
if (arguments.length > 2) {
var G__19791__i = 0, G__19791__a = new Array(arguments.length -  2);
while (G__19791__i < G__19791__a.length) {G__19791__a[G__19791__i] = arguments[G__19791__i + 2]; ++G__19791__i;}
G__19790 = new cljs.core.IndexedSeq(G__19791__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19792__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19792 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19793__i = 0, G__19793__a = new Array(arguments.length -  2);
while (G__19793__i < G__19793__a.length) {G__19793__a[G__19793__i] = arguments[G__19793__i + 2]; ++G__19793__i;}
  more = new cljs.core.IndexedSeq(G__19793__a,0);
} 
return G__19792__delegate.call(this,x,y,more);};
G__19792.cljs$lang$maxFixedArity = 2;
G__19792.cljs$lang$applyTo = (function (arglist__19794){
var x = cljs.core.first(arglist__19794);
arglist__19794 = cljs.core.next(arglist__19794);
var y = cljs.core.first(arglist__19794);
var more = cljs.core.rest(arglist__19794);
return G__19792__delegate(x,y,more);
});
G__19792.cljs$core$IFn$_invoke$arity$variadic = G__19792__delegate;
return G__19792;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19795 = null;
if (arguments.length > 2) {
var G__19796__i = 0, G__19796__a = new Array(arguments.length -  2);
while (G__19796__i < G__19796__a.length) {G__19796__a[G__19796__i] = arguments[G__19796__i + 2]; ++G__19796__i;}
G__19795 = new cljs.core.IndexedSeq(G__19796__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19799 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19799) : Math.floor.call(null,G__19799));
} else {
var G__19800 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19800) : Math.ceil.call(null,G__19800));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19805__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19806 = y;
var G__19807 = cljs.core.first(more);
var G__19808 = cljs.core.next(more);
x = G__19806;
y = G__19807;
more = G__19808;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19809__i = 0, G__19809__a = new Array(arguments.length -  2);
while (G__19809__i < G__19809__a.length) {G__19809__a[G__19809__i] = arguments[G__19809__i + 2]; ++G__19809__i;}
  more = new cljs.core.IndexedSeq(G__19809__a,0);
} 
return G__19805__delegate.call(this,x,y,more);};
G__19805.cljs$lang$maxFixedArity = 2;
G__19805.cljs$lang$applyTo = (function (arglist__19810){
var x = cljs.core.first(arglist__19810);
arglist__19810 = cljs.core.next(arglist__19810);
var y = cljs.core.first(arglist__19810);
var more = cljs.core.rest(arglist__19810);
return G__19805__delegate(x,y,more);
});
G__19805.cljs$core$IFn$_invoke$arity$variadic = G__19805__delegate;
return G__19805;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19811 = null;
if (arguments.length > 2) {
var G__19812__i = 0, G__19812__a = new Array(arguments.length -  2);
while (G__19812__i < G__19812__a.length) {G__19812__a[G__19812__i] = arguments[G__19812__i + 2]; ++G__19812__i;}
G__19811 = new cljs.core.IndexedSeq(G__19812__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19813 = (n__$1 - (1));
var G__19814 = cljs.core.next(xs);
n__$1 = G__19813;
xs = G__19814;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19818 = x;
return goog.string.buildString(G__19818);
}
});
var str__2 = (function() { 
var G__19819__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19820 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19821 = cljs.core.next(more);
sb = G__19820;
more = G__19821;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19819 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19822__i = 0, G__19822__a = new Array(arguments.length -  1);
while (G__19822__i < G__19822__a.length) {G__19822__a[G__19822__i] = arguments[G__19822__i + 1]; ++G__19822__i;}
  ys = new cljs.core.IndexedSeq(G__19822__a,0);
} 
return G__19819__delegate.call(this,x,ys);};
G__19819.cljs$lang$maxFixedArity = 1;
G__19819.cljs$lang$applyTo = (function (arglist__19823){
var x = cljs.core.first(arglist__19823);
var ys = cljs.core.rest(arglist__19823);
return G__19819__delegate(x,ys);
});
G__19819.cljs$core$IFn$_invoke$arity$variadic = G__19819__delegate;
return G__19819;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19824 = null;
if (arguments.length > 1) {
var G__19825__i = 0, G__19825__a = new Array(arguments.length -  1);
while (G__19825__i < G__19825__a.length) {G__19825__a[G__19825__i] = arguments[G__19825__i + 1]; ++G__19825__i;}
G__19824 = new cljs.core.IndexedSeq(G__19825__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19826 = cljs.core.next(xs);
var G__19827 = cljs.core.next(ys);
xs = G__19826;
ys = G__19827;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19828 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19829 = cljs.core.next(s);
res = G__19828;
s = G__19829;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19834 = ((h + (cljs.core.hash((function (){var G__19832 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19832) : cljs.core.key.call(null,G__19832));
})()) ^ cljs.core.hash((function (){var G__19833 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19833) : cljs.core.val.call(null,G__19833));
})()))) % (4503599627370496));
var G__19835 = cljs.core.next(s);
h = G__19834;
s = G__19835;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19836 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19837 = cljs.core.next(s__$1);
h = G__19836;
s__$1 = G__19837;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19848_19858 = cljs.core.seq(fn_map);
var chunk__19849_19859 = null;
var count__19850_19860 = (0);
var i__19851_19861 = (0);
while(true){
if((i__19851_19861 < count__19850_19860)){
var vec__19852_19862 = chunk__19849_19859.cljs$core$IIndexed$_nth$arity$2(null,i__19851_19861);
var key_name_19863 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19852_19862,(0),null);
var f_19864 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19852_19862,(1),null);
var str_name_19865 = (function (){var G__19853 = key_name_19863;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19853) : cljs.core.name.call(null,G__19853));
})();
(obj[str_name_19865] = f_19864);

var G__19866 = seq__19848_19858;
var G__19867 = chunk__19849_19859;
var G__19868 = count__19850_19860;
var G__19869 = (i__19851_19861 + (1));
seq__19848_19858 = G__19866;
chunk__19849_19859 = G__19867;
count__19850_19860 = G__19868;
i__19851_19861 = G__19869;
continue;
} else {
var temp__4126__auto___19870 = cljs.core.seq(seq__19848_19858);
if(temp__4126__auto___19870){
var seq__19848_19871__$1 = temp__4126__auto___19870;
if(cljs.core.chunked_seq_QMARK_(seq__19848_19871__$1)){
var c__12974__auto___19872 = (function (){var G__19854 = seq__19848_19871__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19854) : cljs.core.chunk_first.call(null,G__19854));
})();
var G__19873 = (function (){var G__19855 = seq__19848_19871__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19855) : cljs.core.chunk_rest.call(null,G__19855));
})();
var G__19874 = c__12974__auto___19872;
var G__19875 = cljs.core.count(c__12974__auto___19872);
var G__19876 = (0);
seq__19848_19858 = G__19873;
chunk__19849_19859 = G__19874;
count__19850_19860 = G__19875;
i__19851_19861 = G__19876;
continue;
} else {
var vec__19856_19877 = cljs.core.first(seq__19848_19871__$1);
var key_name_19878 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19856_19877,(0),null);
var f_19879 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19856_19877,(1),null);
var str_name_19880 = (function (){var G__19857 = key_name_19878;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19857) : cljs.core.name.call(null,G__19857));
})();
(obj[str_name_19880] = f_19879);

var G__19881 = cljs.core.next(seq__19848_19871__$1);
var G__19882 = null;
var G__19883 = (0);
var G__19884 = (0);
seq__19848_19858 = G__19881;
chunk__19849_19859 = G__19882;
count__19850_19860 = G__19883;
i__19851_19861 = G__19884;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19886 = coll;
if(G__19886){
var bit__12868__auto__ = (G__19886.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__12868__auto__) || (G__19886.cljs$core$IReversible$)){
return true;
} else {
if((!G__19886.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19886);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19886);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19887 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19887;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19888 = (i - (1));
var G__19889 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19888;
r = G__19889;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19890__i = 0, G__19890__a = new Array(arguments.length -  0);
while (G__19890__i < G__19890__a.length) {G__19890__a[G__19890__i] = arguments[G__19890__i + 0]; ++G__19890__i;}
  xs = new cljs.core.IndexedSeq(G__19890__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19891){
var xs = cljs.core.seq(arglist__19891);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12187__auto__ = (coll == null);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var G__19895 = coll;
if(G__19895){
var bit__12861__auto__ = (G__19895.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__12861__auto__) || (G__19895.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19897 = x;
if(G__19897){
var bit__12868__auto__ = (G__19897.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__12868__auto__) || (G__19897.cljs$core$IList$)){
return true;
} else {
if((!G__19897.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19897);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12175__auto__ = cljs.core.not(a.ns);
if(and__12175__auto__){
return b.ns;
} else {
return and__12175__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19904 = a.ns;
var G__19905 = b.ns;
return goog.array.defaultCompare(G__19904,G__19905);
})();
if(((0) === nsc)){
var G__19906 = a.name;
var G__19907 = b.name;
return goog.array.defaultCompare(G__19906,G__19907);
} else {
return nsc;
}
}
} else {
var G__19908 = a.name;
var G__19909 = b.name;
return goog.array.defaultCompare(G__19908,G__19909);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__12608__auto__ = self__._hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19911 = null;
var G__19911__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19911__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19911 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19911__2.call(this,self__,coll);
case 3:
return G__19911__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19911.cljs$core$IFn$_invoke$arity$2 = G__19911__2;
G__19911.cljs$core$IFn$_invoke$arity$3 = G__19911__3;
return G__19911;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19910){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19910)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19913 = x;
if(G__19913){
var bit__12861__auto__ = (G__19913.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12861__auto__) || (G__19913.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19915 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19915) : cljs.core.name.call(null,G__19915));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19916 = ls.sval();
ls = G__19916;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19918 = s;
if(G__19918){
var bit__12861__auto__ = (G__19918.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__12861__auto__) || (G__19918.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19919 = cljs.core.next(s__$1);
s__$1 = G__19919;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19920 = (0);
var xs_19921 = cljs.core.seq(coll);
while(true){
if(xs_19921){
(ret[i_19920] = cljs.core.to_array(cljs.core.first(xs_19921)));

var G__19922 = (i_19920 + (1));
var G__19923 = cljs.core.next(xs_19921);
i_19920 = G__19922;
xs_19921 = G__19923;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19926 = (i + (1));
var G__19927 = cljs.core.next(s__$1);
i = G__19926;
s__$1 = G__19927;
continue;
} else {
return a;
}
break;
}
} else {
var n__13074__auto___19928 = size;
var i_19929 = (0);
while(true){
if((i_19929 < n__13074__auto___19928)){
(a[i_19929] = init_val_or_seq);

var G__19930 = (i_19929 + (1));
i_19929 = G__19930;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19933 = (i + (1));
var G__19934 = cljs.core.next(s__$1);
i = G__19933;
s__$1 = G__19934;
continue;
} else {
return a;
}
break;
}
} else {
var n__13074__auto___19935 = size;
var i_19936 = (0);
while(true){
if((i_19936 < n__13074__auto___19935)){
(a[i_19936] = init_val_or_seq);

var G__19937 = (i_19936 + (1));
i_19936 = G__19937;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19940 = (i + (1));
var G__19941 = cljs.core.next(s__$1);
i = G__19940;
s__$1 = G__19941;
continue;
} else {
return a;
}
break;
}
} else {
var n__13074__auto___19942 = size;
var i_19943 = (0);
while(true){
if((i_19943 < n__13074__auto___19942)){
(a[i_19943] = init_val_or_seq);

var G__19944 = (i_19943 + (1));
i_19943 = G__19944;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19947 = (i + (1));
var G__19948 = cljs.core.next(s__$1);
i = G__19947;
s__$1 = G__19948;
continue;
} else {
return a;
}
break;
}
} else {
var n__13074__auto___19949 = size;
var i_19950 = (0);
while(true){
if((i_19950 < n__13074__auto___19949)){
(a[i_19950] = init_val_or_seq);

var G__19951 = (i_19950 + (1));
i_19950 = G__19951;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19952 = cljs.core.next(s__$1);
var G__19953 = (i - (1));
var G__19954 = (sum + (1));
s__$1 = G__19952;
i = G__19953;
sum = G__19954;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19974__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19974 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19975__i = 0, G__19975__a = new Array(arguments.length -  2);
while (G__19975__i < G__19975__a.length) {G__19975__a[G__19975__i] = arguments[G__19975__i + 2]; ++G__19975__i;}
  zs = new cljs.core.IndexedSeq(G__19975__a,0);
} 
return G__19974__delegate.call(this,x,y,zs);};
G__19974.cljs$lang$maxFixedArity = 2;
G__19974.cljs$lang$applyTo = (function (arglist__19976){
var x = cljs.core.first(arglist__19976);
arglist__19976 = cljs.core.next(arglist__19976);
var y = cljs.core.first(arglist__19976);
var zs = cljs.core.rest(arglist__19976);
return G__19974__delegate(x,y,zs);
});
G__19974.cljs$core$IFn$_invoke$arity$variadic = G__19974__delegate;
return G__19974;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19977 = null;
if (arguments.length > 2) {
var G__19978__i = 0, G__19978__a = new Array(arguments.length -  2);
while (G__19978__i < G__19978__a.length) {G__19978__a[G__19978__i] = arguments[G__19978__i + 2]; ++G__19978__i;}
G__19977 = new cljs.core.IndexedSeq(G__19978__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19979__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19979 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19980__i = 0, G__19980__a = new Array(arguments.length -  4);
while (G__19980__i < G__19980__a.length) {G__19980__a[G__19980__i] = arguments[G__19980__i + 4]; ++G__19980__i;}
  more = new cljs.core.IndexedSeq(G__19980__a,0);
} 
return G__19979__delegate.call(this,a,b,c,d,more);};
G__19979.cljs$lang$maxFixedArity = 4;
G__19979.cljs$lang$applyTo = (function (arglist__19981){
var a = cljs.core.first(arglist__19981);
arglist__19981 = cljs.core.next(arglist__19981);
var b = cljs.core.first(arglist__19981);
arglist__19981 = cljs.core.next(arglist__19981);
var c = cljs.core.first(arglist__19981);
arglist__19981 = cljs.core.next(arglist__19981);
var d = cljs.core.first(arglist__19981);
var more = cljs.core.rest(arglist__19981);
return G__19979__delegate(a,b,c,d,more);
});
G__19979.cljs$core$IFn$_invoke$arity$variadic = G__19979__delegate;
return G__19979;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19982 = null;
if (arguments.length > 4) {
var G__19983__i = 0, G__19983__a = new Array(arguments.length -  4);
while (G__19983__i < G__19983__a.length) {G__19983__a[G__19983__i] = arguments[G__19983__i + 4]; ++G__19983__i;}
G__19982 = new cljs.core.IndexedSeq(G__19983__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19984__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19985 = ntcoll;
var G__19986 = cljs.core.first(vals);
var G__19987 = cljs.core.next(vals);
tcoll = G__19985;
val = G__19986;
vals = G__19987;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19984 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19988__i = 0, G__19988__a = new Array(arguments.length -  2);
while (G__19988__i < G__19988__a.length) {G__19988__a[G__19988__i] = arguments[G__19988__i + 2]; ++G__19988__i;}
  vals = new cljs.core.IndexedSeq(G__19988__a,0);
} 
return G__19984__delegate.call(this,tcoll,val,vals);};
G__19984.cljs$lang$maxFixedArity = 2;
G__19984.cljs$lang$applyTo = (function (arglist__19989){
var tcoll = cljs.core.first(arglist__19989);
arglist__19989 = cljs.core.next(arglist__19989);
var val = cljs.core.first(arglist__19989);
var vals = cljs.core.rest(arglist__19989);
return G__19984__delegate(tcoll,val,vals);
});
G__19984.cljs$core$IFn$_invoke$arity$variadic = G__19984__delegate;
return G__19984;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19990 = null;
if (arguments.length > 2) {
var G__19991__i = 0, G__19991__a = new Array(arguments.length -  2);
while (G__19991__i < G__19991__a.length) {G__19991__a[G__19991__i] = arguments[G__19991__i + 2]; ++G__19991__i;}
G__19990 = new cljs.core.IndexedSeq(G__19991__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19990);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19992__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19993 = ntcoll;
var G__19994 = cljs.core.first(kvs);
var G__19995 = cljs.core.second(kvs);
var G__19996 = cljs.core.nnext(kvs);
tcoll = G__19993;
key = G__19994;
val = G__19995;
kvs = G__19996;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19992 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19997__i = 0, G__19997__a = new Array(arguments.length -  3);
while (G__19997__i < G__19997__a.length) {G__19997__a[G__19997__i] = arguments[G__19997__i + 3]; ++G__19997__i;}
  kvs = new cljs.core.IndexedSeq(G__19997__a,0);
} 
return G__19992__delegate.call(this,tcoll,key,val,kvs);};
G__19992.cljs$lang$maxFixedArity = 3;
G__19992.cljs$lang$applyTo = (function (arglist__19998){
var tcoll = cljs.core.first(arglist__19998);
arglist__19998 = cljs.core.next(arglist__19998);
var key = cljs.core.first(arglist__19998);
arglist__19998 = cljs.core.next(arglist__19998);
var val = cljs.core.first(arglist__19998);
var kvs = cljs.core.rest(arglist__19998);
return G__19992__delegate(tcoll,key,val,kvs);
});
G__19992.cljs$core$IFn$_invoke$arity$variadic = G__19992__delegate;
return G__19992;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19999 = null;
if (arguments.length > 3) {
var G__20000__i = 0, G__20000__a = new Array(arguments.length -  3);
while (G__20000__i < G__20000__a.length) {G__20000__a[G__20000__i] = arguments[G__20000__i + 3]; ++G__20000__i;}
G__19999 = new cljs.core.IndexedSeq(G__20000__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__20001__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__20002 = ntcoll;
var G__20003 = cljs.core.first(ks);
var G__20004 = cljs.core.next(ks);
tcoll = G__20002;
key = G__20003;
ks = G__20004;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20001 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20005__i = 0, G__20005__a = new Array(arguments.length -  2);
while (G__20005__i < G__20005__a.length) {G__20005__a[G__20005__i] = arguments[G__20005__i + 2]; ++G__20005__i;}
  ks = new cljs.core.IndexedSeq(G__20005__a,0);
} 
return G__20001__delegate.call(this,tcoll,key,ks);};
G__20001.cljs$lang$maxFixedArity = 2;
G__20001.cljs$lang$applyTo = (function (arglist__20006){
var tcoll = cljs.core.first(arglist__20006);
arglist__20006 = cljs.core.next(arglist__20006);
var key = cljs.core.first(arglist__20006);
var ks = cljs.core.rest(arglist__20006);
return G__20001__delegate(tcoll,key,ks);
});
G__20001.cljs$core$IFn$_invoke$arity$variadic = G__20001__delegate;
return G__20001;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20007 = null;
if (arguments.length > 2) {
var G__20008__i = 0, G__20008__a = new Array(arguments.length -  2);
while (G__20008__i < G__20008__a.length) {G__20008__a[G__20008__i] = arguments[G__20008__i + 2]; ++G__20008__i;}
G__20007 = new cljs.core.IndexedSeq(G__20008__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20007);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20009__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20010 = ntcoll;
var G__20011 = cljs.core.first(vals);
var G__20012 = cljs.core.next(vals);
tcoll = G__20010;
val = G__20011;
vals = G__20012;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20009 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20013__i = 0, G__20013__a = new Array(arguments.length -  2);
while (G__20013__i < G__20013__a.length) {G__20013__a[G__20013__i] = arguments[G__20013__i + 2]; ++G__20013__i;}
  vals = new cljs.core.IndexedSeq(G__20013__a,0);
} 
return G__20009__delegate.call(this,tcoll,val,vals);};
G__20009.cljs$lang$maxFixedArity = 2;
G__20009.cljs$lang$applyTo = (function (arglist__20014){
var tcoll = cljs.core.first(arglist__20014);
arglist__20014 = cljs.core.next(arglist__20014);
var val = cljs.core.first(arglist__20014);
var vals = cljs.core.rest(arglist__20014);
return G__20009__delegate(tcoll,val,vals);
});
G__20009.cljs$core$IFn$_invoke$arity$variadic = G__20009__delegate;
return G__20009;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20015 = null;
if (arguments.length > 2) {
var G__20016__i = 0, G__20016__a = new Array(arguments.length -  2);
while (G__20016__i < G__20016__a.length) {G__20016__a[G__20016__i] = arguments[G__20016__i + 2]; ++G__20016__i;}
G__20015 = new cljs.core.IndexedSeq(G__20016__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13118 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13118);
} else {
var G__20227 = a13118;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20227) : f.call(null,G__20227));
}
} else {
var b13119 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13118,b13119);
} else {
var G__20228 = a13118;
var G__20229 = b13119;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20228,G__20229) : f.call(null,G__20228,G__20229));
}
} else {
var c13120 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13118,b13119,c13120);
} else {
var G__20230 = a13118;
var G__20231 = b13119;
var G__20232 = c13120;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20230,G__20231,G__20232) : f.call(null,G__20230,G__20231,G__20232));
}
} else {
var d13121 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13118,b13119,c13120,d13121);
} else {
var G__20233 = a13118;
var G__20234 = b13119;
var G__20235 = c13120;
var G__20236 = d13121;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20233,G__20234,G__20235,G__20236) : f.call(null,G__20233,G__20234,G__20235,G__20236));
}
} else {
var e13122 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13118,b13119,c13120,d13121,e13122);
} else {
var G__20237 = a13118;
var G__20238 = b13119;
var G__20239 = c13120;
var G__20240 = d13121;
var G__20241 = e13122;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20237,G__20238,G__20239,G__20240,G__20241) : f.call(null,G__20237,G__20238,G__20239,G__20240,G__20241));
}
} else {
var f13123 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13118,b13119,c13120,d13121,e13122,f13123);
} else {
var G__20242 = a13118;
var G__20243 = b13119;
var G__20244 = c13120;
var G__20245 = d13121;
var G__20246 = e13122;
var G__20247 = f13123;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20242,G__20243,G__20244,G__20245,G__20246,G__20247) : f.call(null,G__20242,G__20243,G__20244,G__20245,G__20246,G__20247));
}
} else {
var g13124 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13118,b13119,c13120,d13121,e13122,f13123,g13124);
} else {
var G__20248 = a13118;
var G__20249 = b13119;
var G__20250 = c13120;
var G__20251 = d13121;
var G__20252 = e13122;
var G__20253 = f13123;
var G__20254 = g13124;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__20248,G__20249,G__20250,G__20251,G__20252,G__20253,G__20254) : f.call(null,G__20248,G__20249,G__20250,G__20251,G__20252,G__20253,G__20254));
}
} else {
var h13125 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125);
} else {
var G__20255 = a13118;
var G__20256 = b13119;
var G__20257 = c13120;
var G__20258 = d13121;
var G__20259 = e13122;
var G__20260 = f13123;
var G__20261 = g13124;
var G__20262 = h13125;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262) : f.call(null,G__20255,G__20256,G__20257,G__20258,G__20259,G__20260,G__20261,G__20262));
}
} else {
var i13126 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126);
} else {
var G__20263 = a13118;
var G__20264 = b13119;
var G__20265 = c13120;
var G__20266 = d13121;
var G__20267 = e13122;
var G__20268 = f13123;
var G__20269 = g13124;
var G__20270 = h13125;
var G__20271 = i13126;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__20263,G__20264,G__20265,G__20266,G__20267,G__20268,G__20269,G__20270,G__20271) : f.call(null,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268,G__20269,G__20270,G__20271));
}
} else {
var j13127 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127);
} else {
var G__20272 = a13118;
var G__20273 = b13119;
var G__20274 = c13120;
var G__20275 = d13121;
var G__20276 = e13122;
var G__20277 = f13123;
var G__20278 = g13124;
var G__20279 = h13125;
var G__20280 = i13126;
var G__20281 = j13127;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281) : f.call(null,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278,G__20279,G__20280,G__20281));
}
} else {
var k13128 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128);
} else {
var G__20282 = a13118;
var G__20283 = b13119;
var G__20284 = c13120;
var G__20285 = d13121;
var G__20286 = e13122;
var G__20287 = f13123;
var G__20288 = g13124;
var G__20289 = h13125;
var G__20290 = i13126;
var G__20291 = j13127;
var G__20292 = k13128;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292) : f.call(null,G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289,G__20290,G__20291,G__20292));
}
} else {
var l13129 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129);
} else {
var G__20293 = a13118;
var G__20294 = b13119;
var G__20295 = c13120;
var G__20296 = d13121;
var G__20297 = e13122;
var G__20298 = f13123;
var G__20299 = g13124;
var G__20300 = h13125;
var G__20301 = i13126;
var G__20302 = j13127;
var G__20303 = k13128;
var G__20304 = l13129;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301,G__20302,G__20303,G__20304) : f.call(null,G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301,G__20302,G__20303,G__20304));
}
} else {
var m13130 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130);
} else {
var G__20305 = a13118;
var G__20306 = b13119;
var G__20307 = c13120;
var G__20308 = d13121;
var G__20309 = e13122;
var G__20310 = f13123;
var G__20311 = g13124;
var G__20312 = h13125;
var G__20313 = i13126;
var G__20314 = j13127;
var G__20315 = k13128;
var G__20316 = l13129;
var G__20317 = m13130;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316,G__20317) : f.call(null,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316,G__20317));
}
} else {
var n13131 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131);
} else {
var G__20318 = a13118;
var G__20319 = b13119;
var G__20320 = c13120;
var G__20321 = d13121;
var G__20322 = e13122;
var G__20323 = f13123;
var G__20324 = g13124;
var G__20325 = h13125;
var G__20326 = i13126;
var G__20327 = j13127;
var G__20328 = k13128;
var G__20329 = l13129;
var G__20330 = m13130;
var G__20331 = n13131;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331) : f.call(null,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331));
}
} else {
var o13132 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132);
} else {
var G__20332 = a13118;
var G__20333 = b13119;
var G__20334 = c13120;
var G__20335 = d13121;
var G__20336 = e13122;
var G__20337 = f13123;
var G__20338 = g13124;
var G__20339 = h13125;
var G__20340 = i13126;
var G__20341 = j13127;
var G__20342 = k13128;
var G__20343 = l13129;
var G__20344 = m13130;
var G__20345 = n13131;
var G__20346 = o13132;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345,G__20346) : f.call(null,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343,G__20344,G__20345,G__20346));
}
} else {
var p13133 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132,p13133);
} else {
var G__20347 = a13118;
var G__20348 = b13119;
var G__20349 = c13120;
var G__20350 = d13121;
var G__20351 = e13122;
var G__20352 = f13123;
var G__20353 = g13124;
var G__20354 = h13125;
var G__20355 = i13126;
var G__20356 = j13127;
var G__20357 = k13128;
var G__20358 = l13129;
var G__20359 = m13130;
var G__20360 = n13131;
var G__20361 = o13132;
var G__20362 = p13133;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361,G__20362) : f.call(null,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359,G__20360,G__20361,G__20362));
}
} else {
var q13134 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132,p13133,q13134);
} else {
var G__20363 = a13118;
var G__20364 = b13119;
var G__20365 = c13120;
var G__20366 = d13121;
var G__20367 = e13122;
var G__20368 = f13123;
var G__20369 = g13124;
var G__20370 = h13125;
var G__20371 = i13126;
var G__20372 = j13127;
var G__20373 = k13128;
var G__20374 = l13129;
var G__20375 = m13130;
var G__20376 = n13131;
var G__20377 = o13132;
var G__20378 = p13133;
var G__20379 = q13134;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374,G__20375,G__20376,G__20377,G__20378,G__20379) : f.call(null,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374,G__20375,G__20376,G__20377,G__20378,G__20379));
}
} else {
var r13135 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132,p13133,q13134,r13135);
} else {
var G__20380 = a13118;
var G__20381 = b13119;
var G__20382 = c13120;
var G__20383 = d13121;
var G__20384 = e13122;
var G__20385 = f13123;
var G__20386 = g13124;
var G__20387 = h13125;
var G__20388 = i13126;
var G__20389 = j13127;
var G__20390 = k13128;
var G__20391 = l13129;
var G__20392 = m13130;
var G__20393 = n13131;
var G__20394 = o13132;
var G__20395 = p13133;
var G__20396 = q13134;
var G__20397 = r13135;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397) : f.call(null,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397));
}
} else {
var s13136 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132,p13133,q13134,r13135,s13136);
} else {
var G__20398 = a13118;
var G__20399 = b13119;
var G__20400 = c13120;
var G__20401 = d13121;
var G__20402 = e13122;
var G__20403 = f13123;
var G__20404 = g13124;
var G__20405 = h13125;
var G__20406 = i13126;
var G__20407 = j13127;
var G__20408 = k13128;
var G__20409 = l13129;
var G__20410 = m13130;
var G__20411 = n13131;
var G__20412 = o13132;
var G__20413 = p13133;
var G__20414 = q13134;
var G__20415 = r13135;
var G__20416 = s13136;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413,G__20414,G__20415,G__20416) : f.call(null,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413,G__20414,G__20415,G__20416));
}
} else {
var t13137 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13118,b13119,c13120,d13121,e13122,f13123,g13124,h13125,i13126,j13127,k13128,l13129,m13130,n13131,o13132,p13133,q13134,r13135,s13136,t13137);
} else {
var G__20417 = a13118;
var G__20418 = b13119;
var G__20419 = c13120;
var G__20420 = d13121;
var G__20421 = e13122;
var G__20422 = f13123;
var G__20423 = g13124;
var G__20424 = h13125;
var G__20425 = i13126;
var G__20426 = j13127;
var G__20427 = k13128;
var G__20428 = l13129;
var G__20429 = m13130;
var G__20430 = n13131;
var G__20431 = o13132;
var G__20432 = p13133;
var G__20433 = q13134;
var G__20434 = r13135;
var G__20435 = s13136;
var G__20436 = t13137;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435,G__20436) : f.call(null,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435,G__20436));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__20437__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__20437 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__20438__i = 0, G__20438__a = new Array(arguments.length -  5);
while (G__20438__i < G__20438__a.length) {G__20438__a[G__20438__i] = arguments[G__20438__i + 5]; ++G__20438__i;}
  args = new cljs.core.IndexedSeq(G__20438__a,0);
} 
return G__20437__delegate.call(this,f,a,b,c,d,args);};
G__20437.cljs$lang$maxFixedArity = 5;
G__20437.cljs$lang$applyTo = (function (arglist__20439){
var f = cljs.core.first(arglist__20439);
arglist__20439 = cljs.core.next(arglist__20439);
var a = cljs.core.first(arglist__20439);
arglist__20439 = cljs.core.next(arglist__20439);
var b = cljs.core.first(arglist__20439);
arglist__20439 = cljs.core.next(arglist__20439);
var c = cljs.core.first(arglist__20439);
arglist__20439 = cljs.core.next(arglist__20439);
var d = cljs.core.first(arglist__20439);
var args = cljs.core.rest(arglist__20439);
return G__20437__delegate(f,a,b,c,d,args);
});
G__20437.cljs$core$IFn$_invoke$arity$variadic = G__20437__delegate;
return G__20437;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__20440 = null;
if (arguments.length > 5) {
var G__20441__i = 0, G__20441__a = new Array(arguments.length -  5);
while (G__20441__i < G__20441__a.length) {G__20441__a[G__20441__i] = arguments[G__20441__i + 5]; ++G__20441__i;}
G__20440 = new cljs.core.IndexedSeq(G__20441__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__20440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__20457 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20457) : f.call(null,G__20457));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__20458 = cljs.core.meta(obj);
var G__20459 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20458,G__20459) : f.call(null,G__20458,G__20459));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__20460 = cljs.core.meta(obj);
var G__20461 = a;
var G__20462 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20460,G__20461,G__20462) : f.call(null,G__20460,G__20461,G__20462));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__20463 = cljs.core.meta(obj);
var G__20464 = a;
var G__20465 = b;
var G__20466 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20463,G__20464,G__20465,G__20466) : f.call(null,G__20463,G__20464,G__20465,G__20466));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__20467 = cljs.core.meta(obj);
var G__20468 = a;
var G__20469 = b;
var G__20470 = c;
var G__20471 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20467,G__20468,G__20469,G__20470,G__20471) : f.call(null,G__20467,G__20468,G__20469,G__20470,G__20471));
})());
});
var vary_meta__7 = (function() { 
var G__20472__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__20472 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__20473__i = 0, G__20473__a = new Array(arguments.length -  6);
while (G__20473__i < G__20473__a.length) {G__20473__a[G__20473__i] = arguments[G__20473__i + 6]; ++G__20473__i;}
  args = new cljs.core.IndexedSeq(G__20473__a,0);
} 
return G__20472__delegate.call(this,obj,f,a,b,c,d,args);};
G__20472.cljs$lang$maxFixedArity = 6;
G__20472.cljs$lang$applyTo = (function (arglist__20474){
var obj = cljs.core.first(arglist__20474);
arglist__20474 = cljs.core.next(arglist__20474);
var f = cljs.core.first(arglist__20474);
arglist__20474 = cljs.core.next(arglist__20474);
var a = cljs.core.first(arglist__20474);
arglist__20474 = cljs.core.next(arglist__20474);
var b = cljs.core.first(arglist__20474);
arglist__20474 = cljs.core.next(arglist__20474);
var c = cljs.core.first(arglist__20474);
arglist__20474 = cljs.core.next(arglist__20474);
var d = cljs.core.first(arglist__20474);
var args = cljs.core.rest(arglist__20474);
return G__20472__delegate(obj,f,a,b,c,d,args);
});
G__20472.cljs$core$IFn$_invoke$arity$variadic = G__20472__delegate;
return G__20472;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__20475 = null;
if (arguments.length > 6) {
var G__20476__i = 0, G__20476__a = new Array(arguments.length -  6);
while (G__20476__i < G__20476__a.length) {G__20476__a[G__20476__i] = arguments[G__20476__i + 6]; ++G__20476__i;}
G__20475 = new cljs.core.IndexedSeq(G__20476__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__20475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__20477__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__20477 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20478__i = 0, G__20478__a = new Array(arguments.length -  2);
while (G__20478__i < G__20478__a.length) {G__20478__a[G__20478__i] = arguments[G__20478__i + 2]; ++G__20478__i;}
  more = new cljs.core.IndexedSeq(G__20478__a,0);
} 
return G__20477__delegate.call(this,x,y,more);};
G__20477.cljs$lang$maxFixedArity = 2;
G__20477.cljs$lang$applyTo = (function (arglist__20479){
var x = cljs.core.first(arglist__20479);
arglist__20479 = cljs.core.next(arglist__20479);
var y = cljs.core.first(arglist__20479);
var more = cljs.core.rest(arglist__20479);
return G__20477__delegate(x,y,more);
});
G__20477.cljs$core$IFn$_invoke$arity$variadic = G__20477__delegate;
return G__20477;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__20480 = null;
if (arguments.length > 2) {
var G__20481__i = 0, G__20481__a = new Array(arguments.length -  2);
while (G__20481__i < G__20481__a.length) {G__20481__a[G__20481__i] = arguments[G__20481__i + 2]; ++G__20481__i;}
G__20480 = new cljs.core.IndexedSeq(G__20481__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t20485 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t20485 = (function (nil_iter,meta20486){
this.nil_iter = nil_iter;
this.meta20486 = meta20486;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t20485.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t20485.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t20485.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t20485.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_20487){
var self__ = this;
var _20487__$1 = this;
return self__.meta20486;
});

cljs.core.t20485.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_20487,meta20486__$1){
var self__ = this;
var _20487__$1 = this;
return (new cljs.core.t20485(self__.nil_iter,meta20486__$1));
});

cljs.core.t20485.cljs$lang$type = true;

cljs.core.t20485.cljs$lang$ctorStr = "cljs.core/t20485";

cljs.core.t20485.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/t20485");
});

cljs.core.__GT_t20485 = (function __GT_t20485(nil_iter__$1,meta20486){
return (new cljs.core.t20485(nil_iter__$1,meta20486));
});

}

return (new cljs.core.t20485(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),2998,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),2994,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/brentvatne/coding/matter-cljs-fun/resources/public/js/compiled/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12175__auto__ = !((lt.stepper == null));
if(and__12175__auto__){
return self__.iter.hasNext();
} else {
return and__12175__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__20488 = lt;
var G__20489 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__20488,G__20489) : self__.xform.call(null,G__20488,G__20489));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20490 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20490) : self__.xform.call(null,G__20490));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__20492 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20492) : xform.call(null,G__20492));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__20494 = cljs.core.next(iters__$1);
iters__$1 = G__20494;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13074__auto___20495 = self__.iters.length;
var i_20496 = (0);
while(true){
if((i_20496 < n__13074__auto___20495)){
(self__.nexts[i_20496] = (self__.iters[i_20496]).next());

var G__20497 = (i_20496 + (1));
i_20496 = G__20497;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12175__auto__ = !((lt.stepper == null));
if(and__12175__auto__){
return this$.hasNext();
} else {
return and__12175__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20493 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20493) : self__.xform.call(null,G__20493));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__20502 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20502) : xform.call(null,G__20502));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__20503_20507 = cljs.core.seq(colls);
var chunk__20504_20508 = null;
var count__20505_20509 = (0);
var i__20506_20510 = (0);
while(true){
if((i__20506_20510 < count__20505_20509)){
var coll_20511 = chunk__20504_20508.cljs$core$IIndexed$_nth$arity$2(null,i__20506_20510);
iters.push(cljs.core.iter(coll_20511));

var G__20512 = seq__20503_20507;
var G__20513 = chunk__20504_20508;
var G__20514 = count__20505_20509;
var G__20515 = (i__20506_20510 + (1));
seq__20503_20507 = G__20512;
chunk__20504_20508 = G__20513;
count__20505_20509 = G__20514;
i__20506_20510 = G__20515;
continue;
} else {
var temp__4126__auto___20516 = cljs.core.seq(seq__20503_20507);
if(temp__4126__auto___20516){
var seq__20503_20517__$1 = temp__4126__auto___20516;
if(cljs.core.chunked_seq_QMARK_(seq__20503_20517__$1)){
var c__12974__auto___20518 = cljs.core.chunk_first(seq__20503_20517__$1);
var G__20519 = cljs.core.chunk_rest(seq__20503_20517__$1);
var G__20520 = c__12974__auto___20518;
var G__20521 = cljs.core.count(c__12974__auto___20518);
var G__20522 = (0);
seq__20503_20507 = G__20519;
chunk__20504_20508 = G__20520;
count__20505_20509 = G__20521;
i__20506_20510 = G__20522;
continue;
} else {
var coll_20523 = cljs.core.first(seq__20503_20517__$1);
iters.push(cljs.core.iter(coll_20523));

var G__20524 = cljs.core.next(seq__20503_20517__$1);
var G__20525 = null;
var G__20526 = (0);
var G__20527 = (0);
seq__20503_20507 = G__20524;
chunk__20504_20508 = G__20525;
count__20505_20509 = G__20526;
i__20506_20510 = G__20527;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12187__auto__ = cljs.core.seq(coll);
if(or__12187__auto__){
return or__12187__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__20528__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__20528 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20529__i = 0, G__20529__a = new Array(arguments.length -  2);
while (G__20529__i < G__20529__a.length) {G__20529__a[G__20529__i] = arguments[G__20529__i + 2]; ++G__20529__i;}
  colls = new cljs.core.IndexedSeq(G__20529__a,0);
} 
return G__20528__delegate.call(this,xform,coll,colls);};
G__20528.cljs$lang$maxFixedArity = 2;
G__20528.cljs$lang$applyTo = (function (arglist__20530){
var xform = cljs.core.first(arglist__20530);
arglist__20530 = cljs.core.next(arglist__20530);
var coll = cljs.core.first(arglist__20530);
var colls = cljs.core.rest(arglist__20530);
return G__20528__delegate(xform,coll,colls);
});
G__20528.cljs$core$IFn$_invoke$arity$variadic = G__20528__delegate;
return G__20528;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__20531 = null;
if (arguments.length > 2) {
var G__20532__i = 0, G__20532__a = new Array(arguments.length -  2);
while (G__20532__i < G__20532__a.length) {G__20532__a[G__20532__i] = arguments[G__20532__i + 2]; ++G__20532__i;}
G__20531 = new cljs.core.IndexedSeq(G__20532__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__20531);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__20534 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20534) : pred.call(null,G__20534));
})())){
var G__20535 = pred;
var G__20536 = cljs.core.next(coll);
pred = G__20535;
coll = G__20536;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12187__auto__ = (function (){var G__20540 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20540) : pred.call(null,G__20540));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var G__20541 = pred;
var G__20542 = cljs.core.next(coll);
pred = G__20541;
coll = G__20542;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20549 = null;
var G__20549__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20549__1 = (function (x){
return cljs.core.not((function (){var G__20546 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20546) : f.call(null,G__20546));
})());
});
var G__20549__2 = (function (x,y){
return cljs.core.not((function (){var G__20547 = x;
var G__20548 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20547,G__20548) : f.call(null,G__20547,G__20548));
})());
});
var G__20549__3 = (function() { 
var G__20550__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20550 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20551__i = 0, G__20551__a = new Array(arguments.length -  2);
while (G__20551__i < G__20551__a.length) {G__20551__a[G__20551__i] = arguments[G__20551__i + 2]; ++G__20551__i;}
  zs = new cljs.core.IndexedSeq(G__20551__a,0);
} 
return G__20550__delegate.call(this,x,y,zs);};
G__20550.cljs$lang$maxFixedArity = 2;
G__20550.cljs$lang$applyTo = (function (arglist__20552){
var x = cljs.core.first(arglist__20552);
arglist__20552 = cljs.core.next(arglist__20552);
var y = cljs.core.first(arglist__20552);
var zs = cljs.core.rest(arglist__20552);
return G__20550__delegate(x,y,zs);
});
G__20550.cljs$core$IFn$_invoke$arity$variadic = G__20550__delegate;
return G__20550;
})()
;
G__20549 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20549__0.call(this);
case 1:
return G__20549__1.call(this,x);
case 2:
return G__20549__2.call(this,x,y);
default:
var G__20553 = null;
if (arguments.length > 2) {
var G__20554__i = 0, G__20554__a = new Array(arguments.length -  2);
while (G__20554__i < G__20554__a.length) {G__20554__a[G__20554__i] = arguments[G__20554__i + 2]; ++G__20554__i;}
G__20553 = new cljs.core.IndexedSeq(G__20554__a,0);
}
return G__20549__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20549.cljs$lang$maxFixedArity = 2;
G__20549.cljs$lang$applyTo = G__20549__3.cljs$lang$applyTo;
G__20549.cljs$core$IFn$_invoke$arity$0 = G__20549__0;
G__20549.cljs$core$IFn$_invoke$arity$1 = G__20549__1;
G__20549.cljs$core$IFn$_invoke$arity$2 = G__20549__2;
G__20549.cljs$core$IFn$_invoke$arity$variadic = G__20549__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20549;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20555__delegate = function (args){
return x;
};
var G__20555 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20556__i = 0, G__20556__a = new Array(arguments.length -  0);
while (G__20556__i < G__20556__a.length) {G__20556__a[G__20556__i] = arguments[G__20556__i + 0]; ++G__20556__i;}
  args = new cljs.core.IndexedSeq(G__20556__a,0);
} 
return G__20555__delegate.call(this,args);};
G__20555.cljs$lang$maxFixedArity = 0;
G__20555.cljs$lang$applyTo = (function (arglist__20557){
var args = cljs.core.seq(arglist__20557);
return G__20555__delegate(args);
});
G__20555.cljs$core$IFn$_invoke$arity$variadic = G__20555__delegate;
return G__20555;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__20612 = null;
var G__20612__0 = (function (){
var G__20585 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20585) : f.call(null,G__20585));
});
var G__20612__1 = (function (x){
var G__20586 = (function (){var G__20587 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20587) : g.call(null,G__20587));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20586) : f.call(null,G__20586));
});
var G__20612__2 = (function (x,y){
var G__20588 = (function (){var G__20589 = x;
var G__20590 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20589,G__20590) : g.call(null,G__20589,G__20590));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20588) : f.call(null,G__20588));
});
var G__20612__3 = (function (x,y,z){
var G__20591 = (function (){var G__20592 = x;
var G__20593 = y;
var G__20594 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20592,G__20593,G__20594) : g.call(null,G__20592,G__20593,G__20594));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20591) : f.call(null,G__20591));
});
var G__20612__4 = (function() { 
var G__20613__delegate = function (x,y,z,args){
var G__20595 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20595) : f.call(null,G__20595));
};
var G__20613 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20614__i = 0, G__20614__a = new Array(arguments.length -  3);
while (G__20614__i < G__20614__a.length) {G__20614__a[G__20614__i] = arguments[G__20614__i + 3]; ++G__20614__i;}
  args = new cljs.core.IndexedSeq(G__20614__a,0);
} 
return G__20613__delegate.call(this,x,y,z,args);};
G__20613.cljs$lang$maxFixedArity = 3;
G__20613.cljs$lang$applyTo = (function (arglist__20615){
var x = cljs.core.first(arglist__20615);
arglist__20615 = cljs.core.next(arglist__20615);
var y = cljs.core.first(arglist__20615);
arglist__20615 = cljs.core.next(arglist__20615);
var z = cljs.core.first(arglist__20615);
var args = cljs.core.rest(arglist__20615);
return G__20613__delegate(x,y,z,args);
});
G__20613.cljs$core$IFn$_invoke$arity$variadic = G__20613__delegate;
return G__20613;
})()
;
G__20612 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20612__0.call(this);
case 1:
return G__20612__1.call(this,x);
case 2:
return G__20612__2.call(this,x,y);
case 3:
return G__20612__3.call(this,x,y,z);
default:
var G__20616 = null;
if (arguments.length > 3) {
var G__20617__i = 0, G__20617__a = new Array(arguments.length -  3);
while (G__20617__i < G__20617__a.length) {G__20617__a[G__20617__i] = arguments[G__20617__i + 3]; ++G__20617__i;}
G__20616 = new cljs.core.IndexedSeq(G__20617__a,0);
}
return G__20612__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20616);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20612.cljs$lang$maxFixedArity = 3;
G__20612.cljs$lang$applyTo = G__20612__4.cljs$lang$applyTo;
G__20612.cljs$core$IFn$_invoke$arity$0 = G__20612__0;
G__20612.cljs$core$IFn$_invoke$arity$1 = G__20612__1;
G__20612.cljs$core$IFn$_invoke$arity$2 = G__20612__2;
G__20612.cljs$core$IFn$_invoke$arity$3 = G__20612__3;
G__20612.cljs$core$IFn$_invoke$arity$variadic = G__20612__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20612;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__20618 = null;
var G__20618__0 = (function (){
var G__20596 = (function (){var G__20597 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20597) : g.call(null,G__20597));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20596) : f.call(null,G__20596));
});
var G__20618__1 = (function (x){
var G__20598 = (function (){var G__20599 = (function (){var G__20600 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20600) : h.call(null,G__20600));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20599) : g.call(null,G__20599));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20598) : f.call(null,G__20598));
});
var G__20618__2 = (function (x,y){
var G__20601 = (function (){var G__20602 = (function (){var G__20603 = x;
var G__20604 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20603,G__20604) : h.call(null,G__20603,G__20604));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20602) : g.call(null,G__20602));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20601) : f.call(null,G__20601));
});
var G__20618__3 = (function (x,y,z){
var G__20605 = (function (){var G__20606 = (function (){var G__20607 = x;
var G__20608 = y;
var G__20609 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20607,G__20608,G__20609) : h.call(null,G__20607,G__20608,G__20609));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20606) : g.call(null,G__20606));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20605) : f.call(null,G__20605));
});
var G__20618__4 = (function() { 
var G__20619__delegate = function (x,y,z,args){
var G__20610 = (function (){var G__20611 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20611) : g.call(null,G__20611));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20610) : f.call(null,G__20610));
};
var G__20619 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20620__i = 0, G__20620__a = new Array(arguments.length -  3);
while (G__20620__i < G__20620__a.length) {G__20620__a[G__20620__i] = arguments[G__20620__i + 3]; ++G__20620__i;}
  args = new cljs.core.IndexedSeq(G__20620__a,0);
} 
return G__20619__delegate.call(this,x,y,z,args);};
G__20619.cljs$lang$maxFixedArity = 3;
G__20619.cljs$lang$applyTo = (function (arglist__20621){
var x = cljs.core.first(arglist__20621);
arglist__20621 = cljs.core.next(arglist__20621);
var y = cljs.core.first(arglist__20621);
arglist__20621 = cljs.core.next(arglist__20621);
var z = cljs.core.first(arglist__20621);
var args = cljs.core.rest(arglist__20621);
return G__20619__delegate(x,y,z,args);
});
G__20619.cljs$core$IFn$_invoke$arity$variadic = G__20619__delegate;
return G__20619;
})()
;
G__20618 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20618__0.call(this);
case 1:
return G__20618__1.call(this,x);
case 2:
return G__20618__2.call(this,x,y);
case 3:
return G__20618__3.call(this,x,y,z);
default:
var G__20622 = null;
if (arguments.length > 3) {
var G__20623__i = 0, G__20623__a = new Array(arguments.length -  3);
while (G__20623__i < G__20623__a.length) {G__20623__a[G__20623__i] = arguments[G__20623__i + 3]; ++G__20623__i;}
G__20622 = new cljs.core.IndexedSeq(G__20623__a,0);
}
return G__20618__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20618.cljs$lang$maxFixedArity = 3;
G__20618.cljs$lang$applyTo = G__20618__4.cljs$lang$applyTo;
G__20618.cljs$core$IFn$_invoke$arity$0 = G__20618__0;
G__20618.cljs$core$IFn$_invoke$arity$1 = G__20618__1;
G__20618.cljs$core$IFn$_invoke$arity$2 = G__20618__2;
G__20618.cljs$core$IFn$_invoke$arity$3 = G__20618__3;
G__20618.cljs$core$IFn$_invoke$arity$variadic = G__20618__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20618;
})()
});
var comp__4 = (function() { 
var G__20624__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__20625__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__20626 = cljs.core.first(fs__$2).call(null,ret);
var G__20627 = cljs.core.next(fs__$2);
ret = G__20626;
fs__$2 = G__20627;
continue;
} else {
return ret;
}
break;
}
};
var G__20625 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20628__i = 0, G__20628__a = new Array(arguments.length -  0);
while (G__20628__i < G__20628__a.length) {G__20628__a[G__20628__i] = arguments[G__20628__i + 0]; ++G__20628__i;}
  args = new cljs.core.IndexedSeq(G__20628__a,0);
} 
return G__20625__delegate.call(this,args);};
G__20625.cljs$lang$maxFixedArity = 0;
G__20625.cljs$lang$applyTo = (function (arglist__20629){
var args = cljs.core.seq(arglist__20629);
return G__20625__delegate(args);
});
G__20625.cljs$core$IFn$_invoke$arity$variadic = G__20625__delegate;
return G__20625;
})()
;
;})(fs__$1))
};
var G__20624 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__20630__i = 0, G__20630__a = new Array(arguments.length -  3);
while (G__20630__i < G__20630__a.length) {G__20630__a[G__20630__i] = arguments[G__20630__i + 3]; ++G__20630__i;}
  fs = new cljs.core.IndexedSeq(G__20630__a,0);
} 
return G__20624__delegate.call(this,f1,f2,f3,fs);};
G__20624.cljs$lang$maxFixedArity = 3;
G__20624.cljs$lang$applyTo = (function (arglist__20631){
var f1 = cljs.core.first(arglist__20631);
arglist__20631 = cljs.core.next(arglist__20631);
var f2 = cljs.core.first(arglist__20631);
arglist__20631 = cljs.core.next(arglist__20631);
var f3 = cljs.core.first(arglist__20631);
var fs = cljs.core.rest(arglist__20631);
return G__20624__delegate(f1,f2,f3,fs);
});
G__20624.cljs$core$IFn$_invoke$arity$variadic = G__20624__delegate;
return G__20624;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__20632 = null;
if (arguments.length > 3) {
var G__20633__i = 0, G__20633__a = new Array(arguments.length -  3);
while (G__20633__i < G__20633__a.length) {G__20633__a[G__20633__i] = arguments[G__20633__i + 3]; ++G__20633__i;}
G__20632 = new cljs.core.IndexedSeq(G__20633__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__20632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20718 = null;
var G__20718__0 = (function (){
var G__20676 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20676) : f.call(null,G__20676));
});
var G__20718__1 = (function (x){
var G__20677 = arg1;
var G__20678 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20677,G__20678) : f.call(null,G__20677,G__20678));
});
var G__20718__2 = (function (x,y){
var G__20679 = arg1;
var G__20680 = x;
var G__20681 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20679,G__20680,G__20681) : f.call(null,G__20679,G__20680,G__20681));
});
var G__20718__3 = (function (x,y,z){
var G__20682 = arg1;
var G__20683 = x;
var G__20684 = y;
var G__20685 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20682,G__20683,G__20684,G__20685) : f.call(null,G__20682,G__20683,G__20684,G__20685));
});
var G__20718__4 = (function() { 
var G__20719__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20719 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20720__i = 0, G__20720__a = new Array(arguments.length -  3);
while (G__20720__i < G__20720__a.length) {G__20720__a[G__20720__i] = arguments[G__20720__i + 3]; ++G__20720__i;}
  args = new cljs.core.IndexedSeq(G__20720__a,0);
} 
return G__20719__delegate.call(this,x,y,z,args);};
G__20719.cljs$lang$maxFixedArity = 3;
G__20719.cljs$lang$applyTo = (function (arglist__20721){
var x = cljs.core.first(arglist__20721);
arglist__20721 = cljs.core.next(arglist__20721);
var y = cljs.core.first(arglist__20721);
arglist__20721 = cljs.core.next(arglist__20721);
var z = cljs.core.first(arglist__20721);
var args = cljs.core.rest(arglist__20721);
return G__20719__delegate(x,y,z,args);
});
G__20719.cljs$core$IFn$_invoke$arity$variadic = G__20719__delegate;
return G__20719;
})()
;
G__20718 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20718__0.call(this);
case 1:
return G__20718__1.call(this,x);
case 2:
return G__20718__2.call(this,x,y);
case 3:
return G__20718__3.call(this,x,y,z);
default:
var G__20722 = null;
if (arguments.length > 3) {
var G__20723__i = 0, G__20723__a = new Array(arguments.length -  3);
while (G__20723__i < G__20723__a.length) {G__20723__a[G__20723__i] = arguments[G__20723__i + 3]; ++G__20723__i;}
G__20722 = new cljs.core.IndexedSeq(G__20723__a,0);
}
return G__20718__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20722);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20718.cljs$lang$maxFixedArity = 3;
G__20718.cljs$lang$applyTo = G__20718__4.cljs$lang$applyTo;
G__20718.cljs$core$IFn$_invoke$arity$0 = G__20718__0;
G__20718.cljs$core$IFn$_invoke$arity$1 = G__20718__1;
G__20718.cljs$core$IFn$_invoke$arity$2 = G__20718__2;
G__20718.cljs$core$IFn$_invoke$arity$3 = G__20718__3;
G__20718.cljs$core$IFn$_invoke$arity$variadic = G__20718__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20718;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20724 = null;
var G__20724__0 = (function (){
var G__20686 = arg1;
var G__20687 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20686,G__20687) : f.call(null,G__20686,G__20687));
});
var G__20724__1 = (function (x){
var G__20688 = arg1;
var G__20689 = arg2;
var G__20690 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20688,G__20689,G__20690) : f.call(null,G__20688,G__20689,G__20690));
});
var G__20724__2 = (function (x,y){
var G__20691 = arg1;
var G__20692 = arg2;
var G__20693 = x;
var G__20694 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20691,G__20692,G__20693,G__20694) : f.call(null,G__20691,G__20692,G__20693,G__20694));
});
var G__20724__3 = (function (x,y,z){
var G__20695 = arg1;
var G__20696 = arg2;
var G__20697 = x;
var G__20698 = y;
var G__20699 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20695,G__20696,G__20697,G__20698,G__20699) : f.call(null,G__20695,G__20696,G__20697,G__20698,G__20699));
});
var G__20724__4 = (function() { 
var G__20725__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20725 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20726__i = 0, G__20726__a = new Array(arguments.length -  3);
while (G__20726__i < G__20726__a.length) {G__20726__a[G__20726__i] = arguments[G__20726__i + 3]; ++G__20726__i;}
  args = new cljs.core.IndexedSeq(G__20726__a,0);
} 
return G__20725__delegate.call(this,x,y,z,args);};
G__20725.cljs$lang$maxFixedArity = 3;
G__20725.cljs$lang$applyTo = (function (arglist__20727){
var x = cljs.core.first(arglist__20727);
arglist__20727 = cljs.core.next(arglist__20727);
var y = cljs.core.first(arglist__20727);
arglist__20727 = cljs.core.next(arglist__20727);
var z = cljs.core.first(arglist__20727);
var args = cljs.core.rest(arglist__20727);
return G__20725__delegate(x,y,z,args);
});
G__20725.cljs$core$IFn$_invoke$arity$variadic = G__20725__delegate;
return G__20725;
})()
;
G__20724 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20724__0.call(this);
case 1:
return G__20724__1.call(this,x);
case 2:
return G__20724__2.call(this,x,y);
case 3:
return G__20724__3.call(this,x,y,z);
default:
var G__20728 = null;
if (arguments.length > 3) {
var G__20729__i = 0, G__20729__a = new Array(arguments.length -  3);
while (G__20729__i < G__20729__a.length) {G__20729__a[G__20729__i] = arguments[G__20729__i + 3]; ++G__20729__i;}
G__20728 = new cljs.core.IndexedSeq(G__20729__a,0);
}
return G__20724__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20724.cljs$lang$maxFixedArity = 3;
G__20724.cljs$lang$applyTo = G__20724__4.cljs$lang$applyTo;
G__20724.cljs$core$IFn$_invoke$arity$0 = G__20724__0;
G__20724.cljs$core$IFn$_invoke$arity$1 = G__20724__1;
G__20724.cljs$core$IFn$_invoke$arity$2 = G__20724__2;
G__20724.cljs$core$IFn$_invoke$arity$3 = G__20724__3;
G__20724.cljs$core$IFn$_invoke$arity$variadic = G__20724__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20724;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20730 = null;
var G__20730__0 = (function (){
var G__20700 = arg1;
var G__20701 = arg2;
var G__20702 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20700,G__20701,G__20702) : f.call(null,G__20700,G__20701,G__20702));
});
var G__20730__1 = (function (x){
var G__20703 = arg1;
var G__20704 = arg2;
var G__20705 = arg3;
var G__20706 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20703,G__20704,G__20705,G__20706) : f.call(null,G__20703,G__20704,G__20705,G__20706));
});
var G__20730__2 = (function (x,y){
var G__20707 = arg1;
var G__20708 = arg2;
var G__20709 = arg3;
var G__20710 = x;
var G__20711 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20707,G__20708,G__20709,G__20710,G__20711) : f.call(null,G__20707,G__20708,G__20709,G__20710,G__20711));
});
var G__20730__3 = (function (x,y,z){
var G__20712 = arg1;
var G__20713 = arg2;
var G__20714 = arg3;
var G__20715 = x;
var G__20716 = y;
var G__20717 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20712,G__20713,G__20714,G__20715,G__20716,G__20717) : f.call(null,G__20712,G__20713,G__20714,G__20715,G__20716,G__20717));
});
var G__20730__4 = (function() { 
var G__20731__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20731 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20732__i = 0, G__20732__a = new Array(arguments.length -  3);
while (G__20732__i < G__20732__a.length) {G__20732__a[G__20732__i] = arguments[G__20732__i + 3]; ++G__20732__i;}
  args = new cljs.core.IndexedSeq(G__20732__a,0);
} 
return G__20731__delegate.call(this,x,y,z,args);};
G__20731.cljs$lang$maxFixedArity = 3;
G__20731.cljs$lang$applyTo = (function (arglist__20733){
var x = cljs.core.first(arglist__20733);
arglist__20733 = cljs.core.next(arglist__20733);
var y = cljs.core.first(arglist__20733);
arglist__20733 = cljs.core.next(arglist__20733);
var z = cljs.core.first(arglist__20733);
var args = cljs.core.rest(arglist__20733);
return G__20731__delegate(x,y,z,args);
});
G__20731.cljs$core$IFn$_invoke$arity$variadic = G__20731__delegate;
return G__20731;
})()
;
G__20730 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20730__0.call(this);
case 1:
return G__20730__1.call(this,x);
case 2:
return G__20730__2.call(this,x,y);
case 3:
return G__20730__3.call(this,x,y,z);
default:
var G__20734 = null;
if (arguments.length > 3) {
var G__20735__i = 0, G__20735__a = new Array(arguments.length -  3);
while (G__20735__i < G__20735__a.length) {G__20735__a[G__20735__i] = arguments[G__20735__i + 3]; ++G__20735__i;}
G__20734 = new cljs.core.IndexedSeq(G__20735__a,0);
}
return G__20730__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20730.cljs$lang$maxFixedArity = 3;
G__20730.cljs$lang$applyTo = G__20730__4.cljs$lang$applyTo;
G__20730.cljs$core$IFn$_invoke$arity$0 = G__20730__0;
G__20730.cljs$core$IFn$_invoke$arity$1 = G__20730__1;
G__20730.cljs$core$IFn$_invoke$arity$2 = G__20730__2;
G__20730.cljs$core$IFn$_invoke$arity$3 = G__20730__3;
G__20730.cljs$core$IFn$_invoke$arity$variadic = G__20730__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20730;
})()
});
var partial__5 = (function() { 
var G__20736__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20737__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20737 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20738__i = 0, G__20738__a = new Array(arguments.length -  0);
while (G__20738__i < G__20738__a.length) {G__20738__a[G__20738__i] = arguments[G__20738__i + 0]; ++G__20738__i;}
  args = new cljs.core.IndexedSeq(G__20738__a,0);
} 
return G__20737__delegate.call(this,args);};
G__20737.cljs$lang$maxFixedArity = 0;
G__20737.cljs$lang$applyTo = (function (arglist__20739){
var args = cljs.core.seq(arglist__20739);
return G__20737__delegate(args);
});
G__20737.cljs$core$IFn$_invoke$arity$variadic = G__20737__delegate;
return G__20737;
})()
;
};
var G__20736 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20740__i = 0, G__20740__a = new Array(arguments.length -  4);
while (G__20740__i < G__20740__a.length) {G__20740__a[G__20740__i] = arguments[G__20740__i + 4]; ++G__20740__i;}
  more = new cljs.core.IndexedSeq(G__20740__a,0);
} 
return G__20736__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20736.cljs$lang$maxFixedArity = 4;
G__20736.cljs$lang$applyTo = (function (arglist__20741){
var f = cljs.core.first(arglist__20741);
arglist__20741 = cljs.core.next(arglist__20741);
var arg1 = cljs.core.first(arglist__20741);
arglist__20741 = cljs.core.next(arglist__20741);
var arg2 = cljs.core.first(arglist__20741);
arglist__20741 = cljs.core.next(arglist__20741);
var arg3 = cljs.core.first(arglist__20741);
var more = cljs.core.rest(arglist__20741);
return G__20736__delegate(f,arg1,arg2,arg3,more);
});
G__20736.cljs$core$IFn$_invoke$arity$variadic = G__20736__delegate;
return G__20736;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20742 = null;
if (arguments.length > 4) {
var G__20743__i = 0, G__20743__a = new Array(arguments.length -  4);
while (G__20743__i < G__20743__a.length) {G__20743__a[G__20743__i] = arguments[G__20743__i + 4]; ++G__20743__i;}
G__20742 = new cljs.core.IndexedSeq(G__20743__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20742);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20776 = null;
var G__20776__1 = (function (a){
var G__20760 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20760) : f.call(null,G__20760));
});
var G__20776__2 = (function (a,b){
var G__20761 = (((a == null))?x:a);
var G__20762 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20761,G__20762) : f.call(null,G__20761,G__20762));
});
var G__20776__3 = (function (a,b,c){
var G__20763 = (((a == null))?x:a);
var G__20764 = b;
var G__20765 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20763,G__20764,G__20765) : f.call(null,G__20763,G__20764,G__20765));
});
var G__20776__4 = (function() { 
var G__20777__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20777 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20778__i = 0, G__20778__a = new Array(arguments.length -  3);
while (G__20778__i < G__20778__a.length) {G__20778__a[G__20778__i] = arguments[G__20778__i + 3]; ++G__20778__i;}
  ds = new cljs.core.IndexedSeq(G__20778__a,0);
} 
return G__20777__delegate.call(this,a,b,c,ds);};
G__20777.cljs$lang$maxFixedArity = 3;
G__20777.cljs$lang$applyTo = (function (arglist__20779){
var a = cljs.core.first(arglist__20779);
arglist__20779 = cljs.core.next(arglist__20779);
var b = cljs.core.first(arglist__20779);
arglist__20779 = cljs.core.next(arglist__20779);
var c = cljs.core.first(arglist__20779);
var ds = cljs.core.rest(arglist__20779);
return G__20777__delegate(a,b,c,ds);
});
G__20777.cljs$core$IFn$_invoke$arity$variadic = G__20777__delegate;
return G__20777;
})()
;
G__20776 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20776__1.call(this,a);
case 2:
return G__20776__2.call(this,a,b);
case 3:
return G__20776__3.call(this,a,b,c);
default:
var G__20780 = null;
if (arguments.length > 3) {
var G__20781__i = 0, G__20781__a = new Array(arguments.length -  3);
while (G__20781__i < G__20781__a.length) {G__20781__a[G__20781__i] = arguments[G__20781__i + 3]; ++G__20781__i;}
G__20780 = new cljs.core.IndexedSeq(G__20781__a,0);
}
return G__20776__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20780);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20776.cljs$lang$maxFixedArity = 3;
G__20776.cljs$lang$applyTo = G__20776__4.cljs$lang$applyTo;
G__20776.cljs$core$IFn$_invoke$arity$1 = G__20776__1;
G__20776.cljs$core$IFn$_invoke$arity$2 = G__20776__2;
G__20776.cljs$core$IFn$_invoke$arity$3 = G__20776__3;
G__20776.cljs$core$IFn$_invoke$arity$variadic = G__20776__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20776;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20782 = null;
var G__20782__2 = (function (a,b){
var G__20766 = (((a == null))?x:a);
var G__20767 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20766,G__20767) : f.call(null,G__20766,G__20767));
});
var G__20782__3 = (function (a,b,c){
var G__20768 = (((a == null))?x:a);
var G__20769 = (((b == null))?y:b);
var G__20770 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20768,G__20769,G__20770) : f.call(null,G__20768,G__20769,G__20770));
});
var G__20782__4 = (function() { 
var G__20783__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20783 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20784__i = 0, G__20784__a = new Array(arguments.length -  3);
while (G__20784__i < G__20784__a.length) {G__20784__a[G__20784__i] = arguments[G__20784__i + 3]; ++G__20784__i;}
  ds = new cljs.core.IndexedSeq(G__20784__a,0);
} 
return G__20783__delegate.call(this,a,b,c,ds);};
G__20783.cljs$lang$maxFixedArity = 3;
G__20783.cljs$lang$applyTo = (function (arglist__20785){
var a = cljs.core.first(arglist__20785);
arglist__20785 = cljs.core.next(arglist__20785);
var b = cljs.core.first(arglist__20785);
arglist__20785 = cljs.core.next(arglist__20785);
var c = cljs.core.first(arglist__20785);
var ds = cljs.core.rest(arglist__20785);
return G__20783__delegate(a,b,c,ds);
});
G__20783.cljs$core$IFn$_invoke$arity$variadic = G__20783__delegate;
return G__20783;
})()
;
G__20782 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20782__2.call(this,a,b);
case 3:
return G__20782__3.call(this,a,b,c);
default:
var G__20786 = null;
if (arguments.length > 3) {
var G__20787__i = 0, G__20787__a = new Array(arguments.length -  3);
while (G__20787__i < G__20787__a.length) {G__20787__a[G__20787__i] = arguments[G__20787__i + 3]; ++G__20787__i;}
G__20786 = new cljs.core.IndexedSeq(G__20787__a,0);
}
return G__20782__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20782.cljs$lang$maxFixedArity = 3;
G__20782.cljs$lang$applyTo = G__20782__4.cljs$lang$applyTo;
G__20782.cljs$core$IFn$_invoke$arity$2 = G__20782__2;
G__20782.cljs$core$IFn$_invoke$arity$3 = G__20782__3;
G__20782.cljs$core$IFn$_invoke$arity$variadic = G__20782__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20782;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20788 = null;
var G__20788__2 = (function (a,b){
var G__20771 = (((a == null))?x:a);
var G__20772 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20771,G__20772) : f.call(null,G__20771,G__20772));
});
var G__20788__3 = (function (a,b,c){
var G__20773 = (((a == null))?x:a);
var G__20774 = (((b == null))?y:b);
var G__20775 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20773,G__20774,G__20775) : f.call(null,G__20773,G__20774,G__20775));
});
var G__20788__4 = (function() { 
var G__20789__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20789 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20790__i = 0, G__20790__a = new Array(arguments.length -  3);
while (G__20790__i < G__20790__a.length) {G__20790__a[G__20790__i] = arguments[G__20790__i + 3]; ++G__20790__i;}
  ds = new cljs.core.IndexedSeq(G__20790__a,0);
} 
return G__20789__delegate.call(this,a,b,c,ds);};
G__20789.cljs$lang$maxFixedArity = 3;
G__20789.cljs$lang$applyTo = (function (arglist__20791){
var a = cljs.core.first(arglist__20791);
arglist__20791 = cljs.core.next(arglist__20791);
var b = cljs.core.first(arglist__20791);
arglist__20791 = cljs.core.next(arglist__20791);
var c = cljs.core.first(arglist__20791);
var ds = cljs.core.rest(arglist__20791);
return G__20789__delegate(a,b,c,ds);
});
G__20789.cljs$core$IFn$_invoke$arity$variadic = G__20789__delegate;
return G__20789;
})()
;
G__20788 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20788__2.call(this,a,b);
case 3:
return G__20788__3.call(this,a,b,c);
default:
var G__20792 = null;
if (arguments.length > 3) {
var G__20793__i = 0, G__20793__a = new Array(arguments.length -  3);
while (G__20793__i < G__20793__a.length) {G__20793__a[G__20793__i] = arguments[G__20793__i + 3]; ++G__20793__i;}
G__20792 = new cljs.core.IndexedSeq(G__20793__a,0);
}
return G__20788__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20792);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20788.cljs$lang$maxFixedArity = 3;
G__20788.cljs$lang$applyTo = G__20788__4.cljs$lang$applyTo;
G__20788.cljs$core$IFn$_invoke$arity$2 = G__20788__2;
G__20788.cljs$core$IFn$_invoke$arity$3 = G__20788__3;
G__20788.cljs$core$IFn$_invoke$arity$variadic = G__20788__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20788;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13074__auto___20842 = size;
var i_20843 = (0);
while(true){
if((i_20843 < n__13074__auto___20842)){
cljs.core.chunk_append(b,(function (){var G__20838 = (idx + i_20843);
var G__20839 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20843);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20838,G__20839) : f.call(null,G__20838,G__20839));
})());

var G__20844 = (i_20843 + (1));
i_20843 = G__20844;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20840 = idx;
var G__20841 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20840,G__20841) : f.call(null,G__20840,G__20841));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20863 = null;
var G__20863__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20863__1 = (function (result){
var G__20857 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20857) : rf.call(null,G__20857));
});
var G__20863__2 = (function (result,input){
var v = (function (){var G__20858 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20858) : f.call(null,G__20858));
})();
if((v == null)){
return result;
} else {
var G__20859 = result;
var G__20860 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20859,G__20860) : rf.call(null,G__20859,G__20860));
}
});
G__20863 = function(result,input){
switch(arguments.length){
case 0:
return G__20863__0.call(this);
case 1:
return G__20863__1.call(this,result);
case 2:
return G__20863__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20863.cljs$core$IFn$_invoke$arity$0 = G__20863__0;
G__20863.cljs$core$IFn$_invoke$arity$1 = G__20863__1;
G__20863.cljs$core$IFn$_invoke$arity$2 = G__20863__2;
return G__20863;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13074__auto___20864 = size;
var i_20865 = (0);
while(true){
if((i_20865 < n__13074__auto___20864)){
var x_20866 = (function (){var G__20861 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20865);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20861) : f.call(null,G__20861));
})();
if((x_20866 == null)){
} else {
cljs.core.chunk_append(b,x_20866);
}

var G__20867 = (i_20865 + (1));
i_20865 = G__20867;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20862 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20862) : f.call(null,G__20862));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20868 = this$__$1;
return goog.getUid(G__20868);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20869 = cljs.core.seq(self__.watches);
var chunk__20870 = null;
var count__20871 = (0);
var i__20872 = (0);
while(true){
if((i__20872 < count__20871)){
var vec__20873 = chunk__20870.cljs$core$IIndexed$_nth$arity$2(null,i__20872);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20873,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20873,(1),null);
var G__20874_20883 = key;
var G__20875_20884 = this$__$1;
var G__20876_20885 = oldval;
var G__20877_20886 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20874_20883,G__20875_20884,G__20876_20885,G__20877_20886) : f.call(null,G__20874_20883,G__20875_20884,G__20876_20885,G__20877_20886));

var G__20887 = seq__20869;
var G__20888 = chunk__20870;
var G__20889 = count__20871;
var G__20890 = (i__20872 + (1));
seq__20869 = G__20887;
chunk__20870 = G__20888;
count__20871 = G__20889;
i__20872 = G__20890;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20869);
if(temp__4126__auto__){
var seq__20869__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20869__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__20869__$1);
var G__20891 = cljs.core.chunk_rest(seq__20869__$1);
var G__20892 = c__12974__auto__;
var G__20893 = cljs.core.count(c__12974__auto__);
var G__20894 = (0);
seq__20869 = G__20891;
chunk__20870 = G__20892;
count__20871 = G__20893;
i__20872 = G__20894;
continue;
} else {
var vec__20878 = cljs.core.first(seq__20869__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20878,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20878,(1),null);
var G__20879_20895 = key;
var G__20880_20896 = this$__$1;
var G__20881_20897 = oldval;
var G__20882_20898 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20879_20895,G__20880_20896,G__20881_20897,G__20882_20898) : f.call(null,G__20879_20895,G__20880_20896,G__20881_20897,G__20882_20898));

var G__20899 = cljs.core.next(seq__20869__$1);
var G__20900 = null;
var G__20901 = (0);
var G__20902 = (0);
seq__20869 = G__20899;
chunk__20870 = G__20900;
count__20871 = G__20901;
i__20872 = G__20902;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20906__delegate = function (x,p__20903){
var map__20905 = p__20903;
var map__20905__$1 = ((cljs.core.seq_QMARK_(map__20905))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20905):map__20905);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20905__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20905__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20906 = function (x,var_args){
var p__20903 = null;
if (arguments.length > 1) {
var G__20907__i = 0, G__20907__a = new Array(arguments.length -  1);
while (G__20907__i < G__20907__a.length) {G__20907__a[G__20907__i] = arguments[G__20907__i + 1]; ++G__20907__i;}
  p__20903 = new cljs.core.IndexedSeq(G__20907__a,0);
} 
return G__20906__delegate.call(this,x,p__20903);};
G__20906.cljs$lang$maxFixedArity = 1;
G__20906.cljs$lang$applyTo = (function (arglist__20908){
var x = cljs.core.first(arglist__20908);
var p__20903 = cljs.core.rest(arglist__20908);
return G__20906__delegate(x,p__20903);
});
G__20906.cljs$core$IFn$_invoke$arity$variadic = G__20906__delegate;
return G__20906;
})()
;
atom = function(x,var_args){
var p__20903 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20909 = null;
if (arguments.length > 1) {
var G__20910__i = 0, G__20910__a = new Array(arguments.length -  1);
while (G__20910__i < G__20910__a.length) {G__20910__a[G__20910__i] = arguments[G__20910__i + 1]; ++G__20910__i;}
G__20909 = new cljs.core.IndexedSeq(G__20910__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20909);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__20913 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20913) : validate.call(null,G__20913));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__20914 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20914) : cljs.core.pr_str.call(null,G__20914));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20921 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20921) : f.call(null,G__20921));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20922 = a.state;
var G__20923 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20922,G__20923) : f.call(null,G__20922,G__20923));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20924 = a.state;
var G__20925 = x;
var G__20926 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20924,G__20925,G__20926) : f.call(null,G__20924,G__20925,G__20926));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20927__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20927 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20928__i = 0, G__20928__a = new Array(arguments.length -  4);
while (G__20928__i < G__20928__a.length) {G__20928__a[G__20928__i] = arguments[G__20928__i + 4]; ++G__20928__i;}
  more = new cljs.core.IndexedSeq(G__20928__a,0);
} 
return G__20927__delegate.call(this,a,f,x,y,more);};
G__20927.cljs$lang$maxFixedArity = 4;
G__20927.cljs$lang$applyTo = (function (arglist__20929){
var a = cljs.core.first(arglist__20929);
arglist__20929 = cljs.core.next(arglist__20929);
var f = cljs.core.first(arglist__20929);
arglist__20929 = cljs.core.next(arglist__20929);
var x = cljs.core.first(arglist__20929);
arglist__20929 = cljs.core.next(arglist__20929);
var y = cljs.core.first(arglist__20929);
var more = cljs.core.rest(arglist__20929);
return G__20927__delegate(a,f,x,y,more);
});
G__20927.cljs$core$IFn$_invoke$arity$variadic = G__20927__delegate;
return G__20927;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20930 = null;
if (arguments.length > 4) {
var G__20931__i = 0, G__20931__a = new Array(arguments.length -  4);
while (G__20931__i < G__20931__a.length) {G__20931__a[G__20931__i] = arguments[G__20931__i + 4]; ++G__20931__i;}
G__20930 = new cljs.core.IndexedSeq(G__20931__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20930);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__20998 = null;
var G__20998__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20998__1 = (function (result){
var G__20965 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20965) : rf.call(null,G__20965));
});
var G__20998__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20966 = i;
var G__20967 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20966,G__20967) : f.call(null,G__20966,G__20967));
})();
if((v == null)){
return result;
} else {
var G__20968 = result;
var G__20969 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20968,G__20969) : rf.call(null,G__20968,G__20969));
}
});
G__20998 = function(result,input){
switch(arguments.length){
case 0:
return G__20998__0.call(this);
case 1:
return G__20998__1.call(this,result);
case 2:
return G__20998__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20998.cljs$core$IFn$_invoke$arity$0 = G__20998__0;
G__20998.cljs$core$IFn$_invoke$arity$1 = G__20998__1;
G__20998.cljs$core$IFn$_invoke$arity$2 = G__20998__2;
return G__20998;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13074__auto___20999 = size;
var i_21000 = (0);
while(true){
if((i_21000 < n__13074__auto___20999)){
var x_21001 = (function (){var G__20994 = (idx + i_21000);
var G__20995 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21000);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20994,G__20995) : f.call(null,G__20994,G__20995));
})();
if((x_21001 == null)){
} else {
cljs.core.chunk_append(b,x_21001);
}

var G__21002 = (i_21000 + (1));
i_21000 = G__21002;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20996 = idx;
var G__20997 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20996,G__20997) : f.call(null,G__20996,G__20997));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__21216 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21216) : p.call(null,G__21216));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21218 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21218) : p.call(null,G__21218));
})();
if(cljs.core.truth_(and__12175__auto__)){
var G__21219 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21219) : p.call(null,G__21219));
} else {
return and__12175__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21221 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21221) : p.call(null,G__21221));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21223 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21223) : p.call(null,G__21223));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var G__21224 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21224) : p.call(null,G__21224));
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__21393__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__21393 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21394__i = 0, G__21394__a = new Array(arguments.length -  3);
while (G__21394__i < G__21394__a.length) {G__21394__a[G__21394__i] = arguments[G__21394__i + 3]; ++G__21394__i;}
  args = new cljs.core.IndexedSeq(G__21394__a,0);
} 
return G__21393__delegate.call(this,x,y,z,args);};
G__21393.cljs$lang$maxFixedArity = 3;
G__21393.cljs$lang$applyTo = (function (arglist__21395){
var x = cljs.core.first(arglist__21395);
arglist__21395 = cljs.core.next(arglist__21395);
var y = cljs.core.first(arglist__21395);
arglist__21395 = cljs.core.next(arglist__21395);
var z = cljs.core.first(arglist__21395);
var args = cljs.core.rest(arglist__21395);
return G__21393__delegate(x,y,z,args);
});
G__21393.cljs$core$IFn$_invoke$arity$variadic = G__21393__delegate;
return G__21393;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__21396 = null;
if (arguments.length > 3) {
var G__21397__i = 0, G__21397__a = new Array(arguments.length -  3);
while (G__21397__i < G__21397__a.length) {G__21397__a[G__21397__i] = arguments[G__21397__i + 3]; ++G__21397__i;}
G__21396 = new cljs.core.IndexedSeq(G__21397__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21256 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21256) : p1.call(null,G__21256));
})();
if(cljs.core.truth_(and__12175__auto__)){
var G__21257 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21257) : p2.call(null,G__21257));
} else {
return and__12175__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21259 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21259) : p1.call(null,G__21259));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21261 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21261) : p1.call(null,G__21261));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var and__12175__auto____$2 = (function (){var G__21263 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21263) : p2.call(null,G__21263));
})();
if(cljs.core.truth_(and__12175__auto____$2)){
var G__21264 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21264) : p2.call(null,G__21264));
} else {
return and__12175__auto____$2;
}
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21266) : p1.call(null,G__21266));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21268 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21268) : p1.call(null,G__21268));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var and__12175__auto____$2 = (function (){var G__21270 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21270) : p1.call(null,G__21270));
})();
if(cljs.core.truth_(and__12175__auto____$2)){
var and__12175__auto____$3 = (function (){var G__21272 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21272) : p2.call(null,G__21272));
})();
if(cljs.core.truth_(and__12175__auto____$3)){
var and__12175__auto____$4 = (function (){var G__21274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21274) : p2.call(null,G__21274));
})();
if(cljs.core.truth_(and__12175__auto____$4)){
var G__21275 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21275) : p2.call(null,G__21275));
} else {
return and__12175__auto____$4;
}
} else {
return and__12175__auto____$3;
}
} else {
return and__12175__auto____$2;
}
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__21398__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21003_SHARP_){
var and__12175__auto__ = (function (){var G__21280 = p1__21003_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21280) : p1.call(null,G__21280));
})();
if(cljs.core.truth_(and__12175__auto__)){
var G__21281 = p1__21003_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21281) : p2.call(null,G__21281));
} else {
return and__12175__auto__;
}
}),args)));
};
var G__21398 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21399__i = 0, G__21399__a = new Array(arguments.length -  3);
while (G__21399__i < G__21399__a.length) {G__21399__a[G__21399__i] = arguments[G__21399__i + 3]; ++G__21399__i;}
  args = new cljs.core.IndexedSeq(G__21399__a,0);
} 
return G__21398__delegate.call(this,x,y,z,args);};
G__21398.cljs$lang$maxFixedArity = 3;
G__21398.cljs$lang$applyTo = (function (arglist__21400){
var x = cljs.core.first(arglist__21400);
arglist__21400 = cljs.core.next(arglist__21400);
var y = cljs.core.first(arglist__21400);
arglist__21400 = cljs.core.next(arglist__21400);
var z = cljs.core.first(arglist__21400);
var args = cljs.core.rest(arglist__21400);
return G__21398__delegate(x,y,z,args);
});
G__21398.cljs$core$IFn$_invoke$arity$variadic = G__21398__delegate;
return G__21398;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__21401 = null;
if (arguments.length > 3) {
var G__21402__i = 0, G__21402__a = new Array(arguments.length -  3);
while (G__21402__i < G__21402__a.length) {G__21402__a[G__21402__i] = arguments[G__21402__i + 3]; ++G__21402__i;}
G__21401 = new cljs.core.IndexedSeq(G__21402__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21327 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21327) : p1.call(null,G__21327));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21329 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21329) : p2.call(null,G__21329));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var G__21330 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21330) : p3.call(null,G__21330));
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21332 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21332) : p1.call(null,G__21332));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21334 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21334) : p2.call(null,G__21334));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var and__12175__auto____$2 = (function (){var G__21336 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21336) : p3.call(null,G__21336));
})();
if(cljs.core.truth_(and__12175__auto____$2)){
var and__12175__auto____$3 = (function (){var G__21338 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21338) : p1.call(null,G__21338));
})();
if(cljs.core.truth_(and__12175__auto____$3)){
var and__12175__auto____$4 = (function (){var G__21340 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21340) : p2.call(null,G__21340));
})();
if(cljs.core.truth_(and__12175__auto____$4)){
var G__21341 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21341) : p3.call(null,G__21341));
} else {
return and__12175__auto____$4;
}
} else {
return and__12175__auto____$3;
}
} else {
return and__12175__auto____$2;
}
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12175__auto__ = (function (){var G__21343 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21343) : p1.call(null,G__21343));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21345 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21345) : p2.call(null,G__21345));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var and__12175__auto____$2 = (function (){var G__21347 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21347) : p3.call(null,G__21347));
})();
if(cljs.core.truth_(and__12175__auto____$2)){
var and__12175__auto____$3 = (function (){var G__21349 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21349) : p1.call(null,G__21349));
})();
if(cljs.core.truth_(and__12175__auto____$3)){
var and__12175__auto____$4 = (function (){var G__21351 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21351) : p2.call(null,G__21351));
})();
if(cljs.core.truth_(and__12175__auto____$4)){
var and__12175__auto____$5 = (function (){var G__21353 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21353) : p3.call(null,G__21353));
})();
if(cljs.core.truth_(and__12175__auto____$5)){
var and__12175__auto____$6 = (function (){var G__21355 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21355) : p1.call(null,G__21355));
})();
if(cljs.core.truth_(and__12175__auto____$6)){
var and__12175__auto____$7 = (function (){var G__21357 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21357) : p2.call(null,G__21357));
})();
if(cljs.core.truth_(and__12175__auto____$7)){
var G__21358 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21358) : p3.call(null,G__21358));
} else {
return and__12175__auto____$7;
}
} else {
return and__12175__auto____$6;
}
} else {
return and__12175__auto____$5;
}
} else {
return and__12175__auto____$4;
}
} else {
return and__12175__auto____$3;
}
} else {
return and__12175__auto____$2;
}
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__21403__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21004_SHARP_){
var and__12175__auto__ = (function (){var G__21365 = p1__21004_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21365) : p1.call(null,G__21365));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21367 = p1__21004_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21367) : p2.call(null,G__21367));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var G__21368 = p1__21004_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21368) : p3.call(null,G__21368));
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
}),args)));
};
var G__21403 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21404__i = 0, G__21404__a = new Array(arguments.length -  3);
while (G__21404__i < G__21404__a.length) {G__21404__a[G__21404__i] = arguments[G__21404__i + 3]; ++G__21404__i;}
  args = new cljs.core.IndexedSeq(G__21404__a,0);
} 
return G__21403__delegate.call(this,x,y,z,args);};
G__21403.cljs$lang$maxFixedArity = 3;
G__21403.cljs$lang$applyTo = (function (arglist__21405){
var x = cljs.core.first(arglist__21405);
arglist__21405 = cljs.core.next(arglist__21405);
var y = cljs.core.first(arglist__21405);
arglist__21405 = cljs.core.next(arglist__21405);
var z = cljs.core.first(arglist__21405);
var args = cljs.core.rest(arglist__21405);
return G__21403__delegate(x,y,z,args);
});
G__21403.cljs$core$IFn$_invoke$arity$variadic = G__21403__delegate;
return G__21403;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__21406 = null;
if (arguments.length > 3) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  3);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 3]; ++G__21407__i;}
G__21406 = new cljs.core.IndexedSeq(G__21407__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__21408__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21005_SHARP_){
var G__21384 = x;
return (p1__21005_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21005_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21384) : p1__21005_SHARP_.call(null,G__21384));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21006_SHARP_){
var and__12175__auto__ = (function (){var G__21386 = x;
return (p1__21006_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21006_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21386) : p1__21006_SHARP_.call(null,G__21386));
})();
if(cljs.core.truth_(and__12175__auto__)){
var G__21387 = y;
return (p1__21006_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21006_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21387) : p1__21006_SHARP_.call(null,G__21387));
} else {
return and__12175__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21007_SHARP_){
var and__12175__auto__ = (function (){var G__21389 = x;
return (p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21389) : p1__21007_SHARP_.call(null,G__21389));
})();
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__21391 = y;
return (p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21391) : p1__21007_SHARP_.call(null,G__21391));
})();
if(cljs.core.truth_(and__12175__auto____$1)){
var G__21392 = z;
return (p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21007_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21392) : p1__21007_SHARP_.call(null,G__21392));
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__21409__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21008_SHARP_){
return cljs.core.every_QMARK_(p1__21008_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__21409 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21410__i = 0, G__21410__a = new Array(arguments.length -  3);
while (G__21410__i < G__21410__a.length) {G__21410__a[G__21410__i] = arguments[G__21410__i + 3]; ++G__21410__i;}
  args = new cljs.core.IndexedSeq(G__21410__a,0);
} 
return G__21409__delegate.call(this,x,y,z,args);};
G__21409.cljs$lang$maxFixedArity = 3;
G__21409.cljs$lang$applyTo = (function (arglist__21411){
var x = cljs.core.first(arglist__21411);
arglist__21411 = cljs.core.next(arglist__21411);
var y = cljs.core.first(arglist__21411);
arglist__21411 = cljs.core.next(arglist__21411);
var z = cljs.core.first(arglist__21411);
var args = cljs.core.rest(arglist__21411);
return G__21409__delegate(x,y,z,args);
});
G__21409.cljs$core$IFn$_invoke$arity$variadic = G__21409__delegate;
return G__21409;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__21412 = null;
if (arguments.length > 3) {
var G__21413__i = 0, G__21413__a = new Array(arguments.length -  3);
while (G__21413__i < G__21413__a.length) {G__21413__a[G__21413__i] = arguments[G__21413__i + 3]; ++G__21413__i;}
G__21412 = new cljs.core.IndexedSeq(G__21413__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__21408 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21414__i = 0, G__21414__a = new Array(arguments.length -  3);
while (G__21414__i < G__21414__a.length) {G__21414__a[G__21414__i] = arguments[G__21414__i + 3]; ++G__21414__i;}
  ps = new cljs.core.IndexedSeq(G__21414__a,0);
} 
return G__21408__delegate.call(this,p1,p2,p3,ps);};
G__21408.cljs$lang$maxFixedArity = 3;
G__21408.cljs$lang$applyTo = (function (arglist__21415){
var p1 = cljs.core.first(arglist__21415);
arglist__21415 = cljs.core.next(arglist__21415);
var p2 = cljs.core.first(arglist__21415);
arglist__21415 = cljs.core.next(arglist__21415);
var p3 = cljs.core.first(arglist__21415);
var ps = cljs.core.rest(arglist__21415);
return G__21408__delegate(p1,p2,p3,ps);
});
G__21408.cljs$core$IFn$_invoke$arity$variadic = G__21408__delegate;
return G__21408;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__21416 = null;
if (arguments.length > 3) {
var G__21417__i = 0, G__21417__a = new Array(arguments.length -  3);
while (G__21417__i < G__21417__a.length) {G__21417__a[G__21417__i] = arguments[G__21417__i + 3]; ++G__21417__i;}
G__21416 = new cljs.core.IndexedSeq(G__21417__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__21623 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21623) : p.call(null,G__21623));
});
var sp1__2 = (function (x,y){
var or__12187__auto__ = (function (){var G__21625 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21625) : p.call(null,G__21625));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var G__21626 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21626) : p.call(null,G__21626));
}
});
var sp1__3 = (function (x,y,z){
var or__12187__auto__ = (function (){var G__21628 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21628) : p.call(null,G__21628));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21630 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21630) : p.call(null,G__21630));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var G__21631 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21631) : p.call(null,G__21631));
}
}
});
var sp1__4 = (function() { 
var G__21792__delegate = function (x,y,z,args){
var or__12187__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21792 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21793__i = 0, G__21793__a = new Array(arguments.length -  3);
while (G__21793__i < G__21793__a.length) {G__21793__a[G__21793__i] = arguments[G__21793__i + 3]; ++G__21793__i;}
  args = new cljs.core.IndexedSeq(G__21793__a,0);
} 
return G__21792__delegate.call(this,x,y,z,args);};
G__21792.cljs$lang$maxFixedArity = 3;
G__21792.cljs$lang$applyTo = (function (arglist__21794){
var x = cljs.core.first(arglist__21794);
arglist__21794 = cljs.core.next(arglist__21794);
var y = cljs.core.first(arglist__21794);
arglist__21794 = cljs.core.next(arglist__21794);
var z = cljs.core.first(arglist__21794);
var args = cljs.core.rest(arglist__21794);
return G__21792__delegate(x,y,z,args);
});
G__21792.cljs$core$IFn$_invoke$arity$variadic = G__21792__delegate;
return G__21792;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21795 = null;
if (arguments.length > 3) {
var G__21796__i = 0, G__21796__a = new Array(arguments.length -  3);
while (G__21796__i < G__21796__a.length) {G__21796__a[G__21796__i] = arguments[G__21796__i + 3]; ++G__21796__i;}
G__21795 = new cljs.core.IndexedSeq(G__21796__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12187__auto__ = (function (){var G__21663 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21663) : p1.call(null,G__21663));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var G__21664 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21664) : p2.call(null,G__21664));
}
});
var sp2__2 = (function (x,y){
var or__12187__auto__ = (function (){var G__21666 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21666) : p1.call(null,G__21666));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21668 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21668) : p1.call(null,G__21668));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var G__21670 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21670) : p2.call(null,G__21670));
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
var G__21671 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21671) : p2.call(null,G__21671));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12187__auto__ = (function (){var G__21673 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21673) : p1.call(null,G__21673));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21675 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21675) : p1.call(null,G__21675));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var G__21677 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21677) : p1.call(null,G__21677));
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
var or__12187__auto____$3 = (function (){var G__21679 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21679) : p2.call(null,G__21679));
})();
if(cljs.core.truth_(or__12187__auto____$3)){
return or__12187__auto____$3;
} else {
var or__12187__auto____$4 = (function (){var G__21681 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21681) : p2.call(null,G__21681));
})();
if(cljs.core.truth_(or__12187__auto____$4)){
return or__12187__auto____$4;
} else {
var G__21682 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21682) : p2.call(null,G__21682));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21797__delegate = function (x,y,z,args){
var or__12187__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.some(((function (or__12187__auto__){
return (function (p1__21418_SHARP_){
var or__12187__auto____$1 = (function (){var G__21684 = p1__21418_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21684) : p1.call(null,G__21684));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var G__21685 = p1__21418_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21685) : p2.call(null,G__21685));
}
});})(or__12187__auto__))
,args);
}
};
var G__21797 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21798__i = 0, G__21798__a = new Array(arguments.length -  3);
while (G__21798__i < G__21798__a.length) {G__21798__a[G__21798__i] = arguments[G__21798__i + 3]; ++G__21798__i;}
  args = new cljs.core.IndexedSeq(G__21798__a,0);
} 
return G__21797__delegate.call(this,x,y,z,args);};
G__21797.cljs$lang$maxFixedArity = 3;
G__21797.cljs$lang$applyTo = (function (arglist__21799){
var x = cljs.core.first(arglist__21799);
arglist__21799 = cljs.core.next(arglist__21799);
var y = cljs.core.first(arglist__21799);
arglist__21799 = cljs.core.next(arglist__21799);
var z = cljs.core.first(arglist__21799);
var args = cljs.core.rest(arglist__21799);
return G__21797__delegate(x,y,z,args);
});
G__21797.cljs$core$IFn$_invoke$arity$variadic = G__21797__delegate;
return G__21797;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21800 = null;
if (arguments.length > 3) {
var G__21801__i = 0, G__21801__a = new Array(arguments.length -  3);
while (G__21801__i < G__21801__a.length) {G__21801__a[G__21801__i] = arguments[G__21801__i + 3]; ++G__21801__i;}
G__21800 = new cljs.core.IndexedSeq(G__21801__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12187__auto__ = (function (){var G__21731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21731) : p1.call(null,G__21731));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21733 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21733) : p2.call(null,G__21733));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var G__21734 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21734) : p3.call(null,G__21734));
}
}
});
var sp3__2 = (function (x,y){
var or__12187__auto__ = (function (){var G__21736 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21736) : p1.call(null,G__21736));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21738 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21738) : p2.call(null,G__21738));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var G__21740 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21740) : p3.call(null,G__21740));
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
var or__12187__auto____$3 = (function (){var G__21742 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21742) : p1.call(null,G__21742));
})();
if(cljs.core.truth_(or__12187__auto____$3)){
return or__12187__auto____$3;
} else {
var or__12187__auto____$4 = (function (){var G__21744 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21744) : p2.call(null,G__21744));
})();
if(cljs.core.truth_(or__12187__auto____$4)){
return or__12187__auto____$4;
} else {
var G__21745 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21745) : p3.call(null,G__21745));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12187__auto__ = (function (){var G__21747 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21747) : p1.call(null,G__21747));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21749 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21749) : p2.call(null,G__21749));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var G__21751 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21751) : p3.call(null,G__21751));
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
var or__12187__auto____$3 = (function (){var G__21753 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21753) : p1.call(null,G__21753));
})();
if(cljs.core.truth_(or__12187__auto____$3)){
return or__12187__auto____$3;
} else {
var or__12187__auto____$4 = (function (){var G__21755 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21755) : p2.call(null,G__21755));
})();
if(cljs.core.truth_(or__12187__auto____$4)){
return or__12187__auto____$4;
} else {
var or__12187__auto____$5 = (function (){var G__21757 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21757) : p3.call(null,G__21757));
})();
if(cljs.core.truth_(or__12187__auto____$5)){
return or__12187__auto____$5;
} else {
var or__12187__auto____$6 = (function (){var G__21759 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21759) : p1.call(null,G__21759));
})();
if(cljs.core.truth_(or__12187__auto____$6)){
return or__12187__auto____$6;
} else {
var or__12187__auto____$7 = (function (){var G__21761 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21761) : p2.call(null,G__21761));
})();
if(cljs.core.truth_(or__12187__auto____$7)){
return or__12187__auto____$7;
} else {
var G__21762 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21762) : p3.call(null,G__21762));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21802__delegate = function (x,y,z,args){
var or__12187__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.some(((function (or__12187__auto__){
return (function (p1__21419_SHARP_){
var or__12187__auto____$1 = (function (){var G__21764 = p1__21419_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21764) : p1.call(null,G__21764));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var G__21766 = p1__21419_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21766) : p2.call(null,G__21766));
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
var G__21767 = p1__21419_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21767) : p3.call(null,G__21767));
}
}
});})(or__12187__auto__))
,args);
}
};
var G__21802 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21803__i = 0, G__21803__a = new Array(arguments.length -  3);
while (G__21803__i < G__21803__a.length) {G__21803__a[G__21803__i] = arguments[G__21803__i + 3]; ++G__21803__i;}
  args = new cljs.core.IndexedSeq(G__21803__a,0);
} 
return G__21802__delegate.call(this,x,y,z,args);};
G__21802.cljs$lang$maxFixedArity = 3;
G__21802.cljs$lang$applyTo = (function (arglist__21804){
var x = cljs.core.first(arglist__21804);
arglist__21804 = cljs.core.next(arglist__21804);
var y = cljs.core.first(arglist__21804);
arglist__21804 = cljs.core.next(arglist__21804);
var z = cljs.core.first(arglist__21804);
var args = cljs.core.rest(arglist__21804);
return G__21802__delegate(x,y,z,args);
});
G__21802.cljs$core$IFn$_invoke$arity$variadic = G__21802__delegate;
return G__21802;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21805 = null;
if (arguments.length > 3) {
var G__21806__i = 0, G__21806__a = new Array(arguments.length -  3);
while (G__21806__i < G__21806__a.length) {G__21806__a[G__21806__i] = arguments[G__21806__i + 3]; ++G__21806__i;}
G__21805 = new cljs.core.IndexedSeq(G__21806__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21807__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__21420_SHARP_){
var G__21783 = x;
return (p1__21420_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21420_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21783) : p1__21420_SHARP_.call(null,G__21783));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__21421_SHARP_){
var or__12187__auto__ = (function (){var G__21785 = x;
return (p1__21421_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21421_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21785) : p1__21421_SHARP_.call(null,G__21785));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var G__21786 = y;
return (p1__21421_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21421_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21786) : p1__21421_SHARP_.call(null,G__21786));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__21422_SHARP_){
var or__12187__auto__ = (function (){var G__21788 = x;
return (p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21788) : p1__21422_SHARP_.call(null,G__21788));
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var G__21790 = y;
return (p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21790) : p1__21422_SHARP_.call(null,G__21790));
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var G__21791 = z;
return (p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21422_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21791) : p1__21422_SHARP_.call(null,G__21791));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21808__delegate = function (x,y,z,args){
var or__12187__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.some(((function (or__12187__auto__,ps__$1){
return (function (p1__21423_SHARP_){
return cljs.core.some(p1__21423_SHARP_,args);
});})(or__12187__auto__,ps__$1))
,ps__$1);
}
};
var G__21808 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21809__i = 0, G__21809__a = new Array(arguments.length -  3);
while (G__21809__i < G__21809__a.length) {G__21809__a[G__21809__i] = arguments[G__21809__i + 3]; ++G__21809__i;}
  args = new cljs.core.IndexedSeq(G__21809__a,0);
} 
return G__21808__delegate.call(this,x,y,z,args);};
G__21808.cljs$lang$maxFixedArity = 3;
G__21808.cljs$lang$applyTo = (function (arglist__21810){
var x = cljs.core.first(arglist__21810);
arglist__21810 = cljs.core.next(arglist__21810);
var y = cljs.core.first(arglist__21810);
arglist__21810 = cljs.core.next(arglist__21810);
var z = cljs.core.first(arglist__21810);
var args = cljs.core.rest(arglist__21810);
return G__21808__delegate(x,y,z,args);
});
G__21808.cljs$core$IFn$_invoke$arity$variadic = G__21808__delegate;
return G__21808;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21811 = null;
if (arguments.length > 3) {
var G__21812__i = 0, G__21812__a = new Array(arguments.length -  3);
while (G__21812__i < G__21812__a.length) {G__21812__a[G__21812__i] = arguments[G__21812__i + 3]; ++G__21812__i;}
G__21811 = new cljs.core.IndexedSeq(G__21812__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21807 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21813__i = 0, G__21813__a = new Array(arguments.length -  3);
while (G__21813__i < G__21813__a.length) {G__21813__a[G__21813__i] = arguments[G__21813__i + 3]; ++G__21813__i;}
  ps = new cljs.core.IndexedSeq(G__21813__a,0);
} 
return G__21807__delegate.call(this,p1,p2,p3,ps);};
G__21807.cljs$lang$maxFixedArity = 3;
G__21807.cljs$lang$applyTo = (function (arglist__21814){
var p1 = cljs.core.first(arglist__21814);
arglist__21814 = cljs.core.next(arglist__21814);
var p2 = cljs.core.first(arglist__21814);
arglist__21814 = cljs.core.next(arglist__21814);
var p3 = cljs.core.first(arglist__21814);
var ps = cljs.core.rest(arglist__21814);
return G__21807__delegate(p1,p2,p3,ps);
});
G__21807.cljs$core$IFn$_invoke$arity$variadic = G__21807__delegate;
return G__21807;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21815 = null;
if (arguments.length > 3) {
var G__21816__i = 0, G__21816__a = new Array(arguments.length -  3);
while (G__21816__i < G__21816__a.length) {G__21816__a[G__21816__i] = arguments[G__21816__i + 3]; ++G__21816__i;}
G__21815 = new cljs.core.IndexedSeq(G__21816__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21871 = null;
var G__21871__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21871__1 = (function (result){
var G__21857 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21857) : rf.call(null,G__21857));
});
var G__21871__2 = (function (result,input){
var G__21858 = result;
var G__21859 = (function (){var G__21860 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21860) : f.call(null,G__21860));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21858,G__21859) : rf.call(null,G__21858,G__21859));
});
var G__21871__3 = (function() { 
var G__21872__delegate = function (result,input,inputs){
var G__21861 = result;
var G__21862 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21861,G__21862) : rf.call(null,G__21861,G__21862));
};
var G__21872 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21873__i = 0, G__21873__a = new Array(arguments.length -  2);
while (G__21873__i < G__21873__a.length) {G__21873__a[G__21873__i] = arguments[G__21873__i + 2]; ++G__21873__i;}
  inputs = new cljs.core.IndexedSeq(G__21873__a,0);
} 
return G__21872__delegate.call(this,result,input,inputs);};
G__21872.cljs$lang$maxFixedArity = 2;
G__21872.cljs$lang$applyTo = (function (arglist__21874){
var result = cljs.core.first(arglist__21874);
arglist__21874 = cljs.core.next(arglist__21874);
var input = cljs.core.first(arglist__21874);
var inputs = cljs.core.rest(arglist__21874);
return G__21872__delegate(result,input,inputs);
});
G__21872.cljs$core$IFn$_invoke$arity$variadic = G__21872__delegate;
return G__21872;
})()
;
G__21871 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21871__0.call(this);
case 1:
return G__21871__1.call(this,result);
case 2:
return G__21871__2.call(this,result,input);
default:
var G__21875 = null;
if (arguments.length > 2) {
var G__21876__i = 0, G__21876__a = new Array(arguments.length -  2);
while (G__21876__i < G__21876__a.length) {G__21876__a[G__21876__i] = arguments[G__21876__i + 2]; ++G__21876__i;}
G__21875 = new cljs.core.IndexedSeq(G__21876__a,0);
}
return G__21871__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21871.cljs$lang$maxFixedArity = 2;
G__21871.cljs$lang$applyTo = G__21871__3.cljs$lang$applyTo;
G__21871.cljs$core$IFn$_invoke$arity$0 = G__21871__0;
G__21871.cljs$core$IFn$_invoke$arity$1 = G__21871__1;
G__21871.cljs$core$IFn$_invoke$arity$2 = G__21871__2;
G__21871.cljs$core$IFn$_invoke$arity$variadic = G__21871__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21871;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13074__auto___21877 = size;
var i_21878 = (0);
while(true){
if((i_21878 < n__13074__auto___21877)){
cljs.core.chunk_append(b,(function (){var G__21863 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21878);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21863) : f.call(null,G__21863));
})());

var G__21879 = (i_21878 + (1));
i_21878 = G__21879;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21864 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21864) : f.call(null,G__21864));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21865 = cljs.core.first(s1);
var G__21866 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21865,G__21866) : f.call(null,G__21865,G__21866));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21867 = cljs.core.first(s1);
var G__21868 = cljs.core.first(s2);
var G__21869 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21867,G__21868,G__21869) : f.call(null,G__21867,G__21868,G__21869));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21880__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21817_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21817_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21880 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21881__i = 0, G__21881__a = new Array(arguments.length -  4);
while (G__21881__i < G__21881__a.length) {G__21881__a[G__21881__i] = arguments[G__21881__i + 4]; ++G__21881__i;}
  colls = new cljs.core.IndexedSeq(G__21881__a,0);
} 
return G__21880__delegate.call(this,f,c1,c2,c3,colls);};
G__21880.cljs$lang$maxFixedArity = 4;
G__21880.cljs$lang$applyTo = (function (arglist__21882){
var f = cljs.core.first(arglist__21882);
arglist__21882 = cljs.core.next(arglist__21882);
var c1 = cljs.core.first(arglist__21882);
arglist__21882 = cljs.core.next(arglist__21882);
var c2 = cljs.core.first(arglist__21882);
arglist__21882 = cljs.core.next(arglist__21882);
var c3 = cljs.core.first(arglist__21882);
var colls = cljs.core.rest(arglist__21882);
return G__21880__delegate(f,c1,c2,c3,colls);
});
G__21880.cljs$core$IFn$_invoke$arity$variadic = G__21880__delegate;
return G__21880;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21883 = null;
if (arguments.length > 4) {
var G__21884__i = 0, G__21884__a = new Array(arguments.length -  4);
while (G__21884__i < G__21884__a.length) {G__21884__a[G__21884__i] = arguments[G__21884__i + 4]; ++G__21884__i;}
G__21883 = new cljs.core.IndexedSeq(G__21884__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21893 = null;
var G__21893__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21893__1 = (function (result){
var G__21890 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21890) : rf.call(null,G__21890));
});
var G__21893__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21891 = result;
var G__21892 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21891,G__21892) : rf.call(null,G__21891,G__21892));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21893 = function(result,input){
switch(arguments.length){
case 0:
return G__21893__0.call(this);
case 1:
return G__21893__1.call(this,result);
case 2:
return G__21893__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21893.cljs$core$IFn$_invoke$arity$0 = G__21893__0;
G__21893.cljs$core$IFn$_invoke$arity$1 = G__21893__1;
G__21893.cljs$core$IFn$_invoke$arity$2 = G__21893__2;
return G__21893;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21900 = null;
var G__21900__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21900__1 = (function (result){
var G__21897 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21897) : rf.call(null,G__21897));
});
var G__21900__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21898 = result;
var G__21899 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21898,G__21899) : rf.call(null,G__21898,G__21899));
}
});
G__21900 = function(result,input){
switch(arguments.length){
case 0:
return G__21900__0.call(this);
case 1:
return G__21900__1.call(this,result);
case 2:
return G__21900__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21900.cljs$core$IFn$_invoke$arity$0 = G__21900__0;
G__21900.cljs$core$IFn$_invoke$arity$1 = G__21900__1;
G__21900.cljs$core$IFn$_invoke$arity$2 = G__21900__2;
return G__21900;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21901 = (n__$1 - (1));
var G__21902 = cljs.core.rest(s);
n__$1 = G__21901;
coll__$1 = G__21902;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21905 = cljs.core.next(s);
var G__21906 = cljs.core.next(lead);
s = G__21905;
lead = G__21906;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21919 = null;
var G__21919__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21919__1 = (function (result){
var G__21913 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21913) : rf.call(null,G__21913));
});
var G__21919__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12175__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12175__auto__)){
var G__21914 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21914) : pred.call(null,G__21914));
} else {
return and__12175__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21915 = result;
var G__21916 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21915,G__21916) : rf.call(null,G__21915,G__21916));
}
});
G__21919 = function(result,input){
switch(arguments.length){
case 0:
return G__21919__0.call(this);
case 1:
return G__21919__1.call(this,result);
case 2:
return G__21919__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21919.cljs$core$IFn$_invoke$arity$0 = G__21919__0;
G__21919.cljs$core$IFn$_invoke$arity$1 = G__21919__1;
G__21919.cljs$core$IFn$_invoke$arity$2 = G__21919__2;
return G__21919;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12175__auto__ = s;
if(and__12175__auto__){
var G__21918 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21918) : pred__$1.call(null,G__21918));
} else {
return and__12175__auto__;
}
})())){
var G__21920 = pred__$1;
var G__21921 = cljs.core.rest(s);
pred__$1 = G__21920;
coll__$1 = G__21921;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21930 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21930) : f.call(null,G__21930));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21933__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21933 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21934__i = 0, G__21934__a = new Array(arguments.length -  2);
while (G__21934__i < G__21934__a.length) {G__21934__a[G__21934__i] = arguments[G__21934__i + 2]; ++G__21934__i;}
  colls = new cljs.core.IndexedSeq(G__21934__a,0);
} 
return G__21933__delegate.call(this,c1,c2,colls);};
G__21933.cljs$lang$maxFixedArity = 2;
G__21933.cljs$lang$applyTo = (function (arglist__21935){
var c1 = cljs.core.first(arglist__21935);
arglist__21935 = cljs.core.next(arglist__21935);
var c2 = cljs.core.first(arglist__21935);
var colls = cljs.core.rest(arglist__21935);
return G__21933__delegate(c1,c2,colls);
});
G__21933.cljs$core$IFn$_invoke$arity$variadic = G__21933__delegate;
return G__21933;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21936 = null;
if (arguments.length > 2) {
var G__21937__i = 0, G__21937__a = new Array(arguments.length -  2);
while (G__21937__i < G__21937__a.length) {G__21937__a[G__21937__i] = arguments[G__21937__i + 2]; ++G__21937__i;}
G__21936 = new cljs.core.IndexedSeq(G__21937__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21936);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21946__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21946 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21947__i = 0, G__21947__a = new Array(arguments.length -  1);
while (G__21947__i < G__21947__a.length) {G__21947__a[G__21947__i] = arguments[G__21947__i + 1]; ++G__21947__i;}
  colls = new cljs.core.IndexedSeq(G__21947__a,0);
} 
return G__21946__delegate.call(this,f,colls);};
G__21946.cljs$lang$maxFixedArity = 1;
G__21946.cljs$lang$applyTo = (function (arglist__21948){
var f = cljs.core.first(arglist__21948);
var colls = cljs.core.rest(arglist__21948);
return G__21946__delegate(f,colls);
});
G__21946.cljs$core$IFn$_invoke$arity$variadic = G__21946__delegate;
return G__21946;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21949 = null;
if (arguments.length > 1) {
var G__21950__i = 0, G__21950__a = new Array(arguments.length -  1);
while (G__21950__i < G__21950__a.length) {G__21950__a[G__21950__i] = arguments[G__21950__i + 1]; ++G__21950__i;}
G__21949 = new cljs.core.IndexedSeq(G__21950__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21969 = null;
var G__21969__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21969__1 = (function (result){
var G__21963 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21963) : rf.call(null,G__21963));
});
var G__21969__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21964 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21964) : pred.call(null,G__21964));
})())){
var G__21965 = result;
var G__21966 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21965,G__21966) : rf.call(null,G__21965,G__21966));
} else {
return result;
}
});
G__21969 = function(result,input){
switch(arguments.length){
case 0:
return G__21969__0.call(this);
case 1:
return G__21969__1.call(this,result);
case 2:
return G__21969__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21969.cljs$core$IFn$_invoke$arity$0 = G__21969__0;
G__21969.cljs$core$IFn$_invoke$arity$1 = G__21969__1;
G__21969.cljs$core$IFn$_invoke$arity$2 = G__21969__2;
return G__21969;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13074__auto___21970 = size;
var i_21971 = (0);
while(true){
if((i_21971 < n__13074__auto___21970)){
if(cljs.core.truth_((function (){var G__21967 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21971);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21967) : pred.call(null,G__21967));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21971));
} else {
}

var G__21972 = (i_21971 + (1));
i_21971 = G__21972;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21968 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21968) : pred.call(null,G__21968));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__21979 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__21979) : branch_QMARK_.call(null,G__21979));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__21980 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__21980) : children.call(null,G__21980));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__21981_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__21981_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__21984 = to;
if(G__21984){
var bit__12861__auto__ = (G__21984.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12861__auto__) || (G__21984.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__21985 = to;
if(G__21985){
var bit__12861__auto__ = (G__21985.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__12861__auto__) || (G__21985.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__21987 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21987) : f.call(null,G__21987));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__21988__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__21988 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21989__i = 0, G__21989__a = new Array(arguments.length -  4);
while (G__21989__i < G__21989__a.length) {G__21989__a[G__21989__i] = arguments[G__21989__i + 4]; ++G__21989__i;}
  colls = new cljs.core.IndexedSeq(G__21989__a,0);
} 
return G__21988__delegate.call(this,f,c1,c2,c3,colls);};
G__21988.cljs$lang$maxFixedArity = 4;
G__21988.cljs$lang$applyTo = (function (arglist__21990){
var f = cljs.core.first(arglist__21990);
arglist__21990 = cljs.core.next(arglist__21990);
var c1 = cljs.core.first(arglist__21990);
arglist__21990 = cljs.core.next(arglist__21990);
var c2 = cljs.core.first(arglist__21990);
arglist__21990 = cljs.core.next(arglist__21990);
var c3 = cljs.core.first(arglist__21990);
var colls = cljs.core.rest(arglist__21990);
return G__21988__delegate(f,c1,c2,c3,colls);
});
G__21988.cljs$core$IFn$_invoke$arity$variadic = G__21988__delegate;
return G__21988;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__21991 = null;
if (arguments.length > 4) {
var G__21992__i = 0, G__21992__a = new Array(arguments.length -  4);
while (G__21992__i < G__21992__a.length) {G__21992__a[G__21992__i] = arguments[G__21992__i + 4]; ++G__21992__i;}
G__21991 = new cljs.core.IndexedSeq(G__21992__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21991);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__21994 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21994) : pred.call(null,G__21994));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22009 = m__$1;
if(G__22009){
var bit__12868__auto__ = (G__22009.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__12868__auto__) || (G__22009.cljs$core$ILookup$)){
return true;
} else {
if((!G__22009.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22009);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22009);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22010 = sentinel;
var G__22011 = m__$2;
var G__22012 = cljs.core.next(ks__$1);
sentinel = G__22010;
m__$1 = G__22011;
ks__$1 = G__22012;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22013,v){
var vec__22018 = p__22013;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22018,(0),null);
var ks = cljs.core.nthnext(vec__22018,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22019,f){
var vec__22057 = p__22019;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22057,(0),null);
var ks = cljs.core.nthnext(vec__22057,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22058 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22058) : f.call(null,G__22058));
})());
}
});
var update_in__4 = (function (m,p__22020,f,a){
var vec__22059 = p__22020;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22059,(0),null);
var ks = cljs.core.nthnext(vec__22059,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22060 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22061 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22060,G__22061) : f.call(null,G__22060,G__22061));
})());
}
});
var update_in__5 = (function (m,p__22021,f,a,b){
var vec__22062 = p__22021;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22062,(0),null);
var ks = cljs.core.nthnext(vec__22062,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22063 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22064 = a;
var G__22065 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22063,G__22064,G__22065) : f.call(null,G__22063,G__22064,G__22065));
})());
}
});
var update_in__6 = (function (m,p__22022,f,a,b,c){
var vec__22066 = p__22022;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22066,(0),null);
var ks = cljs.core.nthnext(vec__22066,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22067 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22068 = a;
var G__22069 = b;
var G__22070 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22067,G__22068,G__22069,G__22070) : f.call(null,G__22067,G__22068,G__22069,G__22070));
})());
}
});
var update_in__7 = (function() { 
var G__22072__delegate = function (m,p__22023,f,a,b,c,args){
var vec__22071 = p__22023;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22071,(0),null);
var ks = cljs.core.nthnext(vec__22071,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__22072 = function (m,p__22023,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__22073__i = 0, G__22073__a = new Array(arguments.length -  6);
while (G__22073__i < G__22073__a.length) {G__22073__a[G__22073__i] = arguments[G__22073__i + 6]; ++G__22073__i;}
  args = new cljs.core.IndexedSeq(G__22073__a,0);
} 
return G__22072__delegate.call(this,m,p__22023,f,a,b,c,args);};
G__22072.cljs$lang$maxFixedArity = 6;
G__22072.cljs$lang$applyTo = (function (arglist__22074){
var m = cljs.core.first(arglist__22074);
arglist__22074 = cljs.core.next(arglist__22074);
var p__22023 = cljs.core.first(arglist__22074);
arglist__22074 = cljs.core.next(arglist__22074);
var f = cljs.core.first(arglist__22074);
arglist__22074 = cljs.core.next(arglist__22074);
var a = cljs.core.first(arglist__22074);
arglist__22074 = cljs.core.next(arglist__22074);
var b = cljs.core.first(arglist__22074);
arglist__22074 = cljs.core.next(arglist__22074);
var c = cljs.core.first(arglist__22074);
var args = cljs.core.rest(arglist__22074);
return G__22072__delegate(m,p__22023,f,a,b,c,args);
});
G__22072.cljs$core$IFn$_invoke$arity$variadic = G__22072__delegate;
return G__22072;
})()
;
update_in = function(m,p__22023,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22023,f);
case 4:
return update_in__4.call(this,m,p__22023,f,a);
case 5:
return update_in__5.call(this,m,p__22023,f,a,b);
case 6:
return update_in__6.call(this,m,p__22023,f,a,b,c);
default:
var G__22075 = null;
if (arguments.length > 6) {
var G__22076__i = 0, G__22076__a = new Array(arguments.length -  6);
while (G__22076__i < G__22076__a.length) {G__22076__a[G__22076__i] = arguments[G__22076__i + 6]; ++G__22076__i;}
G__22075 = new cljs.core.IndexedSeq(G__22076__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22023,f,a,b,c, G__22075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22087 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22087) : f.call(null,G__22087));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22088 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22089 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22088,G__22089) : f.call(null,G__22088,G__22089));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22090 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22091 = x;
var G__22092 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22090,G__22091,G__22092) : f.call(null,G__22090,G__22091,G__22092));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22093 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22094 = x;
var G__22095 = y;
var G__22096 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22093,G__22094,G__22095,G__22096) : f.call(null,G__22093,G__22094,G__22095,G__22096));
})());
});
var update__7 = (function() { 
var G__22097__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__22097 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__22098__i = 0, G__22098__a = new Array(arguments.length -  6);
while (G__22098__i < G__22098__a.length) {G__22098__a[G__22098__i] = arguments[G__22098__i + 6]; ++G__22098__i;}
  more = new cljs.core.IndexedSeq(G__22098__a,0);
} 
return G__22097__delegate.call(this,m,k,f,x,y,z,more);};
G__22097.cljs$lang$maxFixedArity = 6;
G__22097.cljs$lang$applyTo = (function (arglist__22099){
var m = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var k = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var f = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var x = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var y = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var z = cljs.core.first(arglist__22099);
var more = cljs.core.rest(arglist__22099);
return G__22097__delegate(m,k,f,x,y,z,more);
});
G__22097.cljs$core$IFn$_invoke$arity$variadic = G__22097__delegate;
return G__22097;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__22100 = null;
if (arguments.length > 6) {
var G__22101__i = 0, G__22101__a = new Array(arguments.length -  6);
while (G__22101__i < G__22101__a.length) {G__22101__a[G__22101__i] = arguments[G__22101__i + 6]; ++G__22101__i;}
G__22100 = new cljs.core.IndexedSeq(G__22101__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__22100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__22102 = (ll - (5));
var G__22103 = r;
ll = G__22102;
ret = G__22103;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22108 = cljs.core.pv_aget(node,(0));
var G__22109 = (level - (5));
node = G__22108;
level = G__22109;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22110 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__22111 = (level - (5));
node = G__22110;
level = G__22111;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22121 = init__$2;
var G__22122 = (j + i);
var G__22123 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22121,G__22122,G__22123) : f.call(null,G__22121,G__22122,G__22123));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22134 = (j + (1));
var G__22135 = init__$3;
j = G__22134;
init__$2 = G__22135;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22124 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22124) : cljs.core.deref.call(null,G__22124));
} else {
var G__22136 = (i + len);
var G__22137 = init__$2;
i = G__22136;
init__$1 = G__22137;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__22125 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__22125) : cljs.core.tv_editable_root.call(null,G__22125));
})(),(function (){var G__22126 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__22126) : cljs.core.tv_editable_tail.call(null,G__22126));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22127 = init__$2;
var G__22128 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22127,G__22128) : f.call(null,G__22127,G__22128));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22138 = (j + (1));
var G__22139 = init__$3;
j = G__22138;
init__$2 = G__22139;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22129 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22129) : cljs.core.deref.call(null,G__22129));
} else {
var G__22140 = (i + len);
var G__22141 = init__$2;
i = G__22140;
init__$1 = G__22141;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__22130 = coll__$1;
var G__22131 = cljs.core.first_array_for_longvec(coll__$1);
var G__22132 = (0);
var G__22133 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22130,G__22131,G__22132,G__22133) : cljs.core.chunked_seq.call(null,G__22130,G__22131,G__22132,G__22133));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13074__auto___22142 = len;
var i_22143 = (0);
while(true){
if((i_22143 < n__13074__auto___22142)){
(new_tail[i_22143] = (self__.tail[i_22143]));

var G__22144 = (i_22143 + (1));
i_22143 = G__22144;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__22145 = null;
var G__22145__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22145__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22145 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22145__2.call(this,self__,k);
case 3:
return G__22145__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22145.cljs$core$IFn$_invoke$arity$2 = G__22145__2;
G__22145.cljs$core$IFn$_invoke$arity$3 = G__22145__3;
return G__22145;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args22120){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22120)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__22146 = (i + (1));
var G__22147 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__22146;
out = G__22147;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22148__i = 0, G__22148__a = new Array(arguments.length -  0);
while (G__22148__i < G__22148__a.length) {G__22148__a[G__22148__i] = arguments[G__22148__i + 0]; ++G__22148__i;}
  args = new cljs.core.IndexedSeq(G__22148__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__22149){
var args = cljs.core.seq(arglist__22149);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22150 = self__.vec;
var G__22151 = self__.node;
var G__22152 = self__.i;
var G__22153 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22150,G__22151,G__22152,G__22153) : cljs.core.chunked_seq.call(null,G__22150,G__22151,G__22152,G__22153));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__22154 = self__.vec;
var G__22155 = (self__.i + self__.off);
var G__22156 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22154,G__22155,G__22156) : cljs.core.subvec.call(null,G__22154,G__22155,G__22156));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__22157 = self__.vec;
var G__22158 = (self__.i + self__.off);
var G__22159 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22157,G__22158,G__22159) : cljs.core.subvec.call(null,G__22157,G__22158,G__22159));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22160 = self__.vec;
var G__22161 = self__.node;
var G__22162 = self__.i;
var G__22163 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22160,G__22161,G__22162,G__22163) : cljs.core.chunked_seq.call(null,G__22160,G__22161,G__22162,G__22163));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22164 = self__.vec;
var G__22165 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22166 = end;
var G__22167 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22164,G__22165,G__22166,G__22167) : cljs.core.chunked_seq.call(null,G__22164,G__22165,G__22166,G__22167));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__22168 = self__.vec;
var G__22169 = self__.node;
var G__22170 = self__.i;
var G__22171 = self__.off;
var G__22172 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__22168,G__22169,G__22170,G__22171,G__22172) : cljs.core.chunked_seq.call(null,G__22168,G__22169,G__22170,G__22171,G__22172));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22173 = self__.vec;
var G__22174 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22175 = end;
var G__22176 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22173,G__22174,G__22175,G__22176) : cljs.core.chunked_seq.call(null,G__22173,G__22174,G__22175,G__22176));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__22178 = self__.meta;
var G__22179 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__22180 = self__.start;
var G__22181 = (function (){var x__12504__auto__ = self__.end;
var y__12505__auto__ = (v_pos + (1));
return ((x__12504__auto__ > y__12505__auto__) ? x__12504__auto__ : y__12505__auto__);
})();
var G__22182 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22178,G__22179,G__22180,G__22181,G__22182) : cljs.core.build_subvec.call(null,G__22178,G__22179,G__22180,G__22181,G__22182));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__22183 = self__.meta;
var G__22184 = self__.v;
var G__22185 = self__.start;
var G__22186 = (self__.end - (1));
var G__22187 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22183,G__22184,G__22185,G__22186,G__22187) : cljs.core.build_subvec.call(null,G__22183,G__22184,G__22185,G__22186,G__22187));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__22189 = meta__$1;
var G__22190 = self__.v;
var G__22191 = self__.start;
var G__22192 = self__.end;
var G__22193 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22189,G__22190,G__22191,G__22192,G__22193) : cljs.core.build_subvec.call(null,G__22189,G__22190,G__22191,G__22192,G__22193));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22194 = self__.meta;
var G__22195 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__22196 = self__.start;
var G__22197 = (self__.end + (1));
var G__22198 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22194,G__22195,G__22196,G__22197,G__22198) : cljs.core.build_subvec.call(null,G__22194,G__22195,G__22196,G__22197,G__22198));
});

cljs.core.Subvec.prototype.call = (function() {
var G__22199 = null;
var G__22199__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22199__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22199 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22199__2.call(this,self__,k);
case 3:
return G__22199__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22199.cljs$core$IFn$_invoke$arity$2 = G__22199__2;
G__22199.cljs$core$IFn$_invoke$arity$3 = G__22199__3;
return G__22199;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args22177){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22177)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__22200 = meta;
var G__22201 = v.v;
var G__22202 = (v.start + start);
var G__22203 = (v.start + end);
var G__22204 = __hash;
meta = G__22200;
v = G__22201;
start = G__22202;
end = G__22203;
__hash = G__22204;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj22211 = {};
return obj22211;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__22219 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__22220 = (level - (5));
node = G__22219;
level = G__22220;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__22224 = null;
var G__22224__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22224__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22224 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22224__2.call(this,self__,k);
case 3:
return G__22224__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22224.cljs$core$IFn$_invoke$arity$2 = G__22224__2;
G__22224.cljs$core$IFn$_invoke$arity$3 = G__22224__3;
return G__22224;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args22221){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22221)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12187__auto__ = self__.front;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12187__auto__ = self__.rear;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__22225 = (i + incr);
i = G__22225;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__22226 = (i + (1));
var G__22227 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__22226;
out = G__22227;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj22231 = {};
return obj22231;
})();
var l = ks.length;
var i_22232 = (0);
while(true){
if((i_22232 < l)){
var k_22233 = (ks[i_22232]);
(new_obj[k_22233] = (obj[k_22233]));

var G__22234 = (i_22232 + (1));
i_22232 = G__22234;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12175__auto__ = (function (){var G__22238 = k;
return goog.isString(G__22238);
})();
if(cljs.core.truth_(and__12175__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12175__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__22239 = init__$1;
var G__22240 = k;
var G__22241 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22239,G__22240,G__22241) : f.call(null,G__22239,G__22240,G__22241));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22242 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22242) : cljs.core.deref.call(null,G__22242));
} else {
var G__22248 = cljs.core.rest(keys__$1);
var G__22249 = init__$2;
keys__$1 = G__22248;
init__$1 = G__22249;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12175__auto__ = (function (){var G__22244 = k;
return goog.isString(G__22244);
})();
if(cljs.core.truth_(and__12175__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12175__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__22245 = k;
return goog.isString(G__22245);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12175__auto__ = (function (){var G__22247 = k;
return goog.isString(G__22247);
})();
if(cljs.core.truth_(and__12175__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12175__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__22235_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__22235_SHARP_,(self__.strobj[p1__22235_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__22250 = null;
var G__22250__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22250__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22250 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22250__2.call(this,self__,k);
case 3:
return G__22250__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22250.cljs$core$IFn$_invoke$arity$2 = G__22250__2;
G__22250.cljs$core$IFn$_invoke$arity$3 = G__22250__3;
return G__22250;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args22236){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22236)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj22252 = {};
return obj22252;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__22253 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22253,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22253,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__22254 = (i + (2));
i = G__22254;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__22255 = (i + (2));
i = G__22255;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__22256 = (i + (2));
i = G__22256;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__22257 = (i + (2));
i = G__22257;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__22258 = (i + (2));
i = G__22258;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12187__auto__ = (function (){var G__22262 = k;
return goog.isString(G__22262);
})();
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_22263 = (0);
while(true){
if((i_22263 < l)){
(narr[i_22263] = (arr[i_22263]));

var G__22264 = (i_22263 + (1));
i_22263 = G__22264;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22266 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22266) : cljs.core.keys.call(null,G__22266));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22267 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22267) : cljs.core.vals.call(null,G__22267));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22268 = cljs.core.seq(coll);
var chunk__22269 = null;
var count__22270 = (0);
var i__22271 = (0);
while(true){
if((i__22271 < count__22270)){
var vec__22272 = chunk__22269.cljs$core$IIndexed$_nth$arity$2(null,i__22271);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22272,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22272,(1),null);
var G__22273_22286 = v;
var G__22274_22287 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22273_22286,G__22274_22287) : f.call(null,G__22273_22286,G__22274_22287));

var G__22288 = seq__22268;
var G__22289 = chunk__22269;
var G__22290 = count__22270;
var G__22291 = (i__22271 + (1));
seq__22268 = G__22288;
chunk__22269 = G__22289;
count__22270 = G__22290;
i__22271 = G__22291;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22268);
if(temp__4126__auto__){
var seq__22268__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22268__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__22268__$1);
var G__22292 = cljs.core.chunk_rest(seq__22268__$1);
var G__22293 = c__12974__auto__;
var G__22294 = cljs.core.count(c__12974__auto__);
var G__22295 = (0);
seq__22268 = G__22292;
chunk__22269 = G__22293;
count__22270 = G__22294;
i__22271 = G__22295;
continue;
} else {
var vec__22275 = cljs.core.first(seq__22268__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22275,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22275,(1),null);
var G__22276_22296 = v;
var G__22277_22297 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22276_22296,G__22277_22297) : f.call(null,G__22276_22296,G__22277_22297));

var G__22298 = cljs.core.next(seq__22268__$1);
var G__22299 = null;
var G__22300 = (0);
var G__22301 = (0);
seq__22268 = G__22298;
chunk__22269 = G__22299;
count__22270 = G__22300;
i__22271 = G__22301;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__22278 = init__$1;
var G__22279 = (self__.arr[i]);
var G__22280 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22278,G__22279,G__22280) : f.call(null,G__22278,G__22279,G__22280));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22281 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22281) : cljs.core.deref.call(null,G__22281));
} else {
var G__22302 = (i + (2));
var G__22303 = init__$2;
i = G__22302;
init__$1 = G__22303;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__22282 = other;
if(G__22282){
var bit__12861__auto__ = (G__22282.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__12861__auto__) || (G__22282.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__22304 = (i + (2));
i = G__22304;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj22284 = {};
return obj22284;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__22305 = (s + (2));
var G__22306 = d;
s = G__22305;
d = G__22306;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__22307 = (s + (2));
var G__22308 = (d + (2));
s = G__22307;
d = G__22308;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__22285 = cljs.core.aclone(self__.arr);
(G__22285[(idx + (1))] = v);

return G__22285;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22309 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22310 = cljs.core.next(es);
ret = G__22309;
es = G__22310;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__22311 = null;
var G__22311__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22311__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22311 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22311__2.call(this,self__,k);
case 3:
return G__22311__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22311.cljs$core$IFn$_invoke$arity$2 = G__22311__2;
G__22311.cljs$core$IFn$_invoke$arity$3 = G__22311__3;
return G__22311;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args22265){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22265)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22312 = (i + (2));
var G__22313 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22312;
ret = G__22313;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__22314_22322 = self__.arr;
G__22314_22322.pop();

G__22314_22322.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__22315 = self__.len;
var G__22316 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__22315,G__22316) : cljs.core.array__GT_transient_hash_map.call(null,G__22315,G__22316));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__22317 = o;
if(G__22317){
var bit__12868__auto__ = (G__22317.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12868__auto__) || (G__22317.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22317.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22317);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22317);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__22318 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22318) : cljs.core.key.call(null,G__22318));
})(),(function (){var G__22319 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22319) : cljs.core.val.call(null,G__22319));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22323 = cljs.core.next(es);
var G__22324 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__22320 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22320) : cljs.core.key.call(null,G__22320));
})(),(function (){var G__22321 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22321) : cljs.core.val.call(null,G__22321));
})());
es = G__22323;
tcoll__$2 = G__22324;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__22325 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__22326 = (i + (2));
out = G__22325;
i = G__22326;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__22329 = cljs.core.aclone(arr);
(G__22329[i] = a);

return G__22329;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__22330 = cljs.core.aclone(arr);
(G__22330[i] = a);

(G__22330[j] = b);

return G__22330;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__22335 = init__$1;
var G__22336 = k;
var G__22337 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22335,G__22336,G__22337) : f.call(null,G__22335,G__22336,G__22337));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22338 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22338) : cljs.core.deref.call(null,G__22338));
} else {
var G__22339 = (i + (2));
var G__22340 = init__$2;
i = G__22339;
init__$1 = G__22340;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22341 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22341) : cljs.core.create_inode_seq.call(null,G__22341));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22355 = (0);
var j_22356 = (0);
while(true){
if((i_22355 < (32))){
if((((self__.bitmap >>> i_22355) & (1)) === (0))){
var G__22357 = (i_22355 + (1));
var G__22358 = j_22356;
i_22355 = G__22357;
j_22356 = G__22358;
continue;
} else {
(nodes[i_22355] = ((!(((self__.arr[j_22356]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_22356])),(self__.arr[j_22356]),(self__.arr[(j_22356 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22356 + (1))])));

var G__22359 = (i_22355 + (1));
var G__22360 = (j_22356 + (2));
i_22355 = G__22359;
j_22356 = G__22360;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22342 = edit__$1;
var G__22343 = (shift + (5));
var G__22344 = key_or_nil;
var G__22345 = val_or_node;
var G__22346 = hash;
var G__22347 = key;
var G__22348 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22342,G__22343,G__22344,G__22345,G__22346,G__22347,G__22348) : cljs.core.create_node.call(null,G__22342,G__22343,G__22344,G__22345,G__22346,G__22347,G__22348));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22361 = (0);
var j_22362 = (0);
while(true){
if((i_22361 < (32))){
if((((self__.bitmap >>> i_22361) & (1)) === (0))){
var G__22363 = (i_22361 + (1));
var G__22364 = j_22362;
i_22361 = G__22363;
j_22362 = G__22364;
continue;
} else {
(nodes[i_22361] = ((!(((self__.arr[j_22362]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_22362])),(self__.arr[j_22362]),(self__.arr[(j_22362 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22362 + (1))])));

var G__22365 = (i_22361 + (1));
var G__22366 = (j_22362 + (2));
i_22361 = G__22365;
j_22362 = G__22366;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22349 = (shift + (5));
var G__22350 = key_or_nil;
var G__22351 = val_or_node;
var G__22352 = hash;
var G__22353 = key;
var G__22354 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22349,G__22350,G__22351,G__22352,G__22353,G__22354) : cljs.core.create_node.call(null,G__22349,G__22350,G__22351,G__22352,G__22353,G__22354));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__22367 = (i + (1));
var G__22368 = (j + (2));
var G__22369 = (bitmap | ((1) << i));
i = G__22367;
j = G__22368;
bitmap = G__22369;
continue;
} else {
var G__22370 = (i + (1));
var G__22371 = j;
var G__22372 = bitmap;
i = G__22370;
j = G__22371;
bitmap = G__22372;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22373 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__22373) : cljs.core.create_array_node_seq.call(null,G__22373));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22374 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22374) : cljs.core.deref.call(null,G__22374));
} else {
var G__22375 = (i + (1));
var G__22376 = init__$2;
i = G__22375;
init__$1 = G__22376;
continue;
}
} else {
var G__22377 = (i + (1));
var G__22378 = init__$1;
i = G__22377;
init__$1 = G__22378;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__22379 = (i + (2));
i = G__22379;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22380 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22380) : cljs.core.create_inode_seq.call(null,G__22380));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__22381 = self__.nodes;
var G__22382 = (self__.i + (2));
var G__22383 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22381,G__22382,G__22383) : cljs.core.create_inode_seq.call(null,G__22381,G__22382,G__22383));
} else {
var G__22384 = self__.nodes;
var G__22385 = self__.i;
var G__22386 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22384,G__22385,G__22386) : cljs.core.create_inode_seq.call(null,G__22384,G__22385,G__22386));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__22390 = (j + (2));
j = G__22390;
continue;
}
} else {
var G__22391 = (j + (2));
j = G__22391;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22392 = null;
var G__22393 = self__.nodes;
var G__22394 = self__.i;
var G__22395 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22392,G__22393,G__22394,G__22395) : cljs.core.create_array_node_seq.call(null,G__22392,G__22393,G__22394,G__22395));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__22400 = (j + (1));
j = G__22400;
continue;
}
} else {
var G__22401 = (j + (1));
j = G__22401;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22403 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22403) : cljs.core.keys.call(null,G__22403));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22404 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22404) : cljs.core.vals.call(null,G__22404));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22405 = cljs.core.seq(coll);
var chunk__22406 = null;
var count__22407 = (0);
var i__22408 = (0);
while(true){
if((i__22408 < count__22407)){
var vec__22409 = chunk__22406.cljs$core$IIndexed$_nth$arity$2(null,i__22408);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22409,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22409,(1),null);
var G__22410_22421 = v;
var G__22411_22422 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22410_22421,G__22411_22422) : f.call(null,G__22410_22421,G__22411_22422));

var G__22423 = seq__22405;
var G__22424 = chunk__22406;
var G__22425 = count__22407;
var G__22426 = (i__22408 + (1));
seq__22405 = G__22423;
chunk__22406 = G__22424;
count__22407 = G__22425;
i__22408 = G__22426;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22405);
if(temp__4126__auto__){
var seq__22405__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22405__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__22405__$1);
var G__22427 = cljs.core.chunk_rest(seq__22405__$1);
var G__22428 = c__12974__auto__;
var G__22429 = cljs.core.count(c__12974__auto__);
var G__22430 = (0);
seq__22405 = G__22427;
chunk__22406 = G__22428;
count__22407 = G__22429;
i__22408 = G__22430;
continue;
} else {
var vec__22412 = cljs.core.first(seq__22405__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22412,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22412,(1),null);
var G__22413_22431 = v;
var G__22414_22432 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22413_22431,G__22414_22432) : f.call(null,G__22413_22431,G__22414_22432));

var G__22433 = cljs.core.next(seq__22405__$1);
var G__22434 = null;
var G__22435 = (0);
var G__22436 = (0);
seq__22405 = G__22433;
chunk__22406 = G__22434;
count__22407 = G__22435;
i__22408 = G__22436;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__22415 = init;
var G__22416 = null;
var G__22417 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22415,G__22416,G__22417) : f.call(null,G__22415,G__22416,G__22417));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22418 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22418) : cljs.core.deref.call(null,G__22418));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj22420 = {};
return obj22420;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22437 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22438 = cljs.core.next(es);
ret = G__22437;
es = G__22438;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__22439 = null;
var G__22439__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22439__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22439 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22439__2.call(this,self__,k);
case 3:
return G__22439__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22439.cljs$core$IFn$_invoke$arity$2 = G__22439__2;
G__22439.cljs$core$IFn$_invoke$arity$3 = G__22439__3;
return G__22439;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args22402){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22402)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22440 = (i + (1));
var G__22441 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__22440;
out = G__22441;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__22442 = o;
if(G__22442){
var bit__12868__auto__ = (G__22442.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__12868__auto__) || (G__22442.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22442.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22442);
}
})()){
return tcoll.assoc_BANG_((function (){var G__22443 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22443) : cljs.core.key.call(null,G__22443));
})(),(function (){var G__22444 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22444) : cljs.core.val.call(null,G__22444));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22447 = cljs.core.next(es);
var G__22448 = tcoll__$1.assoc_BANG_((function (){var G__22445 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22445) : cljs.core.key.call(null,G__22445));
})(),(function (){var G__22446 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22446) : cljs.core.val.call(null,G__22446));
})());
es = G__22447;
tcoll__$1 = G__22448;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__22449 = ((ascending_QMARK_)?t.left:t.right);
var G__22450 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__22449;
stack__$1 = G__22450;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22463 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22463) : cljs.core.deref.call(null,G__22463));
} else {
var init__$2 = (function (){var G__22464 = init__$1;
var G__22465 = node.key;
var G__22466 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22464,G__22465,G__22466) : f.call(null,G__22464,G__22465,G__22466));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22467 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22467) : cljs.core.deref.call(null,G__22467));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__22468 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22468) : cljs.core.deref.call(null,G__22468));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__22470 = null;
var G__22470__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22470__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22470 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22470__2.call(this,self__,k);
case 3:
return G__22470__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22470.cljs$core$IFn$_invoke$arity$2 = G__22470__2;
G__22470.cljs$core$IFn$_invoke$arity$3 = G__22470__3;
return G__22470;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args22469){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22469)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__22472 = null;
var G__22472__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22472__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22472 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22472__2.call(this,self__,k);
case 3:
return G__22472__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22472.cljs$core$IFn$_invoke$arity$2 = G__22472__2;
G__22472.cljs$core$IFn$_invoke$arity$3 = G__22472__3;
return G__22472;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args22471){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22471)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__22485 = k;
var G__22486 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22485,G__22486) : comp.call(null,G__22485,G__22486));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__22505 = k;
var G__22506 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22505,G__22506) : comp.call(null,G__22505,G__22506));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__22517 = k;
var G__22518 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22517,G__22518) : comp.call(null,G__22517,G__22518));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22520 = cljs.core.seq(coll);
var chunk__22521 = null;
var count__22522 = (0);
var i__22523 = (0);
while(true){
if((i__22523 < count__22522)){
var vec__22524 = chunk__22521.cljs$core$IIndexed$_nth$arity$2(null,i__22523);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22524,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22524,(1),null);
var G__22525_22537 = v;
var G__22526_22538 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22525_22537,G__22526_22538) : f.call(null,G__22525_22537,G__22526_22538));

var G__22539 = seq__22520;
var G__22540 = chunk__22521;
var G__22541 = count__22522;
var G__22542 = (i__22523 + (1));
seq__22520 = G__22539;
chunk__22521 = G__22540;
count__22522 = G__22541;
i__22523 = G__22542;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22520);
if(temp__4126__auto__){
var seq__22520__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22520__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__22520__$1);
var G__22543 = cljs.core.chunk_rest(seq__22520__$1);
var G__22544 = c__12974__auto__;
var G__22545 = cljs.core.count(c__12974__auto__);
var G__22546 = (0);
seq__22520 = G__22543;
chunk__22521 = G__22544;
count__22522 = G__22545;
i__22523 = G__22546;
continue;
} else {
var vec__22527 = cljs.core.first(seq__22520__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22527,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22527,(1),null);
var G__22528_22547 = v;
var G__22529_22548 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22528_22547,G__22529_22548) : f.call(null,G__22528_22547,G__22529_22548));

var G__22549 = cljs.core.next(seq__22520__$1);
var G__22550 = null;
var G__22551 = (0);
var G__22552 = (0);
seq__22520 = G__22549;
chunk__22521 = G__22550;
count__22522 = G__22551;
i__22523 = G__22552;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22530 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22530) : cljs.core.keys.call(null,G__22530));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22531 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22531) : cljs.core.vals.call(null,G__22531));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22532 = k;
var G__22533 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22532,G__22533) : self__.comp.call(null,G__22532,G__22533));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22553 = t.left;
t = G__22553;
continue;
} else {
var G__22554 = t.right;
t = G__22554;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22555 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22556 = cljs.core.next(es);
ret = G__22555;
es = G__22556;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22557 = null;
var G__22557__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22557__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22557 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22557__2.call(this,self__,k);
case 3:
return G__22557__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22557.cljs$core$IFn$_invoke$arity$2 = G__22557__2;
G__22557.cljs$core$IFn$_invoke$arity$3 = G__22557__3;
return G__22557;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args22519){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22519)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22534 = k;
var G__22535 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22534,G__22535) : self__.comp.call(null,G__22534,G__22535));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22558 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22559 = t.left;
stack = G__22558;
t = G__22559;
continue;
} else {
var G__22560 = stack;
var G__22561 = t.right;
stack = G__22560;
t = G__22561;
continue;
}
} else {
if((c > (0))){
var G__22562 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22563 = t.right;
stack = G__22562;
t = G__22563;
continue;
} else {
var G__22564 = stack;
var G__22565 = t.left;
stack = G__22564;
t = G__22565;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__22536 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22536) : cljs.core.key.call(null,G__22536));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22566 = cljs.core.nnext(in$);
var G__22567 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22566;
out = G__22567;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22568__i = 0, G__22568__a = new Array(arguments.length -  0);
while (G__22568__i < G__22568__a.length) {G__22568__a[G__22568__i] = arguments[G__22568__i + 0]; ++G__22568__i;}
  keyvals = new cljs.core.IndexedSeq(G__22568__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22569){
var keyvals = cljs.core.seq(arglist__22569);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22570__i = 0, G__22570__a = new Array(arguments.length -  0);
while (G__22570__i < G__22570__a.length) {G__22570__a[G__22570__i] = arguments[G__22570__i + 0]; ++G__22570__i;}
  keyvals = new cljs.core.IndexedSeq(G__22570__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22571){
var keyvals = cljs.core.seq(arglist__22571);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22575 = {};
return obj22575;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22576 = cljs.core.nnext(kvs);
kvs = G__22576;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22577__i = 0, G__22577__a = new Array(arguments.length -  0);
while (G__22577__i < G__22577__a.length) {G__22577__a[G__22577__i] = arguments[G__22577__i + 0]; ++G__22577__i;}
  keyvals = new cljs.core.IndexedSeq(G__22577__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22578){
var keyvals = cljs.core.seq(arglist__22578);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22579 = cljs.core.nnext(in$);
var G__22580 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22579;
out = G__22580;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22581__i = 0, G__22581__a = new Array(arguments.length -  0);
while (G__22581__i < G__22581__a.length) {G__22581__a[G__22581__i] = arguments[G__22581__i + 0]; ++G__22581__i;}
  keyvals = new cljs.core.IndexedSeq(G__22581__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22582){
var keyvals = cljs.core.seq(arglist__22582);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22583 = cljs.core.nnext(in$);
var G__22584 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22583;
out = G__22584;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22585__i = 0, G__22585__a = new Array(arguments.length -  1);
while (G__22585__i < G__22585__a.length) {G__22585__a[G__22585__i] = arguments[G__22585__i + 1]; ++G__22585__i;}
  keyvals = new cljs.core.IndexedSeq(G__22585__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22586){
var comparator = cljs.core.first(arglist__22586);
var keyvals = cljs.core.rest(arglist__22586);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22587 = self__.mseq;
if(G__22587){
var bit__12868__auto__ = (G__22587.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12868__auto__) || (G__22587.cljs$core$INext$)){
return true;
} else {
if((!G__22587.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22587);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22587);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22588 = self__.mseq;
if(G__22588){
var bit__12868__auto__ = (G__22588.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12868__auto__) || (G__22588.cljs$core$INext$)){
return true;
} else {
if((!G__22588.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22588);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22588);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22589 = self__.mseq;
if(G__22589){
var bit__12868__auto__ = (G__22589.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12868__auto__) || (G__22589.cljs$core$INext$)){
return true;
} else {
if((!G__22589.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22589);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22589);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22590 = self__.mseq;
if(G__22590){
var bit__12868__auto__ = (G__22590.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__12868__auto__) || (G__22590.cljs$core$INext$)){
return true;
} else {
if((!G__22590.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22590);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22590);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22591_SHARP_,p2__22592_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12187__auto__ = p1__22591_SHARP_;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22592_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22593__i = 0, G__22593__a = new Array(arguments.length -  0);
while (G__22593__i < G__22593__a.length) {G__22593__a[G__22593__i] = arguments[G__22593__i + 0]; ++G__22593__i;}
  maps = new cljs.core.IndexedSeq(G__22593__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22594){
var maps = cljs.core.seq(arglist__22594);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22597 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22598 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22597,G__22598) : f.call(null,G__22597,G__22598));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12187__auto__ = m1;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22599__i = 0, G__22599__a = new Array(arguments.length -  1);
while (G__22599__i < G__22599__a.length) {G__22599__a[G__22599__i] = arguments[G__22599__i + 1]; ++G__22599__i;}
  maps = new cljs.core.IndexedSeq(G__22599__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22600){
var f = cljs.core.first(arglist__22600);
var maps = cljs.core.rest(arglist__22600);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__22601 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22602 = cljs.core.next(keys);
ret = G__22601;
keys = G__22602;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22605 = cljs.core.seq(coll);
var chunk__22606 = null;
var count__22607 = (0);
var i__22608 = (0);
while(true){
if((i__22608 < count__22607)){
var vec__22609 = chunk__22606.cljs$core$IIndexed$_nth$arity$2(null,i__22608);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22609,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22609,(1),null);
var G__22610_22615 = v;
var G__22611_22616 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22610_22615,G__22611_22616) : f.call(null,G__22610_22615,G__22611_22616));

var G__22617 = seq__22605;
var G__22618 = chunk__22606;
var G__22619 = count__22607;
var G__22620 = (i__22608 + (1));
seq__22605 = G__22617;
chunk__22606 = G__22618;
count__22607 = G__22619;
i__22608 = G__22620;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22605);
if(temp__4126__auto__){
var seq__22605__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22605__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__22605__$1);
var G__22621 = cljs.core.chunk_rest(seq__22605__$1);
var G__22622 = c__12974__auto__;
var G__22623 = cljs.core.count(c__12974__auto__);
var G__22624 = (0);
seq__22605 = G__22621;
chunk__22606 = G__22622;
count__22607 = G__22623;
i__22608 = G__22624;
continue;
} else {
var vec__22612 = cljs.core.first(seq__22605__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22612,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22612,(1),null);
var G__22613_22625 = v;
var G__22614_22626 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22613_22625,G__22614_22626) : f.call(null,G__22613_22625,G__22614_22626));

var G__22627 = cljs.core.next(seq__22605__$1);
var G__22628 = null;
var G__22629 = (0);
var G__22630 = (0);
seq__22605 = G__22627;
chunk__22606 = G__22628;
count__22607 = G__22629;
i__22608 = G__22630;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22603_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22603_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__22631 = null;
var G__22631__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22631__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22631 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22631__2.call(this,self__,k);
case 3:
return G__22631__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22631.cljs$core$IFn$_invoke$arity$2 = G__22631__2;
G__22631.cljs$core$IFn$_invoke$arity$3 = G__22631__3;
return G__22631;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22604){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22604)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22632 = (i + (1));
var G__22633 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__22632;
out = G__22633;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__22634 = (i + (1));
var G__22635 = cljs.core._conj_BANG_(out,(items[i]));
i = G__22634;
out = G__22635;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__22637 = null;
var G__22637__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__22637__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__22637 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22637__2.call(this,self__,k);
case 3:
return G__22637__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22637.cljs$core$IFn$_invoke$arity$2 = G__22637__2;
G__22637.cljs$core$IFn$_invoke$arity$3 = G__22637__3;
return G__22637;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args22636){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22636)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22640 = cljs.core.seq(coll);
var chunk__22641 = null;
var count__22642 = (0);
var i__22643 = (0);
while(true){
if((i__22643 < count__22642)){
var vec__22644 = chunk__22641.cljs$core$IIndexed$_nth$arity$2(null,i__22643);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22644,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22644,(1),null);
var G__22645_22650 = v;
var G__22646_22651 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22645_22650,G__22646_22651) : f.call(null,G__22645_22650,G__22646_22651));

var G__22652 = seq__22640;
var G__22653 = chunk__22641;
var G__22654 = count__22642;
var G__22655 = (i__22643 + (1));
seq__22640 = G__22652;
chunk__22641 = G__22653;
count__22642 = G__22654;
i__22643 = G__22655;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22640);
if(temp__4126__auto__){
var seq__22640__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22640__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__22640__$1);
var G__22656 = cljs.core.chunk_rest(seq__22640__$1);
var G__22657 = c__12974__auto__;
var G__22658 = cljs.core.count(c__12974__auto__);
var G__22659 = (0);
seq__22640 = G__22656;
chunk__22641 = G__22657;
count__22642 = G__22658;
i__22643 = G__22659;
continue;
} else {
var vec__22647 = cljs.core.first(seq__22640__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22647,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22647,(1),null);
var G__22648_22660 = v;
var G__22649_22661 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22648_22660,G__22649_22661) : f.call(null,G__22648_22660,G__22649_22661));

var G__22662 = cljs.core.next(seq__22640__$1);
var G__22663 = null;
var G__22664 = (0);
var G__22665 = (0);
seq__22640 = G__22662;
chunk__22641 = G__22663;
count__22642 = G__22664;
i__22643 = G__22665;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22638_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22638_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22666 = null;
var G__22666__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22666__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22666 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22666__2.call(this,self__,k);
case 3:
return G__22666__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22666.cljs$core$IFn$_invoke$arity$2 = G__22666__2;
G__22666.cljs$core$IFn$_invoke$arity$3 = G__22666__3;
return G__22666;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args22639){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22639)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13068__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13068__auto__.length)){
var G__22667 = (i + (1));
var G__22668 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22667;
res = G__22668;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22669 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22670 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22669;
out = G__22670;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22671__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22671 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22672__i = 0, G__22672__a = new Array(arguments.length -  0);
while (G__22672__i < G__22672__a.length) {G__22672__a[G__22672__i] = arguments[G__22672__i + 0]; ++G__22672__i;}
  keys = new cljs.core.IndexedSeq(G__22672__a,0);
} 
return G__22671__delegate.call(this,keys);};
G__22671.cljs$lang$maxFixedArity = 0;
G__22671.cljs$lang$applyTo = (function (arglist__22673){
var keys = cljs.core.seq(arglist__22673);
return G__22671__delegate(keys);
});
G__22671.cljs$core$IFn$_invoke$arity$variadic = G__22671__delegate;
return G__22671;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22674 = null;
if (arguments.length > 0) {
var G__22675__i = 0, G__22675__a = new Array(arguments.length -  0);
while (G__22675__i < G__22675__a.length) {G__22675__a[G__22675__i] = arguments[G__22675__i + 0]; ++G__22675__i;}
G__22674 = new cljs.core.IndexedSeq(G__22675__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22676__i = 0, G__22676__a = new Array(arguments.length -  0);
while (G__22676__i < G__22676__a.length) {G__22676__a[G__22676__i] = arguments[G__22676__i + 0]; ++G__22676__i;}
  keys = new cljs.core.IndexedSeq(G__22676__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22677){
var keys = cljs.core.seq(arglist__22677);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22678__i = 0, G__22678__a = new Array(arguments.length -  1);
while (G__22678__i < G__22678__a.length) {G__22678__a[G__22678__i] = arguments[G__22678__i + 1]; ++G__22678__i;}
  keys = new cljs.core.IndexedSeq(G__22678__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22679){
var comparator = cljs.core.first(arglist__22679);
var keys = cljs.core.rest(arglist__22679);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22680_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22680_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22680_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22681_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22681_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22681_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22692,seen__$1){
while(true){
var vec__22693 = p__22692;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22693,(0),null);
var xs__$1 = vec__22693;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22694 = cljs.core.rest(s);
var G__22695 = seen__$1;
p__22692 = G__22694;
seen__$1 = G__22695;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22696 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22697 = cljs.core.next(s__$1);
ret = G__22696;
s__$1 = G__22697;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22699 = x;
if(G__22699){
var bit__12861__auto__ = (G__22699.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__12861__auto__) || (G__22699.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22700 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22701 = cljs.core.next(ks);
var G__22702 = cljs.core.next(vs);
map = G__22700;
ks = G__22701;
vs = G__22702;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22713 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22713) : k.call(null,G__22713));
})() > (function (){var G__22714 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22714) : k.call(null,G__22714));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22715__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22703_SHARP_,p2__22704_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22703_SHARP_,p2__22704_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22715 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22716__i = 0, G__22716__a = new Array(arguments.length -  3);
while (G__22716__i < G__22716__a.length) {G__22716__a[G__22716__i] = arguments[G__22716__i + 3]; ++G__22716__i;}
  more = new cljs.core.IndexedSeq(G__22716__a,0);
} 
return G__22715__delegate.call(this,k,x,y,more);};
G__22715.cljs$lang$maxFixedArity = 3;
G__22715.cljs$lang$applyTo = (function (arglist__22717){
var k = cljs.core.first(arglist__22717);
arglist__22717 = cljs.core.next(arglist__22717);
var x = cljs.core.first(arglist__22717);
arglist__22717 = cljs.core.next(arglist__22717);
var y = cljs.core.first(arglist__22717);
var more = cljs.core.rest(arglist__22717);
return G__22715__delegate(k,x,y,more);
});
G__22715.cljs$core$IFn$_invoke$arity$variadic = G__22715__delegate;
return G__22715;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22718 = null;
if (arguments.length > 3) {
var G__22719__i = 0, G__22719__a = new Array(arguments.length -  3);
while (G__22719__i < G__22719__a.length) {G__22719__a[G__22719__i] = arguments[G__22719__i + 3]; ++G__22719__i;}
G__22718 = new cljs.core.IndexedSeq(G__22719__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22730 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22730) : k.call(null,G__22730));
})() < (function (){var G__22731 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22731) : k.call(null,G__22731));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22732__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22720_SHARP_,p2__22721_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22720_SHARP_,p2__22721_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22732 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22733__i = 0, G__22733__a = new Array(arguments.length -  3);
while (G__22733__i < G__22733__a.length) {G__22733__a[G__22733__i] = arguments[G__22733__i + 3]; ++G__22733__i;}
  more = new cljs.core.IndexedSeq(G__22733__a,0);
} 
return G__22732__delegate.call(this,k,x,y,more);};
G__22732.cljs$lang$maxFixedArity = 3;
G__22732.cljs$lang$applyTo = (function (arglist__22734){
var k = cljs.core.first(arglist__22734);
arglist__22734 = cljs.core.next(arglist__22734);
var x = cljs.core.first(arglist__22734);
arglist__22734 = cljs.core.next(arglist__22734);
var y = cljs.core.first(arglist__22734);
var more = cljs.core.rest(arglist__22734);
return G__22732__delegate(k,x,y,more);
});
G__22732.cljs$core$IFn$_invoke$arity$variadic = G__22732__delegate;
return G__22732;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22735 = null;
if (arguments.length > 3) {
var G__22736__i = 0, G__22736__a = new Array(arguments.length -  3);
while (G__22736__i < G__22736__a.length) {G__22736__a[G__22736__i] = arguments[G__22736__i + 3]; ++G__22736__i;}
G__22735 = new cljs.core.IndexedSeq(G__22736__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22753 = null;
var G__22753__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22753__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22748 = result;
var G__22749 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22748,G__22749) : rf.call(null,G__22748,G__22749));
})());
})());
var G__22750 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22750) : rf.call(null,G__22750));
});
var G__22753__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22751 = result;
var G__22752 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22751,G__22752) : rf.call(null,G__22751,G__22752));
} else {
return result;
}
});
G__22753 = function(result,input){
switch(arguments.length){
case 0:
return G__22753__0.call(this);
case 1:
return G__22753__1.call(this,result);
case 2:
return G__22753__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22753.cljs$core$IFn$_invoke$arity$0 = G__22753__0;
G__22753.cljs$core$IFn$_invoke$arity$1 = G__22753__1;
G__22753.cljs$core$IFn$_invoke$arity$2 = G__22753__2;
return G__22753;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22766 = null;
var G__22766__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22766__1 = (function (result){
var G__22761 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22761) : rf.call(null,G__22761));
});
var G__22766__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22762 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22762) : pred.call(null,G__22762));
})())){
var G__22763 = result;
var G__22764 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22763,G__22764) : rf.call(null,G__22763,G__22764));
} else {
return cljs.core.reduced(result);
}
});
G__22766 = function(result,input){
switch(arguments.length){
case 0:
return G__22766__0.call(this);
case 1:
return G__22766__1.call(this,result);
case 2:
return G__22766__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22766.cljs$core$IFn$_invoke$arity$0 = G__22766__0;
G__22766.cljs$core$IFn$_invoke$arity$1 = G__22766__1;
G__22766.cljs$core$IFn$_invoke$arity$2 = G__22766__2;
return G__22766;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22765 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22765) : pred.call(null,G__22765));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22771 = (function (){var G__22773 = cljs.core._entry_key(sc,e);
var G__22774 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22773,G__22774) : comp.call(null,G__22773,G__22774));
})();
var G__22772 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22771,G__22772) : test.call(null,G__22771,G__22772));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22778 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22778,(0),null);
var s = vec__22778;
if(cljs.core.truth_((function (){var G__22779 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22779) : include.call(null,G__22779));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22780 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22780,(0),null);
var s = vec__22780;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22784 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22784,(0),null);
var s = vec__22784;
if(cljs.core.truth_((function (){var G__22785 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22785) : include.call(null,G__22785));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22786 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22786,(0),null);
var s = vec__22786;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22787 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22787) : Math.ceil.call(null,G__22787));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__12608__auto__ = self__.__hash;
if(!((h__12608__auto__ == null))){
return h__12608__auto__;
} else {
var h__12608__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__12608__auto____$1;

return h__12608__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22788 = ret;
var G__22789 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22788,G__22789) : f.call(null,G__22788,G__22789));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22790 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22790) : cljs.core.deref.call(null,G__22790));
} else {
var G__22791 = (i + self__.step);
var G__22792 = ret__$1;
i = G__22791;
ret = G__22792;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22810 = null;
var G__22810__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22810__1 = (function (result){
var G__22807 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22807) : rf.call(null,G__22807));
});
var G__22810__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22808 = result;
var G__22809 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22808,G__22809) : rf.call(null,G__22808,G__22809));
} else {
return result;
}
});
G__22810 = function(result,input){
switch(arguments.length){
case 0:
return G__22810__0.call(this);
case 1:
return G__22810__1.call(this,result);
case 2:
return G__22810__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22810.cljs$core$IFn$_invoke$arity$0 = G__22810__0;
G__22810.cljs$core$IFn$_invoke$arity$1 = G__22810__1;
G__22810.cljs$core$IFn$_invoke$arity$2 = G__22810__2;
return G__22810;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__22832 = null;
var G__22832__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22832__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22823 = result;
var G__22824 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22823,G__22824) : rf.call(null,G__22823,G__22824));
})());
})());
var G__22825 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22825) : rf.call(null,G__22825));
});
var G__22832__2 = (function (result,input){
var pval = (function (){var G__22826 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22826) : cljs.core.deref.call(null,G__22826));
})();
var val = (function (){var G__22827 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22827) : f.call(null,G__22827));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22828 = result;
var G__22829 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22828,G__22829) : rf.call(null,G__22828,G__22829));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22832 = function(result,input){
switch(arguments.length){
case 0:
return G__22832__0.call(this);
case 1:
return G__22832__1.call(this,result);
case 2:
return G__22832__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22832.cljs$core$IFn$_invoke$arity$0 = G__22832__0;
G__22832.cljs$core$IFn$_invoke$arity$1 = G__22832__1;
G__22832.cljs$core$IFn$_invoke$arity$2 = G__22832__2;
return G__22832;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22830 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22830) : f.call(null,G__22830));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22811_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22831 = p1__22811_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22831) : f.call(null,G__22831));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22841 = init;
var G__22842 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22841,G__22842) : f.call(null,G__22841,G__22842));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22937 = null;
var G__22937__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22937__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22895 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22895) : f.call(null,G__22895));
})()],null));
});
var G__22937__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22896 = x;
var G__22897 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22896,G__22897) : f.call(null,G__22896,G__22897));
})()],null));
});
var G__22937__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22898 = x;
var G__22899 = y;
var G__22900 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22898,G__22899,G__22900) : f.call(null,G__22898,G__22899,G__22900));
})()],null));
});
var G__22937__4 = (function() { 
var G__22938__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22938 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22939__i = 0, G__22939__a = new Array(arguments.length -  3);
while (G__22939__i < G__22939__a.length) {G__22939__a[G__22939__i] = arguments[G__22939__i + 3]; ++G__22939__i;}
  args = new cljs.core.IndexedSeq(G__22939__a,0);
} 
return G__22938__delegate.call(this,x,y,z,args);};
G__22938.cljs$lang$maxFixedArity = 3;
G__22938.cljs$lang$applyTo = (function (arglist__22940){
var x = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var y = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var z = cljs.core.first(arglist__22940);
var args = cljs.core.rest(arglist__22940);
return G__22938__delegate(x,y,z,args);
});
G__22938.cljs$core$IFn$_invoke$arity$variadic = G__22938__delegate;
return G__22938;
})()
;
G__22937 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22937__0.call(this);
case 1:
return G__22937__1.call(this,x);
case 2:
return G__22937__2.call(this,x,y);
case 3:
return G__22937__3.call(this,x,y,z);
default:
var G__22941 = null;
if (arguments.length > 3) {
var G__22942__i = 0, G__22942__a = new Array(arguments.length -  3);
while (G__22942__i < G__22942__a.length) {G__22942__a[G__22942__i] = arguments[G__22942__i + 3]; ++G__22942__i;}
G__22941 = new cljs.core.IndexedSeq(G__22942__a,0);
}
return G__22937__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22937.cljs$lang$maxFixedArity = 3;
G__22937.cljs$lang$applyTo = G__22937__4.cljs$lang$applyTo;
G__22937.cljs$core$IFn$_invoke$arity$0 = G__22937__0;
G__22937.cljs$core$IFn$_invoke$arity$1 = G__22937__1;
G__22937.cljs$core$IFn$_invoke$arity$2 = G__22937__2;
G__22937.cljs$core$IFn$_invoke$arity$3 = G__22937__3;
G__22937.cljs$core$IFn$_invoke$arity$variadic = G__22937__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22937;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22943 = null;
var G__22943__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22943__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22901 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22901) : f.call(null,G__22901));
})(),(function (){var G__22902 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22902) : g.call(null,G__22902));
})()],null));
});
var G__22943__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22903 = x;
var G__22904 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22903,G__22904) : f.call(null,G__22903,G__22904));
})(),(function (){var G__22905 = x;
var G__22906 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22905,G__22906) : g.call(null,G__22905,G__22906));
})()],null));
});
var G__22943__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22907 = x;
var G__22908 = y;
var G__22909 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22907,G__22908,G__22909) : f.call(null,G__22907,G__22908,G__22909));
})(),(function (){var G__22910 = x;
var G__22911 = y;
var G__22912 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22910,G__22911,G__22912) : g.call(null,G__22910,G__22911,G__22912));
})()],null));
});
var G__22943__4 = (function() { 
var G__22944__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22944 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22945__i = 0, G__22945__a = new Array(arguments.length -  3);
while (G__22945__i < G__22945__a.length) {G__22945__a[G__22945__i] = arguments[G__22945__i + 3]; ++G__22945__i;}
  args = new cljs.core.IndexedSeq(G__22945__a,0);
} 
return G__22944__delegate.call(this,x,y,z,args);};
G__22944.cljs$lang$maxFixedArity = 3;
G__22944.cljs$lang$applyTo = (function (arglist__22946){
var x = cljs.core.first(arglist__22946);
arglist__22946 = cljs.core.next(arglist__22946);
var y = cljs.core.first(arglist__22946);
arglist__22946 = cljs.core.next(arglist__22946);
var z = cljs.core.first(arglist__22946);
var args = cljs.core.rest(arglist__22946);
return G__22944__delegate(x,y,z,args);
});
G__22944.cljs$core$IFn$_invoke$arity$variadic = G__22944__delegate;
return G__22944;
})()
;
G__22943 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22943__0.call(this);
case 1:
return G__22943__1.call(this,x);
case 2:
return G__22943__2.call(this,x,y);
case 3:
return G__22943__3.call(this,x,y,z);
default:
var G__22947 = null;
if (arguments.length > 3) {
var G__22948__i = 0, G__22948__a = new Array(arguments.length -  3);
while (G__22948__i < G__22948__a.length) {G__22948__a[G__22948__i] = arguments[G__22948__i + 3]; ++G__22948__i;}
G__22947 = new cljs.core.IndexedSeq(G__22948__a,0);
}
return G__22943__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22947);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22943.cljs$lang$maxFixedArity = 3;
G__22943.cljs$lang$applyTo = G__22943__4.cljs$lang$applyTo;
G__22943.cljs$core$IFn$_invoke$arity$0 = G__22943__0;
G__22943.cljs$core$IFn$_invoke$arity$1 = G__22943__1;
G__22943.cljs$core$IFn$_invoke$arity$2 = G__22943__2;
G__22943.cljs$core$IFn$_invoke$arity$3 = G__22943__3;
G__22943.cljs$core$IFn$_invoke$arity$variadic = G__22943__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22943;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22949 = null;
var G__22949__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22949__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22913 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22913) : f.call(null,G__22913));
})(),(function (){var G__22914 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22914) : g.call(null,G__22914));
})(),(function (){var G__22915 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22915) : h.call(null,G__22915));
})()],null));
});
var G__22949__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22916 = x;
var G__22917 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22916,G__22917) : f.call(null,G__22916,G__22917));
})(),(function (){var G__22918 = x;
var G__22919 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22918,G__22919) : g.call(null,G__22918,G__22919));
})(),(function (){var G__22920 = x;
var G__22921 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22920,G__22921) : h.call(null,G__22920,G__22921));
})()],null));
});
var G__22949__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22922 = x;
var G__22923 = y;
var G__22924 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22922,G__22923,G__22924) : f.call(null,G__22922,G__22923,G__22924));
})(),(function (){var G__22925 = x;
var G__22926 = y;
var G__22927 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22925,G__22926,G__22927) : g.call(null,G__22925,G__22926,G__22927));
})(),(function (){var G__22928 = x;
var G__22929 = y;
var G__22930 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22928,G__22929,G__22930) : h.call(null,G__22928,G__22929,G__22930));
})()],null));
});
var G__22949__4 = (function() { 
var G__22950__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22950 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22951__i = 0, G__22951__a = new Array(arguments.length -  3);
while (G__22951__i < G__22951__a.length) {G__22951__a[G__22951__i] = arguments[G__22951__i + 3]; ++G__22951__i;}
  args = new cljs.core.IndexedSeq(G__22951__a,0);
} 
return G__22950__delegate.call(this,x,y,z,args);};
G__22950.cljs$lang$maxFixedArity = 3;
G__22950.cljs$lang$applyTo = (function (arglist__22952){
var x = cljs.core.first(arglist__22952);
arglist__22952 = cljs.core.next(arglist__22952);
var y = cljs.core.first(arglist__22952);
arglist__22952 = cljs.core.next(arglist__22952);
var z = cljs.core.first(arglist__22952);
var args = cljs.core.rest(arglist__22952);
return G__22950__delegate(x,y,z,args);
});
G__22950.cljs$core$IFn$_invoke$arity$variadic = G__22950__delegate;
return G__22950;
})()
;
G__22949 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22949__0.call(this);
case 1:
return G__22949__1.call(this,x);
case 2:
return G__22949__2.call(this,x,y);
case 3:
return G__22949__3.call(this,x,y,z);
default:
var G__22953 = null;
if (arguments.length > 3) {
var G__22954__i = 0, G__22954__a = new Array(arguments.length -  3);
while (G__22954__i < G__22954__a.length) {G__22954__a[G__22954__i] = arguments[G__22954__i + 3]; ++G__22954__i;}
G__22953 = new cljs.core.IndexedSeq(G__22954__a,0);
}
return G__22949__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22949.cljs$lang$maxFixedArity = 3;
G__22949.cljs$lang$applyTo = G__22949__4.cljs$lang$applyTo;
G__22949.cljs$core$IFn$_invoke$arity$0 = G__22949__0;
G__22949.cljs$core$IFn$_invoke$arity$1 = G__22949__1;
G__22949.cljs$core$IFn$_invoke$arity$2 = G__22949__2;
G__22949.cljs$core$IFn$_invoke$arity$3 = G__22949__3;
G__22949.cljs$core$IFn$_invoke$arity$variadic = G__22949__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22949;
})()
});
var juxt__4 = (function() { 
var G__22955__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22956 = null;
var G__22956__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22843_SHARP_,p2__22844_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22843_SHARP_,(function (){return (p2__22844_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22844_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22844_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22956__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22845_SHARP_,p2__22846_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22845_SHARP_,(function (){var G__22931 = x;
return (p2__22846_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22846_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22931) : p2__22846_SHARP_.call(null,G__22931));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22956__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22847_SHARP_,p2__22848_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22847_SHARP_,(function (){var G__22932 = x;
var G__22933 = y;
return (p2__22848_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22848_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22932,G__22933) : p2__22848_SHARP_.call(null,G__22932,G__22933));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22956__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22849_SHARP_,p2__22850_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22849_SHARP_,(function (){var G__22934 = x;
var G__22935 = y;
var G__22936 = z;
return (p2__22850_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22850_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22934,G__22935,G__22936) : p2__22850_SHARP_.call(null,G__22934,G__22935,G__22936));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22956__4 = (function() { 
var G__22957__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22851_SHARP_,p2__22852_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22851_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22852_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22957 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22958__i = 0, G__22958__a = new Array(arguments.length -  3);
while (G__22958__i < G__22958__a.length) {G__22958__a[G__22958__i] = arguments[G__22958__i + 3]; ++G__22958__i;}
  args = new cljs.core.IndexedSeq(G__22958__a,0);
} 
return G__22957__delegate.call(this,x,y,z,args);};
G__22957.cljs$lang$maxFixedArity = 3;
G__22957.cljs$lang$applyTo = (function (arglist__22959){
var x = cljs.core.first(arglist__22959);
arglist__22959 = cljs.core.next(arglist__22959);
var y = cljs.core.first(arglist__22959);
arglist__22959 = cljs.core.next(arglist__22959);
var z = cljs.core.first(arglist__22959);
var args = cljs.core.rest(arglist__22959);
return G__22957__delegate(x,y,z,args);
});
G__22957.cljs$core$IFn$_invoke$arity$variadic = G__22957__delegate;
return G__22957;
})()
;
G__22956 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22956__0.call(this);
case 1:
return G__22956__1.call(this,x);
case 2:
return G__22956__2.call(this,x,y);
case 3:
return G__22956__3.call(this,x,y,z);
default:
var G__22960 = null;
if (arguments.length > 3) {
var G__22961__i = 0, G__22961__a = new Array(arguments.length -  3);
while (G__22961__i < G__22961__a.length) {G__22961__a[G__22961__i] = arguments[G__22961__i + 3]; ++G__22961__i;}
G__22960 = new cljs.core.IndexedSeq(G__22961__a,0);
}
return G__22956__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22956.cljs$lang$maxFixedArity = 3;
G__22956.cljs$lang$applyTo = G__22956__4.cljs$lang$applyTo;
G__22956.cljs$core$IFn$_invoke$arity$0 = G__22956__0;
G__22956.cljs$core$IFn$_invoke$arity$1 = G__22956__1;
G__22956.cljs$core$IFn$_invoke$arity$2 = G__22956__2;
G__22956.cljs$core$IFn$_invoke$arity$3 = G__22956__3;
G__22956.cljs$core$IFn$_invoke$arity$variadic = G__22956__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22956;
})()
;})(fs__$1))
};
var G__22955 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22962__i = 0, G__22962__a = new Array(arguments.length -  3);
while (G__22962__i < G__22962__a.length) {G__22962__a[G__22962__i] = arguments[G__22962__i + 3]; ++G__22962__i;}
  fs = new cljs.core.IndexedSeq(G__22962__a,0);
} 
return G__22955__delegate.call(this,f,g,h,fs);};
G__22955.cljs$lang$maxFixedArity = 3;
G__22955.cljs$lang$applyTo = (function (arglist__22963){
var f = cljs.core.first(arglist__22963);
arglist__22963 = cljs.core.next(arglist__22963);
var g = cljs.core.first(arglist__22963);
arglist__22963 = cljs.core.next(arglist__22963);
var h = cljs.core.first(arglist__22963);
var fs = cljs.core.rest(arglist__22963);
return G__22955__delegate(f,g,h,fs);
});
G__22955.cljs$core$IFn$_invoke$arity$variadic = G__22955__delegate;
return G__22955;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__22964 = null;
if (arguments.length > 3) {
var G__22965__i = 0, G__22965__a = new Array(arguments.length -  3);
while (G__22965__i < G__22965__a.length) {G__22965__a[G__22965__i] = arguments[G__22965__i + 3]; ++G__22965__i;}
G__22964 = new cljs.core.IndexedSeq(G__22965__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__22964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__22966 = cljs.core.next(coll);
coll = G__22966;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__22967 = (n - (1));
var G__22968 = cljs.core.next(coll);
n = G__22967;
coll = G__22968;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__22972 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22972,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22972,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22972,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_22980 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__22981_22987 = cljs.core.first(coll);
var G__22982_22988 = writer;
var G__22983_22989 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22981_22987,G__22982_22988,G__22983_22989) : print_one.call(null,G__22981_22987,G__22982_22988,G__22983_22989));
} else {
}

var coll_22990__$1 = cljs.core.next(coll);
var n_22991 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_22990__$1) && (((n_22991 == null)) || (!((n_22991 === (0)))))){
cljs.core._write(writer,sep);

var G__22984_22992 = cljs.core.first(coll_22990__$1);
var G__22985_22993 = writer;
var G__22986_22994 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__22984_22992,G__22985_22993,G__22986_22994) : print_one.call(null,G__22984_22992,G__22985_22993,G__22986_22994));

var G__22995 = cljs.core.next(coll_22990__$1);
var G__22996 = (n_22991 - (1));
coll_22990__$1 = G__22995;
n_22991 = G__22996;
continue;
} else {
if((cljs.core.seq(coll_22990__$1)) && ((n_22991 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_22980;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23001 = cljs.core.seq(ss);
var chunk__23002 = null;
var count__23003 = (0);
var i__23004 = (0);
while(true){
if((i__23004 < count__23003)){
var s = chunk__23002.cljs$core$IIndexed$_nth$arity$2(null,i__23004);
cljs.core._write(writer,s);

var G__23005 = seq__23001;
var G__23006 = chunk__23002;
var G__23007 = count__23003;
var G__23008 = (i__23004 + (1));
seq__23001 = G__23005;
chunk__23002 = G__23006;
count__23003 = G__23007;
i__23004 = G__23008;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23001);
if(temp__4126__auto__){
var seq__23001__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23001__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__23001__$1);
var G__23009 = cljs.core.chunk_rest(seq__23001__$1);
var G__23010 = c__12974__auto__;
var G__23011 = cljs.core.count(c__12974__auto__);
var G__23012 = (0);
seq__23001 = G__23009;
chunk__23002 = G__23010;
count__23003 = G__23011;
i__23004 = G__23012;
continue;
} else {
var s = cljs.core.first(seq__23001__$1);
cljs.core._write(writer,s);

var G__23013 = cljs.core.next(seq__23001__$1);
var G__23014 = null;
var G__23015 = (0);
var G__23016 = (0);
seq__23001 = G__23013;
chunk__23002 = G__23014;
count__23003 = G__23015;
i__23004 = G__23016;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23017__i = 0, G__23017__a = new Array(arguments.length -  1);
while (G__23017__i < G__23017__a.length) {G__23017__a[G__23017__i] = arguments[G__23017__i + 1]; ++G__23017__i;}
  ss = new cljs.core.IndexedSeq(G__23017__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23018){
var writer = cljs.core.first(arglist__23018);
var ss = cljs.core.rest(arglist__23018);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23020 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23020;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23023 = "[\\\\\"\b\f\n\r\t]";
var G__23024 = "g";
return RegExp(G__23023,G__23024);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12175__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12175__auto__)){
var and__12175__auto____$1 = (function (){var G__23038 = obj;
if(G__23038){
var bit__12868__auto__ = (G__23038.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__12868__auto__) || (G__23038.cljs$core$IMeta$)){
return true;
} else {
if((!G__23038.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23038);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23038);
}
})();
if(and__12175__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23039 = obj;
if(G__23039){
var bit__12861__auto__ = (G__23039.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12861__auto__) || (G__23039.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23040 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23041 = pr_writer;
var G__23042 = writer;
var G__23043 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23040,G__23041,G__23042,G__23043) : cljs.core.print_map.call(null,G__23040,G__23041,G__23042,G__23043));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23044 = obj;
return goog.isString(G__23044);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23046 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23046;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23045 = obj;
if(G__23045){
var bit__12868__auto__ = (G__23045.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__12868__auto__) || (G__23045.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23045.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23045);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23045);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23051 = cljs.core.seq(cljs.core.next(objs));
var chunk__23052 = null;
var count__23053 = (0);
var i__23054 = (0);
while(true){
if((i__23054 < count__23053)){
var obj = chunk__23052.cljs$core$IIndexed$_nth$arity$2(null,i__23054);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23055 = seq__23051;
var G__23056 = chunk__23052;
var G__23057 = count__23053;
var G__23058 = (i__23054 + (1));
seq__23051 = G__23055;
chunk__23052 = G__23056;
count__23053 = G__23057;
i__23054 = G__23058;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23051);
if(temp__4126__auto__){
var seq__23051__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23051__$1)){
var c__12974__auto__ = cljs.core.chunk_first(seq__23051__$1);
var G__23059 = cljs.core.chunk_rest(seq__23051__$1);
var G__23060 = c__12974__auto__;
var G__23061 = cljs.core.count(c__12974__auto__);
var G__23062 = (0);
seq__23051 = G__23059;
chunk__23052 = G__23060;
count__23053 = G__23061;
i__23054 = G__23062;
continue;
} else {
var obj = cljs.core.first(seq__23051__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23063 = cljs.core.next(seq__23051__$1);
var G__23064 = null;
var G__23065 = (0);
var G__23066 = (0);
seq__23051 = G__23063;
chunk__23052 = G__23064;
count__23053 = G__23065;
i__23054 = G__23066;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23067__i = 0, G__23067__a = new Array(arguments.length -  0);
while (G__23067__i < G__23067__a.length) {G__23067__a[G__23067__i] = arguments[G__23067__i + 0]; ++G__23067__i;}
  objs = new cljs.core.IndexedSeq(G__23067__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__23068){
var objs = cljs.core.seq(arglist__23068);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23069__i = 0, G__23069__a = new Array(arguments.length -  0);
while (G__23069__i < G__23069__a.length) {G__23069__a[G__23069__i] = arguments[G__23069__i + 0]; ++G__23069__i;}
  objs = new cljs.core.IndexedSeq(G__23069__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__23070){
var objs = cljs.core.seq(arglist__23070);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23071__i = 0, G__23071__a = new Array(arguments.length -  0);
while (G__23071__i < G__23071__a.length) {G__23071__a[G__23071__i] = arguments[G__23071__i + 0]; ++G__23071__i;}
  objs = new cljs.core.IndexedSeq(G__23071__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__23072){
var objs = cljs.core.seq(arglist__23072);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23073__i = 0, G__23073__a = new Array(arguments.length -  0);
while (G__23073__i < G__23073__a.length) {G__23073__a[G__23073__i] = arguments[G__23073__i + 0]; ++G__23073__i;}
  objs = new cljs.core.IndexedSeq(G__23073__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__23074){
var objs = cljs.core.seq(arglist__23074);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23075__i = 0, G__23075__a = new Array(arguments.length -  0);
while (G__23075__i < G__23075__a.length) {G__23075__a[G__23075__i] = arguments[G__23075__i + 0]; ++G__23075__i;}
  objs = new cljs.core.IndexedSeq(G__23075__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__23076){
var objs = cljs.core.seq(arglist__23076);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23077__i = 0, G__23077__a = new Array(arguments.length -  0);
while (G__23077__i < G__23077__a.length) {G__23077__a[G__23077__i] = arguments[G__23077__i + 0]; ++G__23077__i;}
  objs = new cljs.core.IndexedSeq(G__23077__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__23078){
var objs = cljs.core.seq(arglist__23078);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23079__i = 0, G__23079__a = new Array(arguments.length -  0);
while (G__23079__i < G__23079__a.length) {G__23079__a[G__23079__i] = arguments[G__23079__i + 0]; ++G__23079__i;}
  objs = new cljs.core.IndexedSeq(G__23079__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__23080){
var objs = cljs.core.seq(arglist__23080);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23081__i = 0, G__23081__a = new Array(arguments.length -  0);
while (G__23081__i < G__23081__a.length) {G__23081__a[G__23081__i] = arguments[G__23081__i + 0]; ++G__23081__i;}
  objs = new cljs.core.IndexedSeq(G__23081__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__23082){
var objs = cljs.core.seq(arglist__23082);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__23089_23095 = cljs.core.key(e);
var G__23090_23096 = w;
var G__23091_23097 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23089_23095,G__23090_23096,G__23091_23097) : print_one.call(null,G__23089_23095,G__23090_23096,G__23091_23097));

cljs.core._write(w," ");

var G__23092 = cljs.core.val(e);
var G__23093 = w;
var G__23094 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23092,G__23093,G__23094) : print_one.call(null,G__23092,G__23093,G__23094));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__23098__i = 0, G__23098__a = new Array(arguments.length -  2);
while (G__23098__i < G__23098__a.length) {G__23098__a[G__23098__i] = arguments[G__23098__i + 2]; ++G__23098__i;}
  args = new cljs.core.IndexedSeq(G__23098__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__23099){
var iref = cljs.core.first(arglist__23099);
arglist__23099 = cljs.core.next(arglist__23099);
var f = cljs.core.first(arglist__23099);
var args = cljs.core.rest(arglist__23099);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__23102 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23102) : cljs.core.atom.call(null,G__23102));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__23104 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23104) : cljs.core.deref.call(null,G__23104));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__23105_SHARP_,p2__23106_SHARP_){
var ret = (function (){var G__23109 = p1__23105_SHARP_;
var G__23110 = p2__23106_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23109,G__23110) : rf.call(null,G__23109,G__23110));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__23113 = null;
var G__23113__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23113__1 = (function (result){
var G__23112 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23112) : rf.call(null,G__23112));
});
var G__23113__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__23113 = function(result,input){
switch(arguments.length){
case 0:
return G__23113__0.call(this);
case 1:
return G__23113__1.call(this,result);
case 2:
return G__23113__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23113.cljs$core$IFn$_invoke$arity$0 = G__23113__0;
G__23113.cljs$core$IFn$_invoke$arity$1 = G__23113__1;
G__23113.cljs$core$IFn$_invoke$arity$2 = G__23113__2;
return G__23113;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__23122 = null;
var G__23122__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23122__1 = (function (result){
var G__23118 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23118) : rf.call(null,G__23118));
});
var G__23122__2 = (function (result,input){
var prior = (function (){var G__23119 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23119) : cljs.core.deref.call(null,G__23119));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__23120 = result;
var G__23121 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23120,G__23121) : rf.call(null,G__23120,G__23121));
}
});
G__23122 = function(result,input){
switch(arguments.length){
case 0:
return G__23122__0.call(this);
case 1:
return G__23122__1.call(this,result);
case 2:
return G__23122__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23122.cljs$core$IFn$_invoke$arity$0 = G__23122__0;
G__23122.cljs$core$IFn$_invoke$arity$1 = G__23122__1;
G__23122.cljs$core$IFn$_invoke$arity$2 = G__23122__2;
return G__23122;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13165__auto__ = this;
return cljs.core.es6_iterator(this__13165__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23124_SHARP_,p2__23123_SHARP_){
var G__23126 = p2__23123_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__23126) : proc.call(null,G__23126));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj23128 = {};
return obj23128;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._clj__GT_js[(function (){var G__23132 = x__12831__auto__;
return goog.typeOf(G__23132);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._key__GT_js[(function (){var G__23136 = x__12831__auto__;
return goog.typeOf(G__23136);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__23139 = k;
if(G__23139){
var bit__12868__auto__ = null;
if(cljs.core.truth_((function (){var or__12187__auto__ = bit__12868__auto__;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return G__23139.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23139.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23139);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23139);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__23140 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__23140) : cljs.core.clj__GT_js.call(null,G__23140));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__23156 = x;
if(G__23156){
var bit__12868__auto__ = null;
if(cljs.core.truth_((function (){var or__12187__auto__ = bit__12868__auto__;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return G__23156.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23156.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23156);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23156);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj23158 = {};
return obj23158;
})();
var seq__23159_23169 = cljs.core.seq(x);
var chunk__23160_23170 = null;
var count__23161_23171 = (0);
var i__23162_23172 = (0);
while(true){
if((i__23162_23172 < count__23161_23171)){
var vec__23163_23173 = chunk__23160_23170.cljs$core$IIndexed$_nth$arity$2(null,i__23162_23172);
var k_23174 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23163_23173,(0),null);
var v_23175 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23163_23173,(1),null);
(m[cljs.core.key__GT_js(k_23174)] = clj__GT_js(v_23175));

var G__23176 = seq__23159_23169;
var G__23177 = chunk__23160_23170;
var G__23178 = count__23161_23171;
var G__23179 = (i__23162_23172 + (1));
seq__23159_23169 = G__23176;
chunk__23160_23170 = G__23177;
count__23161_23171 = G__23178;
i__23162_23172 = G__23179;
continue;
} else {
var temp__4126__auto___23180 = cljs.core.seq(seq__23159_23169);
if(temp__4126__auto___23180){
var seq__23159_23181__$1 = temp__4126__auto___23180;
if(cljs.core.chunked_seq_QMARK_(seq__23159_23181__$1)){
var c__12974__auto___23182 = cljs.core.chunk_first(seq__23159_23181__$1);
var G__23183 = cljs.core.chunk_rest(seq__23159_23181__$1);
var G__23184 = c__12974__auto___23182;
var G__23185 = cljs.core.count(c__12974__auto___23182);
var G__23186 = (0);
seq__23159_23169 = G__23183;
chunk__23160_23170 = G__23184;
count__23161_23171 = G__23185;
i__23162_23172 = G__23186;
continue;
} else {
var vec__23164_23187 = cljs.core.first(seq__23159_23181__$1);
var k_23188 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23164_23187,(0),null);
var v_23189 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23164_23187,(1),null);
(m[cljs.core.key__GT_js(k_23188)] = clj__GT_js(v_23189));

var G__23190 = cljs.core.next(seq__23159_23181__$1);
var G__23191 = null;
var G__23192 = (0);
var G__23193 = (0);
seq__23159_23169 = G__23190;
chunk__23160_23170 = G__23191;
count__23161_23171 = G__23192;
i__23162_23172 = G__23193;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__23165_23194 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__23166_23195 = null;
var count__23167_23196 = (0);
var i__23168_23197 = (0);
while(true){
if((i__23168_23197 < count__23167_23196)){
var x_23198__$1 = chunk__23166_23195.cljs$core$IIndexed$_nth$arity$2(null,i__23168_23197);
arr.push(x_23198__$1);

var G__23199 = seq__23165_23194;
var G__23200 = chunk__23166_23195;
var G__23201 = count__23167_23196;
var G__23202 = (i__23168_23197 + (1));
seq__23165_23194 = G__23199;
chunk__23166_23195 = G__23200;
count__23167_23196 = G__23201;
i__23168_23197 = G__23202;
continue;
} else {
var temp__4126__auto___23203 = cljs.core.seq(seq__23165_23194);
if(temp__4126__auto___23203){
var seq__23165_23204__$1 = temp__4126__auto___23203;
if(cljs.core.chunked_seq_QMARK_(seq__23165_23204__$1)){
var c__12974__auto___23205 = cljs.core.chunk_first(seq__23165_23204__$1);
var G__23206 = cljs.core.chunk_rest(seq__23165_23204__$1);
var G__23207 = c__12974__auto___23205;
var G__23208 = cljs.core.count(c__12974__auto___23205);
var G__23209 = (0);
seq__23165_23194 = G__23206;
chunk__23166_23195 = G__23207;
count__23167_23196 = G__23208;
i__23168_23197 = G__23209;
continue;
} else {
var x_23210__$1 = cljs.core.first(seq__23165_23204__$1);
arr.push(x_23210__$1);

var G__23211 = cljs.core.next(seq__23165_23204__$1);
var G__23212 = null;
var G__23213 = (0);
var G__23214 = (0);
seq__23165_23194 = G__23211;
chunk__23166_23195 = G__23212;
count__23167_23196 = G__23213;
i__23168_23197 = G__23214;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj23216 = {};
return obj23216;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12175__auto__ = x;
if(and__12175__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12175__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__12831__auto__ = (((x == null))?null:x);
return (function (){var or__12187__auto__ = (cljs.core._js__GT_clj[(function (){var G__23220 = x__12831__auto__;
return goog.typeOf(G__23220);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__23277__delegate = function (x,opts){
var map__23250 = opts;
var map__23250__$1 = ((cljs.core.seq_QMARK_(map__23250))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23250):map__23250);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23250__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__23250,map__23250__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__23266 = x__$1;
if(G__23266){
var bit__12868__auto__ = null;
if(cljs.core.truth_((function (){var or__12187__auto__ = bit__12868__auto__;
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return G__23266.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__23266.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23266);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__12943__auto__ = ((function (map__23250,map__23250__$1,keywordize_keys,keyfn){
return (function iter__23267(s__23268){
return (new cljs.core.LazySeq(null,((function (map__23250,map__23250__$1,keywordize_keys,keyfn){
return (function (){
var s__23268__$1 = s__23268;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__23268__$1);
if(temp__4126__auto__){
var s__23268__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__23268__$2)){
var c__12941__auto__ = cljs.core.chunk_first(s__23268__$2);
var size__12942__auto__ = cljs.core.count(c__12941__auto__);
var b__23270 = cljs.core.chunk_buffer(size__12942__auto__);
if((function (){var i__23269 = (0);
while(true){
if((i__23269 < size__12942__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__12941__auto__,i__23269);
cljs.core.chunk_append(b__23270,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23275 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23275) : keyfn.call(null,G__23275));
})(),thisfn((x__$1[k]))], null));

var G__23278 = (i__23269 + (1));
i__23269 = G__23278;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__23270),iter__23267(cljs.core.chunk_rest(s__23268__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__23270),null);
}
} else {
var k = cljs.core.first(s__23268__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23276 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23276) : keyfn.call(null,G__23276));
})(),thisfn((x__$1[k]))], null),iter__23267(cljs.core.rest(s__23268__$2)));
}
} else {
return null;
}
break;
}
});})(map__23250,map__23250__$1,keywordize_keys,keyfn))
,null,null));
});})(map__23250,map__23250__$1,keywordize_keys,keyfn))
;
return iter__12943__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__23250,map__23250__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__23277 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__23279__i = 0, G__23279__a = new Array(arguments.length -  1);
while (G__23279__i < G__23279__a.length) {G__23279__a[G__23279__i] = arguments[G__23279__i + 1]; ++G__23279__i;}
  opts = new cljs.core.IndexedSeq(G__23279__a,0);
} 
return G__23277__delegate.call(this,x,opts);};
G__23277.cljs$lang$maxFixedArity = 1;
G__23277.cljs$lang$applyTo = (function (arglist__23280){
var x = cljs.core.first(arglist__23280);
var opts = cljs.core.rest(arglist__23280);
return G__23277__delegate(x,opts);
});
G__23277.cljs$core$IFn$_invoke$arity$variadic = G__23277__delegate;
return G__23277;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__23281 = null;
if (arguments.length > 1) {
var G__23282__i = 0, G__23282__a = new Array(arguments.length -  1);
while (G__23282__i < G__23282__a.length) {G__23282__a[G__23282__i] = arguments[G__23282__i + 1]; ++G__23282__i;}
G__23281 = new cljs.core.IndexedSeq(G__23282__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__23285 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23285) : cljs.core.atom.call(null,G__23285));
})();
return ((function (mem){
return (function() { 
var G__23287__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__23286 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23286) : cljs.core.deref.call(null,G__23286));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__23287 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23288__i = 0, G__23288__a = new Array(arguments.length -  0);
while (G__23288__i < G__23288__a.length) {G__23288__a[G__23288__i] = arguments[G__23288__i + 0]; ++G__23288__i;}
  args = new cljs.core.IndexedSeq(G__23288__a,0);
} 
return G__23287__delegate.call(this,args);};
G__23287.cljs$lang$maxFixedArity = 0;
G__23287.cljs$lang$applyTo = (function (arglist__23289){
var args = cljs.core.seq(arglist__23289);
return G__23287__delegate(args);
});
G__23287.cljs$core$IFn$_invoke$arity$variadic = G__23287__delegate;
return G__23287;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__23291 = ret;
f = G__23291;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__23292__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__23292 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23293__i = 0, G__23293__a = new Array(arguments.length -  1);
while (G__23293__i < G__23293__a.length) {G__23293__a[G__23293__i] = arguments[G__23293__i + 1]; ++G__23293__i;}
  args = new cljs.core.IndexedSeq(G__23293__a,0);
} 
return G__23292__delegate.call(this,f,args);};
G__23292.cljs$lang$maxFixedArity = 1;
G__23292.cljs$lang$applyTo = (function (arglist__23294){
var f = cljs.core.first(arglist__23294);
var args = cljs.core.rest(arglist__23294);
return G__23292__delegate(f,args);
});
G__23292.cljs$core$IFn$_invoke$arity$variadic = G__23292__delegate;
return G__23292;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__23295 = null;
if (arguments.length > 1) {
var G__23296__i = 0, G__23296__a = new Array(arguments.length -  1);
while (G__23296__i < G__23296__a.length) {G__23296__a[G__23296__i] = arguments[G__23296__i + 1]; ++G__23296__i;}
G__23295 = new cljs.core.IndexedSeq(G__23296__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__23299 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23299) : Math.floor.call(null,G__23299));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__23301 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23301) : f.call(null,G__23301));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__23303 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23303) : cljs.core.atom.call(null,G__23303));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23304__i = 0, G__23304__a = new Array(arguments.length -  1);
while (G__23304__i < G__23304__a.length) {G__23304__a[G__23304__i] = arguments[G__23304__i + 1]; ++G__23304__i;}
  args = new cljs.core.IndexedSeq(G__23304__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__23305){
var f = cljs.core.first(arglist__23305);
var args = cljs.core.rest(arglist__23305);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23370 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23370) : cljs.core.deref.call(null,G__23370));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12187__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
var and__12175__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12175__auto__){
var and__12175__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12175__auto____$1){
var and__12175__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12175__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__23395 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__23393 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__23393) : child.call(null,G__23393));
})(),(function (){var G__23394 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__23394) : parent.call(null,G__23394));
})());
var G__23396 = (i + (1));
ret = G__23395;
i = G__23396;
continue;
}
break;
}
} else {
return and__12175__auto____$2;
}
} else {
return and__12175__auto____$1;
}
} else {
return and__12175__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__23400 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23400) : cljs.core.deref.call(null,G__23400));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__23404 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23404) : cljs.core.deref.call(null,G__23404));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__23408 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23408) : cljs.core.deref.call(null,G__23408));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__23417 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__23417) : targets.call(null,G__23417));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__23418 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__23418) : sources.call(null,G__23418));
})()));
});})(tp,td,ta))
;
var or__12187__auto__ = ((cljs.core.contains_QMARK_((function (){var G__23422 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__23422) : tp.call(null,G__23422));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__23423 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23423) : ta.call(null,G__23423));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__23424 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23424) : ta.call(null,G__23424));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__23431 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23431) : parentMap.call(null,G__23431));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__23432 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23432) : parentMap.call(null,G__23432));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__23425_SHARP_){
return cljs.core.cons(cljs.core.first(p1__23425_SHARP_),cljs.core.interpose(cljs.core.first(p1__23425_SHARP_),cljs.core.second(p1__23425_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__23433 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23433) : parentMap.call(null,G__23433));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__23426_SHARP_,p2__23427_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__23426_SHARP_,p2__23427_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__23436 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23436) : cljs.core.deref.call(null,G__23436));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__23437 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23437) : cljs.core.deref.call(null,G__23437));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__23453 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23453) : cljs.core.deref.call(null,G__23453));
})().call(null,x);
var or__12187__auto__ = (cljs.core.truth_((function (){var and__12175__auto__ = xprefs;
if(cljs.core.truth_(and__12175__auto__)){
var G__23455 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__23455) : xprefs.call(null,G__23455));
} else {
return and__12175__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__23456 = cljs.core.rest(ps);
ps = G__23456;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12187__auto____$1)){
return or__12187__auto____$1;
} else {
var or__12187__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__23457 = cljs.core.rest(ps);
ps = G__23457;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12187__auto____$2)){
return or__12187__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12187__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12187__auto__)){
return or__12187__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__23471){
var vec__23472 = p__23471;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23472,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23472,(1),null);
var e = vec__23472;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23473 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23473) : cljs.core.deref.call(null,G__23473));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12187__auto__ = (be == null);
if(or__12187__auto__){
return or__12187__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__23474 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23474) : cljs.core.deref.call(null,G__23474));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23475 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23475) : cljs.core.deref.call(null,G__23475));
})(),(function (){var G__23476 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23476) : cljs.core.deref.call(null,G__23476));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj23478 = {};
return obj23478;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._reset[(function (){var G__23482 = x__12831__auto__;
return goog.typeOf(G__23482);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._reset["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._add_method[(function (){var G__23486 = x__12831__auto__;
return goog.typeOf(G__23486);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._add_method["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._remove_method[(function (){var G__23490 = x__12831__auto__;
return goog.typeOf(G__23490);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._prefer_method[(function (){var G__23494 = x__12831__auto__;
return goog.typeOf(G__23494);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._get_method[(function (){var G__23498 = x__12831__auto__;
return goog.typeOf(G__23498);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._get_method["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._methods[(function (){var G__23502 = x__12831__auto__;
return goog.typeOf(G__23502);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._methods["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12175__auto__ = mf;
if(and__12175__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12175__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__12831__auto__ = (((mf == null))?null:mf);
return (function (){var or__12187__auto__ = (cljs.core._prefers[(function (){var G__23506 = x__12831__auto__;
return goog.typeOf(G__23506);
})()]);
if(or__12187__auto__){
return or__12187__auto__;
} else {
var or__12187__auto____$1 = (cljs.core._prefers["_"]);
if(or__12187__auto____$1){
return or__12187__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23508 = this$__$1;
return goog.getUid(G__23508);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23509 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23509) : cljs.core.deref.call(null,G__23509));
})(),(function (){var G__23510 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23510) : cljs.core.deref.call(null,G__23510));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__23511 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23511) : cljs.core.deref.call(null,G__23511));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__23512 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23512) : cljs.core.deref.call(null,G__23512));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23513 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23513) : cljs.core.deref.call(null,G__23513));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23514 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23514) : cljs.core.deref.call(null,G__23514));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__24355 = null;
var G__24355__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__24355__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23515 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23515) : self__.dispatch_fn.call(null,G__23515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23516 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23516) : target_fn.call(null,G__23516));
});
var G__24355__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23517 = a;
var G__23518 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23517,G__23518) : self__.dispatch_fn.call(null,G__23517,G__23518));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23519 = a;
var G__23520 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23519,G__23520) : target_fn.call(null,G__23519,G__23520));
});
var G__24355__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23521 = a;
var G__23522 = b;
var G__23523 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23521,G__23522,G__23523) : self__.dispatch_fn.call(null,G__23521,G__23522,G__23523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23524 = a;
var G__23525 = b;
var G__23526 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23524,G__23525,G__23526) : target_fn.call(null,G__23524,G__23525,G__23526));
});
var G__24355__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23527 = a;
var G__23528 = b;
var G__23529 = c;
var G__23530 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23527,G__23528,G__23529,G__23530) : self__.dispatch_fn.call(null,G__23527,G__23528,G__23529,G__23530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23531 = a;
var G__23532 = b;
var G__23533 = c;
var G__23534 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23531,G__23532,G__23533,G__23534) : target_fn.call(null,G__23531,G__23532,G__23533,G__23534));
});
var G__24355__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23535 = a;
var G__23536 = b;
var G__23537 = c;
var G__23538 = d;
var G__23539 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23535,G__23536,G__23537,G__23538,G__23539) : self__.dispatch_fn.call(null,G__23535,G__23536,G__23537,G__23538,G__23539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23540 = a;
var G__23541 = b;
var G__23542 = c;
var G__23543 = d;
var G__23544 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23540,G__23541,G__23542,G__23543,G__23544) : target_fn.call(null,G__23540,G__23541,G__23542,G__23543,G__23544));
});
var G__24355__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23545 = a;
var G__23546 = b;
var G__23547 = c;
var G__23548 = d;
var G__23549 = e;
var G__23550 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23545,G__23546,G__23547,G__23548,G__23549,G__23550) : self__.dispatch_fn.call(null,G__23545,G__23546,G__23547,G__23548,G__23549,G__23550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23551 = a;
var G__23552 = b;
var G__23553 = c;
var G__23554 = d;
var G__23555 = e;
var G__23556 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23551,G__23552,G__23553,G__23554,G__23555,G__23556) : target_fn.call(null,G__23551,G__23552,G__23553,G__23554,G__23555,G__23556));
});
var G__24355__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23557 = a;
var G__23558 = b;
var G__23559 = c;
var G__23560 = d;
var G__23561 = e;
var G__23562 = f;
var G__23563 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563) : self__.dispatch_fn.call(null,G__23557,G__23558,G__23559,G__23560,G__23561,G__23562,G__23563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23564 = a;
var G__23565 = b;
var G__23566 = c;
var G__23567 = d;
var G__23568 = e;
var G__23569 = f;
var G__23570 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570) : target_fn.call(null,G__23564,G__23565,G__23566,G__23567,G__23568,G__23569,G__23570));
});
var G__24355__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23571 = a;
var G__23572 = b;
var G__23573 = c;
var G__23574 = d;
var G__23575 = e;
var G__23576 = f;
var G__23577 = g;
var G__23578 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577,G__23578) : self__.dispatch_fn.call(null,G__23571,G__23572,G__23573,G__23574,G__23575,G__23576,G__23577,G__23578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23579 = a;
var G__23580 = b;
var G__23581 = c;
var G__23582 = d;
var G__23583 = e;
var G__23584 = f;
var G__23585 = g;
var G__23586 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586) : target_fn.call(null,G__23579,G__23580,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586));
});
var G__24355__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23587 = a;
var G__23588 = b;
var G__23589 = c;
var G__23590 = d;
var G__23591 = e;
var G__23592 = f;
var G__23593 = g;
var G__23594 = h;
var G__23595 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595) : self__.dispatch_fn.call(null,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592,G__23593,G__23594,G__23595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23596 = a;
var G__23597 = b;
var G__23598 = c;
var G__23599 = d;
var G__23600 = e;
var G__23601 = f;
var G__23602 = g;
var G__23603 = h;
var G__23604 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604) : target_fn.call(null,G__23596,G__23597,G__23598,G__23599,G__23600,G__23601,G__23602,G__23603,G__23604));
});
var G__24355__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23605 = a;
var G__23606 = b;
var G__23607 = c;
var G__23608 = d;
var G__23609 = e;
var G__23610 = f;
var G__23611 = g;
var G__23612 = h;
var G__23613 = i;
var G__23614 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614) : self__.dispatch_fn.call(null,G__23605,G__23606,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23615 = a;
var G__23616 = b;
var G__23617 = c;
var G__23618 = d;
var G__23619 = e;
var G__23620 = f;
var G__23621 = g;
var G__23622 = h;
var G__23623 = i;
var G__23624 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624) : target_fn.call(null,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622,G__23623,G__23624));
});
var G__24355__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23625 = a;
var G__23626 = b;
var G__23627 = c;
var G__23628 = d;
var G__23629 = e;
var G__23630 = f;
var G__23631 = g;
var G__23632 = h;
var G__23633 = i;
var G__23634 = j;
var G__23635 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635) : self__.dispatch_fn.call(null,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631,G__23632,G__23633,G__23634,G__23635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23636 = a;
var G__23637 = b;
var G__23638 = c;
var G__23639 = d;
var G__23640 = e;
var G__23641 = f;
var G__23642 = g;
var G__23643 = h;
var G__23644 = i;
var G__23645 = j;
var G__23646 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646) : target_fn.call(null,G__23636,G__23637,G__23638,G__23639,G__23640,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646));
});
var G__24355__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23647 = a;
var G__23648 = b;
var G__23649 = c;
var G__23650 = d;
var G__23651 = e;
var G__23652 = f;
var G__23653 = g;
var G__23654 = h;
var G__23655 = i;
var G__23656 = j;
var G__23657 = k;
var G__23658 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658) : self__.dispatch_fn.call(null,G__23647,G__23648,G__23649,G__23650,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23659 = a;
var G__23660 = b;
var G__23661 = c;
var G__23662 = d;
var G__23663 = e;
var G__23664 = f;
var G__23665 = g;
var G__23666 = h;
var G__23667 = i;
var G__23668 = j;
var G__23669 = k;
var G__23670 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670) : target_fn.call(null,G__23659,G__23660,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670));
});
var G__24355__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23671 = a;
var G__23672 = b;
var G__23673 = c;
var G__23674 = d;
var G__23675 = e;
var G__23676 = f;
var G__23677 = g;
var G__23678 = h;
var G__23679 = i;
var G__23680 = j;
var G__23681 = k;
var G__23682 = l;
var G__23683 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683) : self__.dispatch_fn.call(null,G__23671,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682,G__23683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23684 = a;
var G__23685 = b;
var G__23686 = c;
var G__23687 = d;
var G__23688 = e;
var G__23689 = f;
var G__23690 = g;
var G__23691 = h;
var G__23692 = i;
var G__23693 = j;
var G__23694 = k;
var G__23695 = l;
var G__23696 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696) : target_fn.call(null,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694,G__23695,G__23696));
});
var G__24355__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23697 = a;
var G__23698 = b;
var G__23699 = c;
var G__23700 = d;
var G__23701 = e;
var G__23702 = f;
var G__23703 = g;
var G__23704 = h;
var G__23705 = i;
var G__23706 = j;
var G__23707 = k;
var G__23708 = l;
var G__23709 = m;
var G__23710 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710) : self__.dispatch_fn.call(null,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706,G__23707,G__23708,G__23709,G__23710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23711 = a;
var G__23712 = b;
var G__23713 = c;
var G__23714 = d;
var G__23715 = e;
var G__23716 = f;
var G__23717 = g;
var G__23718 = h;
var G__23719 = i;
var G__23720 = j;
var G__23721 = k;
var G__23722 = l;
var G__23723 = m;
var G__23724 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724) : target_fn.call(null,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719,G__23720,G__23721,G__23722,G__23723,G__23724));
});
var G__24355__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23725 = a;
var G__23726 = b;
var G__23727 = c;
var G__23728 = d;
var G__23729 = e;
var G__23730 = f;
var G__23731 = g;
var G__23732 = h;
var G__23733 = i;
var G__23734 = j;
var G__23735 = k;
var G__23736 = l;
var G__23737 = m;
var G__23738 = n;
var G__23739 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739) : self__.dispatch_fn.call(null,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23740 = a;
var G__23741 = b;
var G__23742 = c;
var G__23743 = d;
var G__23744 = e;
var G__23745 = f;
var G__23746 = g;
var G__23747 = h;
var G__23748 = i;
var G__23749 = j;
var G__23750 = k;
var G__23751 = l;
var G__23752 = m;
var G__23753 = n;
var G__23754 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754) : target_fn.call(null,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754));
});
var G__24355__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23755 = a;
var G__23756 = b;
var G__23757 = c;
var G__23758 = d;
var G__23759 = e;
var G__23760 = f;
var G__23761 = g;
var G__23762 = h;
var G__23763 = i;
var G__23764 = j;
var G__23765 = k;
var G__23766 = l;
var G__23767 = m;
var G__23768 = n;
var G__23769 = o;
var G__23770 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770) : self__.dispatch_fn.call(null,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23771 = a;
var G__23772 = b;
var G__23773 = c;
var G__23774 = d;
var G__23775 = e;
var G__23776 = f;
var G__23777 = g;
var G__23778 = h;
var G__23779 = i;
var G__23780 = j;
var G__23781 = k;
var G__23782 = l;
var G__23783 = m;
var G__23784 = n;
var G__23785 = o;
var G__23786 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786) : target_fn.call(null,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786));
});
var G__24355__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23787 = a;
var G__23788 = b;
var G__23789 = c;
var G__23790 = d;
var G__23791 = e;
var G__23792 = f;
var G__23793 = g;
var G__23794 = h;
var G__23795 = i;
var G__23796 = j;
var G__23797 = k;
var G__23798 = l;
var G__23799 = m;
var G__23800 = n;
var G__23801 = o;
var G__23802 = p;
var G__23803 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803) : self__.dispatch_fn.call(null,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23804 = a;
var G__23805 = b;
var G__23806 = c;
var G__23807 = d;
var G__23808 = e;
var G__23809 = f;
var G__23810 = g;
var G__23811 = h;
var G__23812 = i;
var G__23813 = j;
var G__23814 = k;
var G__23815 = l;
var G__23816 = m;
var G__23817 = n;
var G__23818 = o;
var G__23819 = p;
var G__23820 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820) : target_fn.call(null,G__23804,G__23805,G__23806,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820));
});
var G__24355__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23821 = a;
var G__23822 = b;
var G__23823 = c;
var G__23824 = d;
var G__23825 = e;
var G__23826 = f;
var G__23827 = g;
var G__23828 = h;
var G__23829 = i;
var G__23830 = j;
var G__23831 = k;
var G__23832 = l;
var G__23833 = m;
var G__23834 = n;
var G__23835 = o;
var G__23836 = p;
var G__23837 = q;
var G__23838 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838) : self__.dispatch_fn.call(null,G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23839 = a;
var G__23840 = b;
var G__23841 = c;
var G__23842 = d;
var G__23843 = e;
var G__23844 = f;
var G__23845 = g;
var G__23846 = h;
var G__23847 = i;
var G__23848 = j;
var G__23849 = k;
var G__23850 = l;
var G__23851 = m;
var G__23852 = n;
var G__23853 = o;
var G__23854 = p;
var G__23855 = q;
var G__23856 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856) : target_fn.call(null,G__23839,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856));
});
var G__24355__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23857 = a;
var G__23858 = b;
var G__23859 = c;
var G__23860 = d;
var G__23861 = e;
var G__23862 = f;
var G__23863 = g;
var G__23864 = h;
var G__23865 = i;
var G__23866 = j;
var G__23867 = k;
var G__23868 = l;
var G__23869 = m;
var G__23870 = n;
var G__23871 = o;
var G__23872 = p;
var G__23873 = q;
var G__23874 = r;
var G__23875 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875) : self__.dispatch_fn.call(null,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23876 = a;
var G__23877 = b;
var G__23878 = c;
var G__23879 = d;
var G__23880 = e;
var G__23881 = f;
var G__23882 = g;
var G__23883 = h;
var G__23884 = i;
var G__23885 = j;
var G__23886 = k;
var G__23887 = l;
var G__23888 = m;
var G__23889 = n;
var G__23890 = o;
var G__23891 = p;
var G__23892 = q;
var G__23893 = r;
var G__23894 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894) : target_fn.call(null,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892,G__23893,G__23894));
});
var G__24355__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23895 = a;
var G__23896 = b;
var G__23897 = c;
var G__23898 = d;
var G__23899 = e;
var G__23900 = f;
var G__23901 = g;
var G__23902 = h;
var G__23903 = i;
var G__23904 = j;
var G__23905 = k;
var G__23906 = l;
var G__23907 = m;
var G__23908 = n;
var G__23909 = o;
var G__23910 = p;
var G__23911 = q;
var G__23912 = r;
var G__23913 = s;
var G__23914 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914) : self__.dispatch_fn.call(null,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23915 = a;
var G__23916 = b;
var G__23917 = c;
var G__23918 = d;
var G__23919 = e;
var G__23920 = f;
var G__23921 = g;
var G__23922 = h;
var G__23923 = i;
var G__23924 = j;
var G__23925 = k;
var G__23926 = l;
var G__23927 = m;
var G__23928 = n;
var G__23929 = o;
var G__23930 = p;
var G__23931 = q;
var G__23932 = r;
var G__23933 = s;
var G__23934 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934) : target_fn.call(null,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934));
});
var G__24355__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__24355 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24355__1.call(this,self__);
case 2:
return G__24355__2.call(this,self__,a);
case 3:
return G__24355__3.call(this,self__,a,b);
case 4:
return G__24355__4.call(this,self__,a,b,c);
case 5:
return G__24355__5.call(this,self__,a,b,c,d);
case 6:
return G__24355__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24355__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24355__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24355__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24355__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24355__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24355__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24355__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24355__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24355__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24355__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24355__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24355__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24355__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24355__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24355__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24355__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24355.cljs$core$IFn$_invoke$arity$1 = G__24355__1;
G__24355.cljs$core$IFn$_invoke$arity$2 = G__24355__2;
G__24355.cljs$core$IFn$_invoke$arity$3 = G__24355__3;
G__24355.cljs$core$IFn$_invoke$arity$4 = G__24355__4;
G__24355.cljs$core$IFn$_invoke$arity$5 = G__24355__5;
G__24355.cljs$core$IFn$_invoke$arity$6 = G__24355__6;
G__24355.cljs$core$IFn$_invoke$arity$7 = G__24355__7;
G__24355.cljs$core$IFn$_invoke$arity$8 = G__24355__8;
G__24355.cljs$core$IFn$_invoke$arity$9 = G__24355__9;
G__24355.cljs$core$IFn$_invoke$arity$10 = G__24355__10;
G__24355.cljs$core$IFn$_invoke$arity$11 = G__24355__11;
G__24355.cljs$core$IFn$_invoke$arity$12 = G__24355__12;
G__24355.cljs$core$IFn$_invoke$arity$13 = G__24355__13;
G__24355.cljs$core$IFn$_invoke$arity$14 = G__24355__14;
G__24355.cljs$core$IFn$_invoke$arity$15 = G__24355__15;
G__24355.cljs$core$IFn$_invoke$arity$16 = G__24355__16;
G__24355.cljs$core$IFn$_invoke$arity$17 = G__24355__17;
G__24355.cljs$core$IFn$_invoke$arity$18 = G__24355__18;
G__24355.cljs$core$IFn$_invoke$arity$19 = G__24355__19;
G__24355.cljs$core$IFn$_invoke$arity$20 = G__24355__20;
G__24355.cljs$core$IFn$_invoke$arity$21 = G__24355__21;
G__24355.cljs$core$IFn$_invoke$arity$22 = G__24355__22;
return G__24355;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args23507){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23507)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23935 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23935) : self__.dispatch_fn.call(null,G__23935));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23936 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23936) : target_fn.call(null,G__23936));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23937 = a;
var G__23938 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23937,G__23938) : self__.dispatch_fn.call(null,G__23937,G__23938));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23939 = a;
var G__23940 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23939,G__23940) : target_fn.call(null,G__23939,G__23940));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23941 = a;
var G__23942 = b;
var G__23943 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23941,G__23942,G__23943) : self__.dispatch_fn.call(null,G__23941,G__23942,G__23943));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23944 = a;
var G__23945 = b;
var G__23946 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23944,G__23945,G__23946) : target_fn.call(null,G__23944,G__23945,G__23946));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23947 = a;
var G__23948 = b;
var G__23949 = c;
var G__23950 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23947,G__23948,G__23949,G__23950) : self__.dispatch_fn.call(null,G__23947,G__23948,G__23949,G__23950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23951 = a;
var G__23952 = b;
var G__23953 = c;
var G__23954 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23951,G__23952,G__23953,G__23954) : target_fn.call(null,G__23951,G__23952,G__23953,G__23954));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23955 = a;
var G__23956 = b;
var G__23957 = c;
var G__23958 = d;
var G__23959 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23955,G__23956,G__23957,G__23958,G__23959) : self__.dispatch_fn.call(null,G__23955,G__23956,G__23957,G__23958,G__23959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23960 = a;
var G__23961 = b;
var G__23962 = c;
var G__23963 = d;
var G__23964 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23960,G__23961,G__23962,G__23963,G__23964) : target_fn.call(null,G__23960,G__23961,G__23962,G__23963,G__23964));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23965 = a;
var G__23966 = b;
var G__23967 = c;
var G__23968 = d;
var G__23969 = e;
var G__23970 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23965,G__23966,G__23967,G__23968,G__23969,G__23970) : self__.dispatch_fn.call(null,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23971 = a;
var G__23972 = b;
var G__23973 = c;
var G__23974 = d;
var G__23975 = e;
var G__23976 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23971,G__23972,G__23973,G__23974,G__23975,G__23976) : target_fn.call(null,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23977 = a;
var G__23978 = b;
var G__23979 = c;
var G__23980 = d;
var G__23981 = e;
var G__23982 = f;
var G__23983 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983) : self__.dispatch_fn.call(null,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23984 = a;
var G__23985 = b;
var G__23986 = c;
var G__23987 = d;
var G__23988 = e;
var G__23989 = f;
var G__23990 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990) : target_fn.call(null,G__23984,G__23985,G__23986,G__23987,G__23988,G__23989,G__23990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23991 = a;
var G__23992 = b;
var G__23993 = c;
var G__23994 = d;
var G__23995 = e;
var G__23996 = f;
var G__23997 = g;
var G__23998 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998) : self__.dispatch_fn.call(null,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23999 = a;
var G__24000 = b;
var G__24001 = c;
var G__24002 = d;
var G__24003 = e;
var G__24004 = f;
var G__24005 = g;
var G__24006 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006) : target_fn.call(null,G__23999,G__24000,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24007 = a;
var G__24008 = b;
var G__24009 = c;
var G__24010 = d;
var G__24011 = e;
var G__24012 = f;
var G__24013 = g;
var G__24014 = h;
var G__24015 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015) : self__.dispatch_fn.call(null,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24016 = a;
var G__24017 = b;
var G__24018 = c;
var G__24019 = d;
var G__24020 = e;
var G__24021 = f;
var G__24022 = g;
var G__24023 = h;
var G__24024 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024) : target_fn.call(null,G__24016,G__24017,G__24018,G__24019,G__24020,G__24021,G__24022,G__24023,G__24024));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24025 = a;
var G__24026 = b;
var G__24027 = c;
var G__24028 = d;
var G__24029 = e;
var G__24030 = f;
var G__24031 = g;
var G__24032 = h;
var G__24033 = i;
var G__24034 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034) : self__.dispatch_fn.call(null,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24035 = a;
var G__24036 = b;
var G__24037 = c;
var G__24038 = d;
var G__24039 = e;
var G__24040 = f;
var G__24041 = g;
var G__24042 = h;
var G__24043 = i;
var G__24044 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044) : target_fn.call(null,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24045 = a;
var G__24046 = b;
var G__24047 = c;
var G__24048 = d;
var G__24049 = e;
var G__24050 = f;
var G__24051 = g;
var G__24052 = h;
var G__24053 = i;
var G__24054 = j;
var G__24055 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055) : self__.dispatch_fn.call(null,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24056 = a;
var G__24057 = b;
var G__24058 = c;
var G__24059 = d;
var G__24060 = e;
var G__24061 = f;
var G__24062 = g;
var G__24063 = h;
var G__24064 = i;
var G__24065 = j;
var G__24066 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066) : target_fn.call(null,G__24056,G__24057,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24067 = a;
var G__24068 = b;
var G__24069 = c;
var G__24070 = d;
var G__24071 = e;
var G__24072 = f;
var G__24073 = g;
var G__24074 = h;
var G__24075 = i;
var G__24076 = j;
var G__24077 = k;
var G__24078 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078) : self__.dispatch_fn.call(null,G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24079 = a;
var G__24080 = b;
var G__24081 = c;
var G__24082 = d;
var G__24083 = e;
var G__24084 = f;
var G__24085 = g;
var G__24086 = h;
var G__24087 = i;
var G__24088 = j;
var G__24089 = k;
var G__24090 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090) : target_fn.call(null,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24091 = a;
var G__24092 = b;
var G__24093 = c;
var G__24094 = d;
var G__24095 = e;
var G__24096 = f;
var G__24097 = g;
var G__24098 = h;
var G__24099 = i;
var G__24100 = j;
var G__24101 = k;
var G__24102 = l;
var G__24103 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103) : self__.dispatch_fn.call(null,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24104 = a;
var G__24105 = b;
var G__24106 = c;
var G__24107 = d;
var G__24108 = e;
var G__24109 = f;
var G__24110 = g;
var G__24111 = h;
var G__24112 = i;
var G__24113 = j;
var G__24114 = k;
var G__24115 = l;
var G__24116 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116) : target_fn.call(null,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24117 = a;
var G__24118 = b;
var G__24119 = c;
var G__24120 = d;
var G__24121 = e;
var G__24122 = f;
var G__24123 = g;
var G__24124 = h;
var G__24125 = i;
var G__24126 = j;
var G__24127 = k;
var G__24128 = l;
var G__24129 = m;
var G__24130 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130) : self__.dispatch_fn.call(null,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126,G__24127,G__24128,G__24129,G__24130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24131 = a;
var G__24132 = b;
var G__24133 = c;
var G__24134 = d;
var G__24135 = e;
var G__24136 = f;
var G__24137 = g;
var G__24138 = h;
var G__24139 = i;
var G__24140 = j;
var G__24141 = k;
var G__24142 = l;
var G__24143 = m;
var G__24144 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144) : target_fn.call(null,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139,G__24140,G__24141,G__24142,G__24143,G__24144));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24145 = a;
var G__24146 = b;
var G__24147 = c;
var G__24148 = d;
var G__24149 = e;
var G__24150 = f;
var G__24151 = g;
var G__24152 = h;
var G__24153 = i;
var G__24154 = j;
var G__24155 = k;
var G__24156 = l;
var G__24157 = m;
var G__24158 = n;
var G__24159 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159) : self__.dispatch_fn.call(null,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24160 = a;
var G__24161 = b;
var G__24162 = c;
var G__24163 = d;
var G__24164 = e;
var G__24165 = f;
var G__24166 = g;
var G__24167 = h;
var G__24168 = i;
var G__24169 = j;
var G__24170 = k;
var G__24171 = l;
var G__24172 = m;
var G__24173 = n;
var G__24174 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174) : target_fn.call(null,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24175 = a;
var G__24176 = b;
var G__24177 = c;
var G__24178 = d;
var G__24179 = e;
var G__24180 = f;
var G__24181 = g;
var G__24182 = h;
var G__24183 = i;
var G__24184 = j;
var G__24185 = k;
var G__24186 = l;
var G__24187 = m;
var G__24188 = n;
var G__24189 = o;
var G__24190 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190) : self__.dispatch_fn.call(null,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24191 = a;
var G__24192 = b;
var G__24193 = c;
var G__24194 = d;
var G__24195 = e;
var G__24196 = f;
var G__24197 = g;
var G__24198 = h;
var G__24199 = i;
var G__24200 = j;
var G__24201 = k;
var G__24202 = l;
var G__24203 = m;
var G__24204 = n;
var G__24205 = o;
var G__24206 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206) : target_fn.call(null,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24207 = a;
var G__24208 = b;
var G__24209 = c;
var G__24210 = d;
var G__24211 = e;
var G__24212 = f;
var G__24213 = g;
var G__24214 = h;
var G__24215 = i;
var G__24216 = j;
var G__24217 = k;
var G__24218 = l;
var G__24219 = m;
var G__24220 = n;
var G__24221 = o;
var G__24222 = p;
var G__24223 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223) : self__.dispatch_fn.call(null,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24224 = a;
var G__24225 = b;
var G__24226 = c;
var G__24227 = d;
var G__24228 = e;
var G__24229 = f;
var G__24230 = g;
var G__24231 = h;
var G__24232 = i;
var G__24233 = j;
var G__24234 = k;
var G__24235 = l;
var G__24236 = m;
var G__24237 = n;
var G__24238 = o;
var G__24239 = p;
var G__24240 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240) : target_fn.call(null,G__24224,G__24225,G__24226,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24241 = a;
var G__24242 = b;
var G__24243 = c;
var G__24244 = d;
var G__24245 = e;
var G__24246 = f;
var G__24247 = g;
var G__24248 = h;
var G__24249 = i;
var G__24250 = j;
var G__24251 = k;
var G__24252 = l;
var G__24253 = m;
var G__24254 = n;
var G__24255 = o;
var G__24256 = p;
var G__24257 = q;
var G__24258 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258) : self__.dispatch_fn.call(null,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24259 = a;
var G__24260 = b;
var G__24261 = c;
var G__24262 = d;
var G__24263 = e;
var G__24264 = f;
var G__24265 = g;
var G__24266 = h;
var G__24267 = i;
var G__24268 = j;
var G__24269 = k;
var G__24270 = l;
var G__24271 = m;
var G__24272 = n;
var G__24273 = o;
var G__24274 = p;
var G__24275 = q;
var G__24276 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276) : target_fn.call(null,G__24259,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24277 = a;
var G__24278 = b;
var G__24279 = c;
var G__24280 = d;
var G__24281 = e;
var G__24282 = f;
var G__24283 = g;
var G__24284 = h;
var G__24285 = i;
var G__24286 = j;
var G__24287 = k;
var G__24288 = l;
var G__24289 = m;
var G__24290 = n;
var G__24291 = o;
var G__24292 = p;
var G__24293 = q;
var G__24294 = r;
var G__24295 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295) : self__.dispatch_fn.call(null,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24296 = a;
var G__24297 = b;
var G__24298 = c;
var G__24299 = d;
var G__24300 = e;
var G__24301 = f;
var G__24302 = g;
var G__24303 = h;
var G__24304 = i;
var G__24305 = j;
var G__24306 = k;
var G__24307 = l;
var G__24308 = m;
var G__24309 = n;
var G__24310 = o;
var G__24311 = p;
var G__24312 = q;
var G__24313 = r;
var G__24314 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314) : target_fn.call(null,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312,G__24313,G__24314));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24315 = a;
var G__24316 = b;
var G__24317 = c;
var G__24318 = d;
var G__24319 = e;
var G__24320 = f;
var G__24321 = g;
var G__24322 = h;
var G__24323 = i;
var G__24324 = j;
var G__24325 = k;
var G__24326 = l;
var G__24327 = m;
var G__24328 = n;
var G__24329 = o;
var G__24330 = p;
var G__24331 = q;
var G__24332 = r;
var G__24333 = s;
var G__24334 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334) : self__.dispatch_fn.call(null,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24335 = a;
var G__24336 = b;
var G__24337 = c;
var G__24338 = d;
var G__24339 = e;
var G__24340 = f;
var G__24341 = g;
var G__24342 = h;
var G__24343 = i;
var G__24344 = j;
var G__24345 = k;
var G__24346 = l;
var G__24347 = m;
var G__24348 = n;
var G__24349 = o;
var G__24350 = p;
var G__24351 = q;
var G__24352 = r;
var G__24353 = s;
var G__24354 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354) : target_fn.call(null,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24356 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__24356);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__12774__auto__,writer__12775__auto__,opt__12776__auto__){
return cljs.core._write(writer__12775__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__24361 = x;
var G__24362 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24361,G__24362) : pred.call(null,G__24361,G__24362));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24363 = y;
var G__24364 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24363,G__24364) : pred.call(null,G__24363,G__24364));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1421962947383