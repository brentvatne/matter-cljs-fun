;; Analyzed by ClojureScript 0.0-2665
{:defs {engine {:file "src/matter_cljs_fun/core.cljs", :line 46, :column 1, :end-line 46, :end-column 17, :test true, :name matter-cljs-fun.core/engine}, engine-options {:file "src/matter_cljs_fun/core.cljs", :line 38, :column 1, :end-line 38, :end-column 21, :test true, :name matter-cljs-fun.core/engine-options}, World {:file "src/matter_cljs_fun/core.cljs", :line 10, :column 1, :end-line 10, :end-column 12, :test true, :name matter-cljs-fun.core/World}, pin-cols {:file "src/matter_cljs_fun/core.cljs", :line 22, :column 1, :end-line 22, :end-column 15, :test true, :name matter-cljs-fun.core/pin-cols}, scene-height {:file "src/matter_cljs_fun/core.cljs", :line 19, :column 1, :end-line 19, :end-column 19, :test true, :name matter-cljs-fun.core/scene-height}, right-wall-width {:file "src/matter_cljs_fun/core.cljs", :line 32, :column 1, :end-line 32, :end-column 23, :test true, :name matter-cljs-fun.core/right-wall-width}, scene-width {:file "src/matter_cljs_fun/core.cljs", :line 18, :column 1, :end-line 18, :end-column 18, :test true, :name matter-cljs-fun.core/scene-width}, start-y {:file "src/matter_cljs_fun/core.cljs", :line 25, :column 1, :end-line 25, :end-column 14, :test true, :name matter-cljs-fun.core/start-y}, Engine {:file "src/matter_cljs_fun/core.cljs", :line 9, :column 1, :end-line 9, :end-column 13, :test true, :name matter-cljs-fun.core/Engine}, create-statics-and-composites {:protocol-inline nil, :name matter-cljs-fun.core/create-statics-and-composites, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 37, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 100, :end-line 100, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, row-space {:file "src/matter_cljs_fun/core.cljs", :line 27, :column 1, :end-line 27, :end-column 16, :test true, :name matter-cljs-fun.core/row-space}, left-wall-width {:file "src/matter_cljs_fun/core.cljs", :line 31, :column 1, :end-line 31, :end-column 22, :test true, :name matter-cljs-fun.core/left-wall-width}, Constraint {:file "src/matter_cljs_fun/core.cljs", :line 13, :column 1, :end-line 13, :end-column 17, :test true, :name matter-cljs-fun.core/Constraint}, clear-composites {:protocol-inline nil, :name matter-cljs-fun.core/clear-composites, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ground {:file "src/matter_cljs_fun/core.cljs", :line 73, :column 1, :end-line 73, :end-column 13, :test true, :name matter-cljs-fun.core/ground}, create-pin-stack-rows {:protocol-inline nil, :name matter-cljs-fun.core/create-pin-stack-rows, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 58, :end-line 58, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ball-radius {:file "src/matter_cljs_fun/core.cljs", :line 35, :column 1, :end-line 35, :end-column 18, :test true, :name matter-cljs-fun.core/ball-radius}, pin-rows {:file "src/matter_cljs_fun/core.cljs", :line 23, :column 1, :end-line 23, :end-column 15, :test true, :name matter-cljs-fun.core/pin-rows}, clear-statics {:protocol-inline nil, :name matter-cljs-fun.core/clear-statics, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, Composites {:file "src/matter_cljs_fun/core.cljs", :line 14, :column 1, :end-line 14, :end-column 17, :test true, :name matter-cljs-fun.core/Composites}, pin-radius {:file "src/matter_cljs_fun/core.cljs", :line 26, :column 1, :end-line 26, :end-column 17, :test true, :name matter-cljs-fun.core/pin-radius}, add-random-ball {:protocol-inline nil, :name matter-cljs-fun.core/add-random-ball, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 69, :end-line 69, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, add-event-listener {:protocol-inline nil, :name matter-cljs-fun.core/add-event-listener, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 26, :method-params ([event id fun]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 108, :end-line 108, :max-fixed-arity 3, :fn-var true, :arglists (quote ([event id fun])), :test true}, start-x {:file "src/matter_cljs_fun/core.cljs", :line 24, :column 1, :end-line 24, :end-column 14, :test true, :name matter-cljs-fun.core/start-x}, Matter {:file "src/matter_cljs_fun/core.cljs", :line 8, :column 1, :end-line 8, :end-column 13, :test true, :name matter-cljs-fun.core/Matter}, Bodies {:file "src/matter_cljs_fun/core.cljs", :line 12, :column 1, :end-line 12, :end-column 13, :test true, :name matter-cljs-fun.core/Bodies}, on-click {:file "src/matter_cljs_fun/core.cljs", :line 111, :column 1, :end-line 111, :end-column 15, :test true, :name matter-cljs-fun.core/on-click}, Body {:file "src/matter_cljs_fun/core.cljs", :line 11, :column 1, :end-line 11, :end-column 11, :test true, :name matter-cljs-fun.core/Body}, clear-dynamics {:protocol-inline nil, :name matter-cljs-fun.core/clear-dynamics, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 94, :end-line 94, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, world {:file "src/matter_cljs_fun/core.cljs", :line 48, :column 1, :end-line 48, :end-column 16, :test true, :name matter-cljs-fun.core/world}, initialize {:protocol-inline nil, :name matter-cljs-fun.core/initialize, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 114, :end-line 114, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, col-space {:file "src/matter_cljs_fun/core.cljs", :line 28, :column 1, :end-line 28, :end-column 16, :test true, :name matter-cljs-fun.core/col-space}, add-ball {:protocol-inline nil, :name matter-cljs-fun.core/add-ball, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, right-wall {:file "src/matter_cljs_fun/core.cljs", :line 79, :column 1, :end-line 79, :end-column 17, :test true, :name matter-cljs-fun.core/right-wall}, left-wall {:file "src/matter_cljs_fun/core.cljs", :line 76, :column 1, :end-line 76, :end-column 16, :test true, :name matter-cljs-fun.core/left-wall}, ground-width {:file "src/matter_cljs_fun/core.cljs", :line 30, :column 1, :end-line 30, :end-column 19, :test true, :name matter-cljs-fun.core/ground-width}, create-pin-stack-offset-rows {:protocol-inline nil, :name matter-cljs-fun.core/create-pin-stack-offset-rows, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, Composite {:file "src/matter_cljs_fun/core.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :test true, :name matter-cljs-fun.core/Composite}, position->pin-grey {:protocol-inline nil, :name matter-cljs-fun.core/position->pin-grey, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 26, :method-params ([x y col row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 55, :end-line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x y col row])), :test true}, position->pin-black {:protocol-inline nil, :name matter-cljs-fun.core/position->pin-black, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 27, :method-params ([x y col row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 52, :end-line 52, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x y col row])), :test true}}, :name matter-cljs-fun.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {figwheel.client figwheel.client, fw figwheel.client}, :imports nil}