;; Analyzed by ClojureScript 0.0-2665
{:defs {engine {:file "src/matter_cljs_fun/pong.cljs", :line 52, :column 1, :end-line 52, :end-column 17, :test true, :name matter-cljs-fun.pong/engine}, engine-options {:file "src/matter_cljs_fun/pong.cljs", :line 34, :column 1, :end-line 34, :end-column 21, :test true, :name matter-cljs-fun.pong/engine-options}, ->variable-controls {:protocol-inline nil, :name matter-cljs-fun.pong/->variable-controls, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([cursor__19649__auto__] [cursor__19649__auto__ m44126]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__19649__auto__] [cursor__19649__auto__ m44126])), :test true}, user-paddle {:file "src/matter_cljs_fun/pong.cljs", :line 41, :column 1, :end-line 41, :end-column 22, :test true, :name matter-cljs-fun.pong/user-paddle}, add-bodies {:protocol-inline nil, :name matter-cljs-fun.pong/add-bodies, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 18, :method-params ([bodies]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 127, :end-line 127, :max-fixed-arity 1, :fn-var true, :arglists (quote ([bodies])), :test true}, scene-height {:file "src/matter_cljs_fun/pong.cljs", :line 18, :column 1, :end-line 18, :end-column 19, :test true, :name matter-cljs-fun.pong/scene-height}, build-world {:protocol-inline nil, :name matter-cljs-fun.pong/build-world, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 130, :end-line 130, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, current-direction {:protocol-inline nil, :name matter-cljs-fun.pong/current-direction, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 25, :method-params ([paddle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/Keyword, :variadic false, :max-fixed-arity 1}), :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paddle])), :test true}, pos-y {:protocol-inline nil, :name matter-cljs-fun.pong/pos-y, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 13, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body])), :test true}, ->t44083 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44083, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([G__44081 owner validate__17832__auto__ data pretty-user-paddle-data output-schema44077 input-checker44079 G__44082 output-checker44080 input-schema44078 ufv__ meta44084]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44083, :variadic false, :max-fixed-arity 12}), :line 168, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__44081 owner validate__17832__auto__ data pretty-user-paddle-data output-schema44077 input-checker44079 G__44082 output-checker44080 input-schema44078 ufv__ meta44084])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, scene-width {:file "src/matter_cljs_fun/pong.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :test true, :name matter-cljs-fun.pong/scene-width}, apply-force {:protocol-inline nil, :name matter-cljs-fun.pong/apply-force, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 19, :method-params ([body strength]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([body strength])), :test true}, rectangle {:protocol-inline nil, :name matter-cljs-fun.pong/rectangle, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :test true}, t44088 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44088, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t44133 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44133, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 202, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, variable-controls {:schema (schema.core/make-fn-schema output-schema44127 [input-schema44128]), :protocol-inline nil, :name matter-cljs-fun.pong/variable-controls, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 33, :method-params ([G__44131 G__44132]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag matter-cljs-fun.pong/t44136, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, ->t44113 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44113, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([owner validate__17832__auto__ data output-schema44104 input-schema44105 G__44108 input-checker44106 G__44109 ufv__ torque-slider output-checker44107 meta44114]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44113, :variadic false, :max-fixed-arity 12}), :line 191, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner validate__17832__auto__ data output-schema44104 input-schema44105 G__44108 input-checker44106 G__44109 ufv__ torque-slider output-checker44107 meta44114])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t44083 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44083, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 168, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t44136 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44136, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([output-schema44127 owner output-checker44130 validate__17832__auto__ data G__44131 variable-controls input-schema44128 G__44132 ufv__ input-checker44129 meta44137]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44136, :variadic false, :max-fixed-arity 12}), :line 202, :max-fixed-arity 12, :fn-var true, :arglists (quote ([output-schema44127 owner output-checker44130 validate__17832__auto__ data G__44131 variable-controls input-schema44128 G__44132 ufv__ input-checker44129 meta44137])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, pretty-user-paddle-data {:schema (schema.core/make-fn-schema output-schema44077 [input-schema44078]), :protocol-inline nil, :name matter-cljs-fun.pong/pretty-user-paddle-data, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 39, :method-params ([G__44081 G__44082]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag matter-cljs-fun.pong/t44088, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, slam-brakes! {:protocol-inline nil, :name matter-cljs-fun.pong/slam-brakes!, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 20, :method-params ([paddle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paddle])), :test true}, render-variable-controls {:protocol-inline nil, :name matter-cljs-fun.pong/render-variable-controls, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 208, :end-line 208, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t44113 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44113, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 191, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, clear-statics {:protocol-inline nil, :name matter-cljs-fun.pong/clear-statics, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 148, :end-line 148, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t44133 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44133, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([output-schema44127 owner output-checker44130 validate__17832__auto__ data G__44131 variable-controls input-schema44128 G__44132 ufv__ input-checker44129 meta44134]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44133, :variadic false, :max-fixed-arity 12}), :line 202, :max-fixed-arity 12, :fn-var true, :arglists (quote ([output-schema44127 owner output-checker44130 validate__17832__auto__ data G__44131 variable-controls input-schema44128 G__44132 ufv__ input-checker44129 meta44134])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->torque-slider {:protocol-inline nil, :name matter-cljs-fun.pong/->torque-slider, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([cursor__19649__auto__] [cursor__19649__auto__ m44103]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__19649__auto__] [cursor__19649__auto__ m44103])), :test true}, clear-paddles {:protocol-inline nil, :name matter-cljs-fun.pong/clear-paddles, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 143, :end-line 143, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->t44088 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44088, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([G__44081 owner validate__17832__auto__ data pretty-user-paddle-data output-schema44077 input-checker44079 G__44082 output-checker44080 input-schema44078 ufv__ meta44089]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44088, :variadic false, :max-fixed-arity 12}), :line 168, :max-fixed-arity 12, :fn-var true, :arglists (quote ([G__44081 owner validate__17832__auto__ data pretty-user-paddle-data output-schema44077 input-checker44079 G__44082 output-checker44080 input-schema44078 ufv__ meta44089])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, pos {:protocol-inline nil, :name matter-cljs-fun.pong/pos, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 11, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 1}), :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body])), :test true}, variable-controls-state {:file "src/matter_cljs_fun/pong.cljs", :line 154, :column 1, :end-line 154, :end-column 34, :test true, :name matter-cljs-fun.pong/variable-controls-state}, pos-x {:protocol-inline nil, :name matter-cljs-fun.pong/pos-x, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 13, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body])), :test true}, accept-user-input! {:protocol-inline nil, :name matter-cljs-fun.pong/accept-user-input!, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 0}), :line 117, :end-line 117, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, world {:file "src/matter_cljs_fun/pong.cljs", :line 59, :column 1, :end-line 59, :end-column 16, :test true, :name matter-cljs-fun.pong/world}, initialize {:protocol-inline nil, :name matter-cljs-fun.pong/initialize, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 215, :end-line 215, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, cpu-paddle {:file "src/matter_cljs_fun/pong.cljs", :line 44, :column 1, :end-line 44, :end-column 21, :test true, :name matter-cljs-fun.pong/cpu-paddle}, right-wall {:file "src/matter_cljs_fun/pong.cljs", :line 29, :column 1, :end-line 29, :end-column 17, :test true, :name matter-cljs-fun.pong/right-wall}, left-wall {:file "src/matter_cljs_fun/pong.cljs", :line 25, :column 1, :end-line 25, :end-column 16, :test true, :name matter-cljs-fun.pong/left-wall}, abs {:protocol-inline nil, :name matter-cljs-fun.pong/abs, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 11, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :test true}, t44110 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44110, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 191, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, move-paddle! {:protocol-inline nil, :name matter-cljs-fun.pong/move-paddle!, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 20, :method-params ([paddle direction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([paddle direction])), :test true}, log-user-paddle {:protocol-inline nil, :name matter-cljs-fun.pong/log-user-paddle, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, display-statistics! {:protocol-inline nil, :name matter-cljs-fun.pong/display-statistics!, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 27, :method-params ([paddle dom-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core.async.impl.channels/ManyToManyChannel, :variadic false, :max-fixed-arity 2}), :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([paddle dom-id])), :test true}, update-after-render {:protocol-inline nil, :name matter-cljs-fun.pong/update-after-render, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->pretty-user-paddle-data {:protocol-inline nil, :name matter-cljs-fun.pong/->pretty-user-paddle-data, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([cursor__19649__auto__] [cursor__19649__auto__ m44076]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:tag any, :variadic false, :max-fixed-arity 2}), :line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cursor__19649__auto__] [cursor__19649__auto__ m44076])), :test true}, t44136 {:num-fields 12, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/t44136, :file "src/matter_cljs_fun/pong.cljs", :type true, :anonymous true, :column 1, :line 202, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t44110 {:protocol-inline nil, :protocols #{om.core/IRender om.core/IDisplayName cljs.core/IMeta cljs.core/IWithMeta}, :name matter-cljs-fun.pong/->t44110, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :method-params ([owner validate__17832__auto__ data output-schema44104 input-schema44105 G__44108 input-checker44106 G__44109 ufv__ torque-slider output-checker44107 meta44111]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 1, :factory :positional, :methods ({:tag matter-cljs-fun.pong/t44110, :variadic false, :max-fixed-arity 12}), :line 191, :max-fixed-arity 12, :fn-var true, :arglists (quote ([owner validate__17832__auto__ data output-schema44104 input-schema44105 G__44108 input-checker44106 G__44109 ufv__ torque-slider output-checker44107 meta44111])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, velocity-x {:protocol-inline nil, :name matter-cljs-fun.pong/velocity-x, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 18, :method-params ([body]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 1}), :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([body])), :test true}, torque-slider {:schema (schema.core/make-fn-schema output-schema44104 [input-schema44105]), :protocol-inline nil, :name matter-cljs-fun.pong/torque-slider, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 29, :method-params ([G__44108 G__44109]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag matter-cljs-fun.pong/t44113, :variadic false, :max-fixed-arity 2}), :raw-arglists (quote ([data owner])), :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([data owner])), :doc "Inputs: [data owner]", :test true}, brake-force {:protocol-inline nil, :name matter-cljs-fun.pong/brake-force, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 19, :method-params ([paddle]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{number clj-nil}, :variadic false, :max-fixed-arity 1}), :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([paddle])), :test true}, translate {:protocol-inline nil, :name matter-cljs-fun.pong/translate, :variadic false, :file "src/matter_cljs_fun/pong.cljs", :end-column 17, :method-params ([body x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists (quote ([body x y])), :test true}}, :name matter-cljs-fun.pong, :doc nil, :excludes #{}, :use-macros {go cljs.core.async.macros, defcomponent om-tools.core, go-loop cljs.core.async.macros}, :require-macros {dom om-tools.dom, om-tools.dom om-tools.dom, om-tools.core om-tools.core, om om.core, om.core om.core, cljs.core.async.macros cljs.core.async.macros}, :uses {World matter-cljs-fun.util, timeout cljs.core.async, set-html! matter-cljs-fun.util, <! cljs.core.async, Engine matter-cljs-fun.util, chan cljs.core.async, by-id matter-cljs-fun.util, Composites matter-cljs-fun.util, Matter matter-cljs-fun.util, Bodies matter-cljs-fun.util, on-click matter-cljs-fun.util, Body matter-cljs-fun.util, >! cljs.core.async, stringify matter-cljs-fun.util, events->chan matter-cljs-fun.util, alts! cljs.core.async, keys-chan matter-cljs-fun.util, Composite matter-cljs-fun.util, put! cljs.core.async}, :requires {goog.dom.classes goog.dom.classes, dom om-tools.dom, classes goog.dom.classes, matter-cljs-fun.util matter-cljs-fun.util, om-tools.dom om-tools.dom, async cljs.core.async, om-tools.core om-tools.core, fw figwheel.client, om.dom om.dom, cljs.core.async cljs.core.async, om-dom om.dom, events goog.events, util matter-cljs-fun.util, figwheel.client figwheel.client, om.core om.core, om om.core, goog.events goog.events}, :imports nil}