;; Analyzed by ClojureScript 0.0-2665
{:defs {engine {:file "src/matter_cljs_fun/core.cljs", :line 34, :column 1, :end-line 34, :end-column 13, :test true, :name matter-cljs-fun.core/engine}, engine-options {:file "src/matter_cljs_fun/core.cljs", :line 29, :column 1, :end-line 29, :end-column 21, :test true, :name matter-cljs-fun.core/engine-options}, World {:file "src/matter_cljs_fun/core.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :test true, :name matter-cljs-fun.core/World}, pin-cols {:file "src/matter_cljs_fun/core.cljs", :line 20, :column 1, :end-line 20, :end-column 15, :test true, :name matter-cljs-fun.core/pin-cols}, scene-height {:file "src/matter_cljs_fun/core.cljs", :line 18, :column 1, :end-line 18, :end-column 19, :test true, :name matter-cljs-fun.core/scene-height}, scene-width {:file "src/matter_cljs_fun/core.cljs", :line 17, :column 1, :end-line 17, :end-column 18, :test true, :name matter-cljs-fun.core/scene-width}, start-y {:file "src/matter_cljs_fun/core.cljs", :line 23, :column 1, :end-line 23, :end-column 14, :test true, :name matter-cljs-fun.core/start-y}, Engine {:file "src/matter_cljs_fun/core.cljs", :line 10, :column 1, :end-line 10, :end-column 13, :test true, :name matter-cljs-fun.core/Engine}, row-space {:file "src/matter_cljs_fun/core.cljs", :line 25, :column 1, :end-line 25, :end-column 16, :test true, :name matter-cljs-fun.core/row-space}, Constraint {:file "src/matter_cljs_fun/core.cljs", :line 14, :column 1, :end-line 14, :end-column 17, :test true, :name matter-cljs-fun.core/Constraint}, ball {:file "src/matter_cljs_fun/core.cljs", :line 55, :column 1, :end-line 55, :end-column 11, :test true, :name matter-cljs-fun.core/ball}, ground {:file "src/matter_cljs_fun/core.cljs", :line 67, :column 1, :end-line 67, :end-column 13, :test true, :name matter-cljs-fun.core/ground}, ball-radius {:file "src/matter_cljs_fun/core.cljs", :line 54, :column 1, :end-line 54, :end-column 18, :test true, :name matter-cljs-fun.core/ball-radius}, pin-rows {:file "src/matter_cljs_fun/core.cljs", :line 21, :column 1, :end-line 21, :end-column 15, :test true, :name matter-cljs-fun.core/pin-rows}, Composites {:file "src/matter_cljs_fun/core.cljs", :line 15, :column 1, :end-line 15, :end-column 17, :test true, :name matter-cljs-fun.core/Composites}, pin-radius {:file "src/matter_cljs_fun/core.cljs", :line 24, :column 1, :end-line 24, :end-column 17, :test true, :name matter-cljs-fun.core/pin-radius}, pin-stack {:file "src/matter_cljs_fun/core.cljs", :line 47, :column 1, :end-line 47, :end-column 16, :test true, :name matter-cljs-fun.core/pin-stack}, add-random-ball {:protocol-inline nil, :name matter-cljs-fun.core/add-random-ball, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, pin-stack-offset {:file "src/matter_cljs_fun/core.cljs", :line 50, :column 1, :end-line 50, :end-column 23, :test true, :name matter-cljs-fun.core/pin-stack-offset}, start-x {:file "src/matter_cljs_fun/core.cljs", :line 22, :column 1, :end-line 22, :end-column 14, :test true, :name matter-cljs-fun.core/start-x}, Matter {:file "src/matter_cljs_fun/core.cljs", :line 9, :column 1, :end-line 9, :end-column 13, :test true, :name matter-cljs-fun.core/Matter}, Bodies {:file "src/matter_cljs_fun/core.cljs", :line 13, :column 1, :end-line 13, :end-column 13, :test true, :name matter-cljs-fun.core/Bodies}, Body {:file "src/matter_cljs_fun/core.cljs", :line 12, :column 1, :end-line 12, :end-column 11, :test true, :name matter-cljs-fun.core/Body}, world {:file "src/matter_cljs_fun/core.cljs", :line 36, :column 1, :end-line 36, :end-column 12, :test true, :name matter-cljs-fun.core/world}, col-space {:file "src/matter_cljs_fun/core.cljs", :line 26, :column 1, :end-line 26, :end-column 16, :test true, :name matter-cljs-fun.core/col-space}, add-ball {:protocol-inline nil, :name matter-cljs-fun.core/add-ball, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, right-wall {:file "src/matter_cljs_fun/core.cljs", :line 73, :column 1, :end-line 73, :end-column 17, :test true, :name matter-cljs-fun.core/right-wall}, left-wall {:file "src/matter_cljs_fun/core.cljs", :line 70, :column 1, :end-line 70, :end-column 16, :test true, :name matter-cljs-fun.core/left-wall}, add-click-handlers {:protocol-inline nil, :name matter-cljs-fun.core/add-click-handlers, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, position->pin-grey {:protocol-inline nil, :name matter-cljs-fun.core/position->pin-grey, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 26, :method-params ([x y col row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 44, :end-line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x y col row])), :test true}, position->pin-black {:protocol-inline nil, :name matter-cljs-fun.core/position->pin-black, :variadic false, :file "src/matter_cljs_fun/core.cljs", :end-column 27, :method-params ([x y col row]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 4}), :line 41, :end-line 41, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x y col row])), :test true}}, :name matter-cljs-fun.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {weasel.repl weasel.repl, ws-repl weasel.repl}, :imports nil}