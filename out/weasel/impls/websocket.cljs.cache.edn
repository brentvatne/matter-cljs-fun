;; Analyzed by ClojureScript 0.0-2665
{:defs {websocket-connection {:protocol-inline nil, :name weasel.impls.websocket/websocket-connection, :variadic false, :file "out/weasel/impls/websocket.cljs", :end-column 28, :method-params ([] [auto-reconnect?] [auto-reconnect? next-reconnect-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag goog/net.WebSocket, :variadic false, :max-fixed-arity 0} {:tag goog/net.WebSocket, :variadic false, :max-fixed-arity 1} {:tag goog/net.WebSocket, :variadic false, :max-fixed-arity 2}), :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([] [auto-reconnect?] [auto-reconnect? next-reconnect-fn])), :test true}, open? {:protocol-inline nil, :protocol weasel.impls.websocket/IWebSocket, :name weasel.impls.websocket/open?, :variadic false, :file "out/weasel/impls/websocket.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 14, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :test true}, IWebSocket {:protocol-symbol true, :name weasel.impls.websocket/IWebSocket, :file "out/weasel/impls/websocket.cljs", :end-column 25, :column 1, :line 14, :protocol-info {:methods {open? [[this]]}}, :info nil, :end-line 14, :impls #{goog/net.WebSocket}, :test true}}, :name weasel.impls.websocket, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {connect clojure.browser.net, event-types clojure.browser.event, IConnection clojure.browser.net, transmit clojure.browser.net}, :requires {gwebsocket goog.net.WebSocket, goog.net.WebSocket goog.net.WebSocket, event clojure.browser.event, clojure.browser.event clojure.browser.event, clojure.browser.net clojure.browser.net, net clojure.browser.net}, :imports nil}